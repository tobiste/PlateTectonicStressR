% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trigonometry_degrees.R
\name{dist_greatcircle}
\alias{dist_greatcircle}
\title{Distance between points}
\usage{
dist_greatcircle(
  lat1,
  lon1,
  lat2,
  lon2,
  r = earth_radius(),
  method = c("haversine", "haversine2", "vincenty", "euclidean")
)
}
\arguments{
\item{lat1, lon1}{numeric vector. coordinate of point(s) 1 (degrees).}

\item{lat2, lon2}{numeric vector. coordinates of point(s) 2 (degrees).}

\item{r}{numeric. radius of the sphere (default = 6371.0087714 km, i.e. the radius of
the Earth)}

\item{method}{Character. Formulae for calculating great circle distance is
one of:
\describe{
\item{\code{"orthodrome_haversine"}}{uses Haversine formula (the default)}
\item{\code{"orthodrome_haversine2"}}{ uses Haversine formula optimized for 64-bit
floating-point numbers}
\item{\code{"orthodrome_vincenty"}}{uses Vincenty formula for an ellipsoid with
equal major and minor axes}
\item{"euclidean"}{Euclidean distance (not great circle distance!)}
}}
}
\description{
Returns the great circle distance between a location and all grid point in km
}
\examples{
dist_greatcircle(lat1 = 20, lon1 = 12, lat2 = c(50, 30), lon2 = c(40, 32))
dist_greatcircle(
  lat1 = 20, lon1 = 12, lat2 = c(50, 30), lon2 = c(40, 32),
  method = "haversine2"
)
dist_greatcircle(
  lat1 = 20, lon1 = 12, lat2 = c(50, 30), lon2 = c(40, 32),
  method = "vincenty"
)
dist_greatcircle(
  lat1 = 20, lon1 = 12, lat2 = c(50, 30), lon2 = c(40, 32),
  method = "euclidean"
)
}
\seealso{
\code{\link[=orthodrome_haversine]{orthodrome_haversine()}}, \code{\link[=orthodrome_haversine2]{orthodrome_haversine2()}}, \code{\link[=orthodrome_vincenty]{orthodrome_vincenty()}}
}
