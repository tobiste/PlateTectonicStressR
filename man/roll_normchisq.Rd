% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/statistics.R
\name{roll_normchisq}
\alias{roll_normchisq}
\title{Apply Rolling Functions using circular statistics}
\usage{
roll_normchisq(
  obs,
  prd,
  unc = NULL,
  width,
  by.column = FALSE,
  partial = TRUE,
  align = "center",
  fill = NA,
  ...
)
}
\arguments{
\item{obs}{Numeric vector containing the observed azimuth of
\eqn{\sigma_{Hmax}}{SHmax},
same length as \code{prd}}

\item{prd}{Numeric vector containing the modeled azimuths of
\eqn{\sigma_{Hmax}}{SHmax}, i.e.
the return object from \code{model_shmax()}}

\item{unc}{Uncertainty of observed \eqn{\sigma_{Hmax}}{SHmax}, either a
numeric vector or a number}

\item{...}{
  Arguments passed on to \code{\link[zoo:rollapply]{zoo::rollapply}}
  \describe{
    \item{\code{}}{}
  }}
}
\value{
numeric vector  with the results of the rolling function.
}
\description{
A generic function for applying a function to rolling margins of an array.
}
\note{
If the rolling statistics are applied to values that are a function of
distance it is recommended to sort the values first.
}
\examples{
data("plates")
plate_boundary <- subset(plates, plates$pair == "na-pa")
data("san_andreas")
ep <- subset(nuvel1, nuvel1$plate.rot == "na")
distance <- distance_from_pb(
x = san_andreas,
euler = ep,
pb = plate_boundary,
tangential = TRUE
)
dat <- san_andreas[order(distance),]
dat.PoR <- PoR_shmax(san_andreas, ep, "right")
roll_normchisq(dat.PoR$azi.PoR, 135, dat$unc, width = 51)
}
