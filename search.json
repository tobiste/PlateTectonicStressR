[{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://tobiste.github.io/tectonicr/articles/A_tectonicr.html","id":"theoretical-background","dir":"Articles","previous_headings":"","what":"Theoretical background","title":"1. Introduction to tectonicr","text":"theory intraplate tectonics (Wdowinski 1998) allows calculating first-order intraplate deformation induced horizontal displacement deformable plate boundaries. based empirical link directions relative plate motion displacement deformation fields within plate interior adjacent three types deformable plate boundaries: inward-, outward-, tangential-displaced boundaries. model predicts direction intraplate displacement, displacement rate, strain, stress fields terms small circles, great circles, 45\\(^{\\circ}\\) loxodromes around pole rotation two adjacent plates. According theory, principal axis maximum horizontal stress follows small circles inward-displaced boundaries, great circles outward-displaced boundaries, loxodromes tangential-displaced boundaries. theory assumes first-order intraplate deformation predominantly induced horizontal forces acting plate boundaries buoyancy forces arise lateral density variations mid-ocean ridges plate interiors (ridge push).","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/A_tectonicr.html","id":"inward-outward-and-tangential-displaced-boundaries","dir":"Articles","previous_headings":"Theoretical background","what":"Inward, Outward and Tangential Displaced Boundaries","title":"1. Introduction to tectonicr","text":"Inward-moving plate boundaries induce compressional horizontal tractions plate boundary towards plate’s interior along direction relative plate motion. compressional tractions produced forces related subduction, collision, ridge-push. Thus, stresses across convergent plate boundaries characterized dominance thrusting strike-slip faulting (\\(\\sigma_1 \\approx \\sigma_{Hmax}\\)) \\(\\sigma_{Hmax}\\) (maximum horizontal stress) trending parallel plate convergence, .e. parallel small circles around Euler pole relative plate motion. Outward moving plate boundaries produce tensional tractions displacements directed away plate interior. Along spreading ridges intracontinental rifting stresses dominated normal faulting (\\(\\sigma_1 \\approx \\sigma_{vertical}\\), \\(\\sigma_2 \\approx \\sigma_{Hmax}\\)) \\(\\sigma_{Hmax}\\) trending perpendicular plate motion trajectories (.e. along great circles). case intracontinental setting, stresses displacements may associated slab-retreat, back-arc extension, release excess gravitational potential energy stored thickened crust , e.g., gravitational collapse. Along transform boundaries (tangential displaced boundaries), two neighboring plates exert shear tractions tangential orientation boundary (Forsyth Uyeda 1975). Faulting displacement adjacent plate boundaries characterized strike-slip parallel plate motion, thus, principal axes maximum minimum stress orientated angle c. 45\\(^{\\circ}\\) plate motion trajectory. Geometrically, \\(\\sigma_{Hmax}\\) direction follows along 45\\(^{\\circ}\\) loxodromes (lines constant bearing) diverge —depending sense transform boundary— clockwise counterclockwise relative Euler pole intersect small great circles angle 45\\(^{\\circ}\\).","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/A_tectonicr.html","id":"theoretical-direction-of-horizontal-stress-and-deviation-from-the-measured-stress","dir":"Articles","previous_headings":"","what":"Theoretical direction of Horizontal Stress and Deviation From the Measured Stress","title":"1. Introduction to tectonicr","text":"tectonicr basically calculates bearing point interest given Euler pole relative plate motion formula: \\(\\psi_1\\), \\(\\lambda_1\\) longitude latitude point, \\(\\psi_2\\), \\(\\lambda_2\\) longitude latitude Euler pole (\\(\\Delta\\lambda\\) difference longitude). bearing \\(\\theta\\) orientation great circle passes point Euler pole. Thus, reflects theoretical direction \\(\\sigma_{Hmax}\\) follows great circles trajectories. Small circle directions \\(90^{\\circ}\\) loxodrome directions \\(\\pm45^{\\circ}\\) \\(\\theta\\). tectonicr, directions can modeled following steps: First, load package: Next, need specify coordinates Euler pole get directions great circles, small circles, loxodromes around Euler pole given point (e.g. 45\\(^{\\circ}\\)N/20\\(^{\\circ}\\)E). example, Euler pole coordinates: 90\\(^{\\circ}\\)N/0\\(^{\\circ}\\)E. \\(\\sigma_{Hmax}\\) following great small circles loxodromes geometries can modeled model_shmax(): observed stress direction point, e.g. azimuth \\(\\sigma_{Hmax}\\) 90\\(^{\\circ}\\), deviation modeled stress directions can achieved via misfit_shmax():","code":"library(tectonicr) library(ggplot2) # load ggplot library # Example: point <- data.frame(lat = 45, lon = 20) euler <- data.frame(lat = 90, lon = 0) model <- model_shmax(point, euler) print(model) #>   sc ld.ccw gc ld.cw #> 1 90    135  0    45 deviation <- misfit_shmax(model, 90) print(deviation) #>   dev.gc dev.sc dev.ld.cw dev.ld.ccw #> 1    -90      0       -45         45"},{"path":"https://tobiste.github.io/tectonicr/articles/A_tectonicr.html","id":"quantitative-comparison-between-predicted-and-observed-maximum-horizontal-stress","dir":"Articles","previous_headings":"","what":"Quantitative Comparison Between Predicted and Observed Maximum Horizontal Stress","title":"1. Introduction to tectonicr","text":"normalized \\(\\chi^2\\) test quantitatively compares predicted (model_shmax()) observed \\(\\sigma_{Hmax}\\) azimuth relative reported \\(\\sigma\\) standard deviation (Wdowinski 1998). \\(\\alpha_i\\) \\(\\alpha_{predicted}\\) observed predicted directions \\(\\sigma_{Hmax}\\) respect pole rotation, respectively. \\(\\sigma_i\\) parameter reported uncertainty observed azimuth \\(M\\) number observations used test. normalized \\(\\chi^2\\) test yields number range 0-1 indicates quality fit. Low values normalized \\(\\chi^2\\) test (\\(\\leq\\) 0.15 indicate good agreement predicted observed directions. High values (\\(>\\) 0.7) indicate systematic misfit predicted observed directions 90\\(^{\\circ}\\). Random distribution \\(\\sigma_{Hmax}\\) directions results Norm \\(\\chi^2 = 0.33\\) test can run using norm_chisq(obs, prd, unc). obs numeric vector observed \\(\\sigma_{Hmax}\\); prd vector predicted \\(\\sigma_{Hmax}\\) (vector must length obs); unc uncertainty observed \\(\\sigma_{Hmax}\\) (either numeric vector length obs number). plate motions relative Pacific plate according NUVEL-1A model (DeMets et al. 1990) included package can imported :","code":"data(\"nuvel1\") # import example data set for Euler rotations euler <-   subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to Pacific plate point <- data.frame(lat = 45, lon = 20)  prd <- model_shmax(point, euler) norm_chisq(obs = 90, prd$sc, unc = 10) #> [1] 0.2790849 data(\"nuvel1\") head(nuvel1)"},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/articles/B_datasets.html","id":"larger-data-sets","dir":"Articles","previous_headings":"","what":"Larger Data Sets","title":"2. Handling large datasets","text":"tectonicr also handles larger data sets. subset World Stress Map data compilation (Heidbach et al. 2016) included example data set can imported : Modeling stress directions (wrt. geographic North pole) using Euler pole motion North America relative Pacific Pate. Combine model results coordinates observed data ggplot2::ggplot() can used visualize results. orientation axis can displayed function geom_spoke(). position argument position = \"center_spoke\" aligns marker symbol center point. deviation can color coded. deviation_norm() yields normalized value deviation, .e. values 0 90\\(^{\\circ}\\). Also included plate boundary geometries Bird (2003) Alternatively, also NUVEL1 plate boundary model DeMets et al. (1990) stored data(\"nuvel1_plates\").  map shows generally low deviation observed \\(\\sigma_{Hmax}\\) directions modeled stress direction using counter-clockwise 45\\(^{\\circ}\\) loxodromes. normalized \\(\\chi^2\\) test quantifies fit modeled \\(\\sigma_{Hmax}\\) direction observed stress direction considering reported uncertainties measurement. value \\(\\leq\\) 0.15, indicating significantly good fit model. Thus, traction transform plate boundary explain stress direction area.","code":"data(\"san_andreas\") head(san_andreas) #> Simple feature collection with 6 features and 9 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -120.401 ymin: 32.833 xmax: -111.45 ymax: 38 #> Geodetic CRS:  WGS 84 #> # A tibble: 6 × 10 #>   id         lat   lon   azi   unc type  depth quality regime #>   <chr>    <dbl> <dbl> <dbl> <dbl> <chr> <dbl> <fct>   <chr>  #> 1 wsm00967  35.2 -119.     6   3   BO     1.91 D       NA     #> 2 wsm14489  32.8 -120.    16   4.3 BO     1.6  D       NA     #> 3 wsm01115  34.4 -119.    61   5   BO     1.32 D       NA     #> 4 wsm01130  34.3 -117.    90   5   HFM    2.09 D       S      #> 5 wsm19348  38   -111.   133   5   FMA    5    D       N      #> 6 wsm06768  34.7 -120.    65   6   BOT    1.7  D       TS     #> # … with 1 more variable: geometry <POINT [°]> data(\"nuvel1\") euler <- subset(nuvel1, nuvel1$plate.rot == \"na\") san_andreas.prd <- model_shmax(san_andreas, euler) san_andreas.deviation <- misfit_shmax(san_andreas.prd, san_andreas$azi) san_andreas.res <- cbind(   lat = san_andreas$lat,   lon = san_andreas$lon,   azi = san_andreas$azi,   unc = san_andreas$unc,   san_andreas.prd,   san_andreas.deviation ) data(\"plates\") # load plate boundary data set # load some geometries from the rnaturalearth package world <- rnaturalearth::ne_countries(scale = \"small\", returnclass = \"sf\") trajectories <- eulerpole_loxodromes(x = euler, n = 40, cw = FALSE)  ggplot(san_andreas.res) +   geom_sf(data = world, alpha = .5) +   geom_sf(     data = plates,     color = \"red\",     lwd = 2,     alpha = .5   ) +   geom_sf(     data = trajectories,     lty = 2   ) +   geom_spoke(     aes(       x = lon,       y = lat,       radius = 1,       angle = deg2rad(-azi + 90),       color = deviation_norm(dev.ld.ccw),       alpha = san_andreas$quality     ),     position = \"center_spoke\",     na.rm = TRUE   ) +   scale_color_continuous(     type = \"viridis\",     limits = c(0, 90),     name = \"|Deviation| in °\",     breaks = seq(0, 90, 22.5)   ) +   coord_sf(     xlim = range(san_andreas.res$lon),     ylim = range(san_andreas.res$lat),     expand = FALSE,     default_crs = \"WGS84\"   ) +   scale_alpha_discrete(name = \"Quality rank\") norm_chisq(   obs = san_andreas$azi,   prd = san_andreas.prd$ld.ccw,   unc = san_andreas$unc ) #> [1] 1.115582"},{"path":"https://tobiste.github.io/tectonicr/articles/B_datasets.html","id":"variation-of-the-direction-of-the-maximum-horizontal-stress-wrt--to-the-distance-to-the-plate-boundary","dir":"Articles","previous_headings":"","what":"Variation of the Direction of the Maximum Horizontal Stress wrt. to the Distance to the Plate Boundary","title":"2. Handling large datasets","text":"direction maximum horizontal stress correlates plate motion direction plate boundary zone. Towards plate interior, plate boundary forces become weaker stress sources probably dominate. visualize variation \\(\\sigma_{Hmax}\\) wrt. distance plate boundary, need transfer direction \\(\\sigma_{Hmax}\\) geographic reference system (.e. azimuth deviation direction geographic North pole) Pole Rotation (PoR) reference system (.e. azimuth deviation Euler pole). PoR coordinate reference system oblique transformation geographical coordinate system Euler pole coordinates translation factors. azimuth PoR reference system \\(\\alpha_{PoR}\\) angular difference azimuth geographic reference system \\(\\alpha_{geo}\\) (initial) bearing great circle passes data point Euler pole \\(\\theta\\): function PoR_shmax() returns transformed azimuth \\(\\sigma_{Hmax}\\) , given, deviation predicted \\(\\sigma_{Hmax}\\) direction related plate boundary type: calculate distance plate boundary, plate boundary geometries data points (geographical coordinates) transformed PoR reference system. PoR system, distance latitudinal longitudinal difference data points inward/outward tangential moving plate boundaries, respectively. done function distance_from_pb(), returns angular distances. Finally, visualize \\(\\sigma_{Hmax}\\) direction wrt. distance plate boundary:  Close dextral plate boundary, majority stress data strike-slip fault regime oriented around 135° wrt. Euler pole. Thus, date parallel predicted stress sourced right-lateral displaced plate boundary. Away plate boundary, data becomes noisy. Azimuth (PoR) vs. distance plot also allows identify whether less known plate boundary represents inward, outward, tangential displaced boundary. relationship azimuth distance can better visualized using deviation (normalized data precision) predicted stress direction, .e. normalized \\(\\chi^2\\):  can see data fact starts scatter notably beyond distance 4° becomes random ca. 8° away plate boundary. Thus, North American-Pacific plate boundary zone San Andreas Fault approx. 4–6° (ca. 440–670 km) wide. normalized \\(\\chi^2\\) vs. distance plot allows specify width plate boundary zone.","code":"san_andreas.res <- cbind(   san_andreas.res,   PoR_shmax(san_andreas, euler, type = \"right\") ) plate_boundary <- subset(plates, plates$pair == \"na-pa\")  san_andreas.res$distance <-   distance_from_pb(     x = san_andreas,     euler = euler,     pb = plate_boundary,     tangential = TRUE   ) ggplot(san_andreas.res, aes(x = distance, y = azi.PoR)) +   coord_cartesian(ylim = c(0, 180)) +   labs(x = \"Distance from plate boundary (°)\", y = \"Azimuth in PoR (°)\") +   geom_hline(yintercept = c(0, 45, 90, 135, 180), lty = 3) +   geom_pointrange(     aes(       ymin = azi.PoR - unc, ymax = azi.PoR + unc,       color = san_andreas$regime, alpha = san_andreas$quality     ),     size = .25   ) +   geom_smooth() +   scale_y_continuous(     breaks = seq(-180, 360, 45),     sec.axis = sec_axis(       ~.,       name = NULL,       breaks = c(0, 45, 90, 135, 180),       labels = c(\"Outward\", \"Tan (L)\", \"Inward\", \"Tan (R)\", \"Outward\")     )   ) +   scale_alpha_discrete(name = \"Quality rank\") +   scale_color_discrete(name = \"Tectonic regime\") ggplot(san_andreas.res, aes(x = distance, y = nchisq)) +   coord_cartesian(ylim = c(0, 1)) +   labs(x = \"Distance from plate boundary (°)\", y = expression(Norm ~ chi^2)) +   geom_hline(yintercept = c(0.15, .33, .7), lty = 3) +   geom_smooth() +   geom_point(aes(color = san_andreas$regime)) +   scale_y_continuous(sec.axis = sec_axis(     ~.,     name = NULL,     breaks = c(.15 / 2, .33, .7 + 0.15),     labels = c(\"Good fit\", \"Random\", \"Systematic\\nmisfit\")   )) +   scale_color_discrete(name = \"Tectonic regime\")"},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/articles/C_stress_trajectories.html","id":"equivalent-rotations","dir":"Articles","previous_headings":"","what":"Equivalent rotations","title":"3. Plotting trajectories of theoretic stress directions","text":"Relative plate motions set (global) plate motions can retrieved transforming set Euler rotations parameters equivalent rotations. NUVEL1 data set offers global plate motions relative Pacific plate (DeMets et al. 1990). order extract plate motions two plates (e.g. plates relative Eurasia), one transform rotations new, equivalent reference system (.e. rotation respect (wrt.) Eurasia). tectonicr can done : Alternatively, PB2002 model Bird (2003) also provided ready-use example dataset global plate motions.","code":"data(\"nuvel1\") nuvel1.eu <- equivalent_rotation(nuvel1, fixed = \"eu\") head(nuvel1.eu) #>   plate.rot       lat        lon      angle plate.fix #> 1        af  21.22431  -20.25390 0.12839397        eu #> 2        an  37.85378   77.54263 0.05402503        eu #> 3        ar  24.77897   14.14654 0.51993229        eu #> 4        au  15.28437   40.87794 0.71935116        eu #> 5        ca -50.85213  -50.33611 0.12128773        eu #> 6        co  19.84642 -115.85295 1.36455727        eu data(\"pb2002\") pb2002.eu <- equivalent_rotation(pb2002, fixed = \"eu\") head(pb2002.eu) #>   plate.rot       lat       lon      angle plate.fix #> 1        af  21.21561 -20.26957 0.12277039        eu #> 2        am  22.31703 -73.10293 0.09095410        eu #> 3        an  37.88026  77.51306 0.05166503        eu #> 4        ap -34.90145 -75.14215 0.42687654        eu #> 5        ar  28.26668  11.83784 0.53270842        eu #> 6        as -27.83397  95.48900 0.27101254        eu"},{"path":"https://tobiste.github.io/tectonicr/articles/C_stress_trajectories.html","id":"plotting-pole-of-rotation-grids","dir":"Articles","previous_headings":"","what":"Plotting Pole of Rotation Grids","title":"3. Plotting trajectories of theoretic stress directions","text":"visualize theoretical trajectories direction \\(\\sigma_{Hmax}\\) (great circles, small circles, loxodomes), need transform locations geographical coordinate system PoR coordinate system. transformations done function functions geographical_to_PoR() PoR_to_geographical(). base functions eulerpole_smallcircles(), eulerpole_greatcircles(), eulerpole_loxodromes() allow draw theoretical trajectories geographical coordinates.","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/C_stress_trajectories.html","id":"small-circles","dir":"Articles","previous_headings":"Plotting Pole of Rotation Grids","what":"Small Circles","title":"3. Plotting trajectories of theoretic stress directions","text":"Function eulerpole_smallcircles(x, gridsize) returns Small circles simple feature(sf) giving data.frame Euler pole coordinates lat lon (x) number small circles (n). example small circles around Euler pole relative motion Indian plate relative Eurasian plate (transformed NUVEL1 model). returnclass option eulerpole_smallcircles() provides output types \"sf\" (simple feature) \"sp\" (Spatial* object) small circles. eventually plot small circles ggplot, recommend extract sf feature plot geom_sf(): Predicted SHmax trajectories small circles around -Eu Euler pole.","code":"euler <-   subset(nuvel1.eu, nuvel1$plate.rot == \"in\") # India relative to Eurasia euler.sm <- eulerpole_smallcircles(euler) data(\"plates\") # load plate boundary data set world <- rnaturalearth::ne_countries(scale = \"small\", returnclass = \"sf\")  ggplot() +   geom_sf(data = world, alpha = .5) +   geom_sf(     data = plates,     color = \"red\",     alpha = .5   ) +   labs(title = \"India relative to Eurasia\", subtitle = \"source: NUVEL1\") +   geom_sf(     data = euler.sm,     aes(lty = \"small circles\"),     color = \"darkblue\", fill = NA,     alpha = .5   ) +   geom_point(     data = euler,     aes(lon, lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   geom_point(     data = euler,     aes(lon + 180, -lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   coord_sf(default_crs = \"WGS84\", crs = sf::st_crs(\"ESRI:54030\"))"},{"path":"https://tobiste.github.io/tectonicr/articles/C_stress_trajectories.html","id":"great-circles","dir":"Articles","previous_headings":"Plotting Pole of Rotation Grids","what":"Great Circles","title":"3. Plotting trajectories of theoretic stress directions","text":"Great circles lines cut small circles 90\\(^{\\circ}\\) Euler pole. Function eulerpole_greatcircles(x, n) returns great circles sf object giving data.frame Euler pole coordinates lat lon (x) number great circles n, great circle angles (360/d). Predicted SHmax trajectories great circles passing -Eu Euler pole.","code":"euler.gm <- eulerpole_greatcircles(euler)  ggplot() +   geom_sf(data = world, alpha = .5) +   geom_sf(     data = plates,     color = \"red\",     alpha = .5   ) +   labs(title = \"India relative to Eurasia\", subtitle = \"source: NUVEL1\") +   geom_sf(     data = euler.sm,     aes(lty = \"small circles\"),     color = \"darkblue\",     alpha = .5   ) +   geom_sf(     data = euler.gm,     aes(lty = \"great circles\"),     color = \"darkblue\"   ) +   geom_point(     data = euler,     aes(lon, lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   geom_point(     data = euler,     aes(lon + 180, -lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   coord_sf(default_crs = \"WGS84\", crs = sf::st_crs(\"ESRI:54030\"))"},{"path":"https://tobiste.github.io/tectonicr/articles/C_stress_trajectories.html","id":"loxodromes","dir":"Articles","previous_headings":"Plotting Pole of Rotation Grids","what":"Loxodromes","title":"3. Plotting trajectories of theoretic stress directions","text":"Loxodrome (also called Rhumb Line) curve cutting small circles constant angle. Thus, small great circles 0\\(^{\\circ}\\) 90\\(^{\\circ}\\) loxodromes, respectively. Function eulerpole_loxodromes(x, n) returns loxodromes sf object giving data.frame Euler pole coordinates lat lon (x) angle loxodromes, direction, sense. Predicted SHmax trajectories 45-degree loxodromes circles directed towards -Eu Euler pole.","code":"euler.ld <- eulerpole_loxodromes(x = euler, angle = 45, n = 10, cw = TRUE)  ggplot() +   labs(title = \"India relative to Eurasia\", subtitle = \"source: NUVEL1\") +   geom_sf(data = world, alpha = .5) +   geom_sf(     data = plates,     color = \"red\",     alpha = .5   ) +   geom_sf(     data = euler.sm,     aes(lty = \"small circles\"),     color = \"darkblue\",     alpha = .5   ) +   geom_sf(     data = euler.ld,     aes(lty = \"clockwise loxodromes\"),     color = \"darkblue\"   ) +   geom_point(     data = euler,     aes(lon, lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   geom_point(     data = euler,     aes(lon + 180, -lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   coord_sf(default_crs = \"WGS84\", crs = sf::st_crs(\"ESRI:54030\"))"},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/articles/D_statistics.html","id":"mean-direction","dir":"Articles","previous_headings":"","what":"Mean direction","title":"4. Circular statistics","text":"Directional data pi-periodical. Thus, calculation mean, average 35° 355° 15° instead 195°. tectonicr provides circular mean (circular_mean()) quasi-median circle (circular_median()) metrics describe average direction:","code":"data(\"san_andreas\") circular_mean(san_andreas$azi) #> [1] 10.66086 circular_median(san_andreas$azi) #> [1] 9"},{"path":"https://tobiste.github.io/tectonicr/articles/D_statistics.html","id":"quality-weighted-mean-direction","dir":"Articles","previous_headings":"","what":"Quality weighted mean direction","title":"4. Circular statistics","text":"stress data heteroscedastic, data less precise direction less impact final mean direction weighted mean median uses reported uncertainties measurements weights final average value inverse uncertainties: spread directional data can expressed standard deviation (mean) interquartile range (median):","code":"circular_mean(san_andreas$azi, 1 / san_andreas$unc) #> [1] 9.971235 circular_median(san_andreas$azi, 1 / san_andreas$unc) #> [1] 9 circular_sd(san_andreas$azi, 1 / san_andreas$unc) # standard deviation #> [1] 38.43917 circular_IQR(san_andreas$azi, 1 / san_andreas$unc) # interquartile range #> [1] 30"},{"path":"https://tobiste.github.io/tectonicr/articles/D_statistics.html","id":"statistics-in-the-euler-pole-reference-frame","dir":"Articles","previous_headings":"","what":"Statistics in the Euler pole reference frame","title":"4. Circular statistics","text":"statistics can also applied stress data transferred Euler pole reference frame:","code":"data(\"nuvel1\") euler <- subset(nuvel1, nuvel1$plate.rot == \"na\") san_andreas.por <- PoR_shmax(san_andreas, euler, type = \"right\") circular_mean(san_andreas.por$azi, 1/san_andreas$unc) #> [1] 138.8937 circular_sd(san_andreas.por$azi, 1/san_andreas$unc) #> [1] 37.12227  circular_median(san_andreas.por$azi, 1/san_andreas$unc) #> [1] 137.0094 circular_IQR(san_andreas.por$azi, 1/san_andreas$unc) #> [1] 25.32193"},{"path":"https://tobiste.github.io/tectonicr/articles/D_statistics.html","id":"interpolation","dir":"Articles","previous_headings":"","what":"Interpolation","title":"4. Circular statistics","text":"Spatial interpolation stress data based aforementioned metrics (algorithm modified version MATLAB script ‘stress2grid’ Ziegler Heidbach (2017)). defaults use quality inverse distance weighting mean, well 25% cut-standard deviation. data can now visualized:  interpolated direction far apart data points suffer distortions due underlying projection. order prevent effects, interpolation can done PoR reference frame direction stays constant matter distance data points. Assuming stress field sourced plate boundary force, model-based interpolation allows reliable results areas close plate boundaries.","code":"mean_SH <- stress2grid(san_andreas, gridsize = 1, R_range = seq(50, 350, 100)) trajectories <- eulerpole_loxodromes(x = euler, n = 40, cw = FALSE) ggplot(mean_SH) +   borders(fill = \"grey80\") +   geom_sf(data = trajectories, lty = 2) +   geom_spoke(data = san_andreas, aes(lon, lat, angle = deg2rad(90 - azi)), radius = .5, color = \"grey30\", position = \"center_spoke\") +   geom_spoke(aes(lon, lat, angle = deg2rad(90 - azi), alpha = sd, color = mdr), radius = 1, position = \"center_spoke\", size = 1) +   coord_sf(xlim = range(san_andreas$lon), ylim = range(san_andreas$lat)) +   scale_alpha(name = \"Standard deviation\", range = c(1, .25)) +   scale_color_continuous(     type = \"viridis\",     limits = c(0, 1),     name = \"Wavelength\\n(R-normalized mean distance)\",     breaks = seq(0, 1, .25)   ) +   facet_wrap(~R) mean_SH_PoR <- PoR_stress2grid(san_andreas, euler = euler, gridsize = 1, R_range = seq(50, 350, 100)) ggplot(mean_SH_PoR) +   borders(fill = \"grey80\") +   geom_sf(data = trajectories, lty = 2) +   geom_spoke(data = san_andreas, aes(lon, lat, angle = deg2rad(90 - azi)), radius = .5, color = \"grey30\", position = \"center_spoke\") +   geom_spoke(aes(lon, lat, angle = deg2rad(90 - azi), alpha = sd, color = mdr), radius = 1, position = \"center_spoke\", size = 1) +   coord_sf(xlim = range(san_andreas$lon), ylim = range(san_andreas$lat)) +   scale_alpha(name = \"Standard deviation\", range = c(1, .25)) +   scale_color_continuous(     type = \"viridis\",     limits = c(0, 1),     name = \"Wavelength\\n(R-normalized mean distance)\",     breaks = seq(0, 1, .25)   ) +   facet_wrap(~R)"},{"path":"https://tobiste.github.io/tectonicr/articles/D_statistics.html","id":"rose-diagram","dir":"Articles","previous_headings":"","what":"Rose diagram","title":"4. Circular statistics","text":"tectonicr offers rose diagram, .e. histogram angular data.","code":"rose(san_andreas$azi, col = \"grey\", main = \"North pole\") rose(san_andreas.por$azi, col = \"grey\", main = \"Euler pole\")"},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tobias Stephan. Author, maintainer.","code":""},{"path":"https://tobiste.github.io/tectonicr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stephan T (2023). tectonicr: Modeling Direction Maximum Horizontal Stress using Relative Plate Motion. R package version 0.2.5, https://tobiste.github.io/tectonicr/.","code":"@Manual{,   title = {tectonicr: Modeling the Direction of the Maximum Horizontal Stress using Relative Plate Motion},   author = {Tobias Stephan},   year = {2023},   note = {R package version 0.2.5},   url = {https://tobiste.github.io/tectonicr/}, }"},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"tectonicr","dir":"","previous_headings":"","what":"Modeling the Direction of the Maximum Horizontal Stress using\n    Relative Plate Motion","title":"Modeling the Direction of the Maximum Horizontal Stress using\n    Relative Plate Motion","text":"tectonicr free open-source R package modeling analyzing direction maximum horizontal stress (SHmax) based empirical link direction intraplate stress direction relative motion neighboring plates. following methods available: Theoretical direction SHmax: predicted stress field adjacent plate boundary calculated using relative plate motion neighboring plates using function model_shmax(). deviation misfit prediction observation can obtained function misfit_shmax() statistically evaluated applying norm_chisq(). Distance plate boundary: distance_from_pb() gives distance stress data point plate boundary measured along stress trajectories. Visualization trajectories theoretical stress field terms small circles, great circles, lines constant bearing. eulerpole_paths() functions generates sf object containing spatial information suitable plot , instance, ggplot(). Relative rotations given set plate motion parameters: equivalent_rotation() transfers set plate motion parameters relative plate motions among given plates. Average direction set SHmax data using (weighted) mean median pi-directional data. Spatial interpolation SHmax: stress2grid() uses distance, method, quality-weighted mean direction stress data","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Modeling the Direction of the Maximum Horizontal Stress using\n    Relative Plate Motion","text":"must R installed system (see http://r-project.org). install tectonicr Github, also need remotes package. can installed typing following code R command line prompt:","code":"install.packages(\"remotes\")"},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Modeling the Direction of the Maximum Horizontal Stress using\n    Relative Plate Motion","text":"recent development version tectonicr available Github can installed system follows:","code":"remotes::install_github('tobiste/tectonicr') library('tectonicr')"},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Modeling the Direction of the Maximum Horizontal Stress using\n    Relative Plate Motion","text":"https://tobiste.github.io/tectonicr/articles/tectonicr.html","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"author","dir":"","previous_headings":"","what":"Author","title":"Modeling the Direction of the Maximum Horizontal Stress using\n    Relative Plate Motion","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"how-to-cite","dir":"","previous_headings":"","what":"How to cite","title":"Modeling the Direction of the Maximum Horizontal Stress using\n    Relative Plate Motion","text":"referencing package, please cite package DOI: 10.5281/zenodo.7042082.","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"useful-references","dir":"","previous_headings":"","what":"Useful References","title":"Modeling the Direction of the Maximum Horizontal Stress using\n    Relative Plate Motion","text":"Wdowinski, S. (1998). theory intraplate tectonics. Journal Geophysical Research: Solid Earth, 103(3), 5037–5059. http://dx.doi.org/10.1029/97JB03390 Heidbach, O., Reinecker, J., Tingay, M., Müller, B., Sperner, B., Fuchs, K., & Wenzel, F. (2007). Plate boundary forces enough: Second- third-order stress patterns highlighted World Stress Map database. Tectonics, 26(6), n/-n/. https://doi.org/10.1029/2007TC002133 Heidbach, O., Rajabi, M., Reiter, K., Ziegler, M., & Team, W. (2016). World Stress Map Database Release 2016. V. 1.1. GFZ Data Services. https://doi.org/10.5880/WSM.2016.001 Zoback, M. Lou, Zoback, M. D., Adams, J., Assumpção, M., Bell, S., Bergman, E. ., Blümling, P., Brereton, N. R., Denham, D., Ding, J., Fuchs, K., Gay, N., Gregersen, S., Gupta, H. K., Gvishiani, ., Jacob, K., Klein, R., Knoll, P., Magee, M., … Zhizhin, M. (1989). Global patterns tectonic stress. Nature, 341(6240), 291–298. https://doi.org/10.1038/341291a0","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Modeling the Direction of the Maximum Horizontal Stress using\n    Relative Plate Motion","text":"GPL-3.0 License","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"PoR coordinates — PoR_coordinates","title":"PoR coordinates — PoR_coordinates","text":"Retrieve PoR equivalent coordinates object","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PoR coordinates — PoR_coordinates","text":"","code":"PoR_coordinates(x, euler)"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PoR coordinates — PoR_coordinates","text":"x sf data.frame containing lat lon coordinates (lat, lon) euler \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PoR coordinates — PoR_coordinates","text":"data.frame PoR coordinates (lat.PoR, lon.PoR)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PoR coordinates — PoR_coordinates","text":"","code":"data(\"nuvel1\") euler <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to Pacific plate data(\"san_andreas\") san_andreas.por_sf <- PoR_coordinates(san_andreas, euler) head(san_andreas.por_sf) #>    lat.PoR   lon.PoR #> 1 57.39203 -80.90388 #> 2 55.14823 -78.62019 #> 3 56.68739 -80.06332 #> 4 57.73382 -78.23767 #> 5 63.80396 -78.40840 #> 6 56.06259 -81.64269 san_andreas.por_df <- PoR_coordinates(sf::st_drop_geometry(san_andreas), euler) head(san_andreas.por_df) #>    lat.PoR   lon.PoR #> 1 57.39203 -80.90388 #> 2 55.14823 -78.62019 #> 3 56.68739 -80.06332 #> 4 57.73382 -78.23767 #> 5 63.80396 -78.40840 #> 6 56.06259 -81.64269"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"PoR coordinate reference system — PoR_crs","title":"PoR coordinate reference system — PoR_crs","text":"Create reference system transformed Euler pole coordinate","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PoR coordinate reference system — PoR_crs","text":"","code":"PoR_crs(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PoR coordinate reference system — PoR_crs","text":"x \"data.frame\" \"euler.pole\" object containing geographical coordinates Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PoR coordinate reference system — PoR_crs","text":"PoR coordinate reference system oblique transformation geographical coordinate system Euler pole coordinates translation factors.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PoR coordinate reference system — PoR_crs","text":"","code":"data(\"nuvel1\") euler <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to Pacific plate PoR_crs(euler) #> Coordinate Reference System: #>   User input: +proj=ob_tran +o_proj=longlat +datum=WGS84 +o_lat_p=48.709 +o_lon_p=-78.167  #>   wkt: #> GEOGCRS[\"unnamed\", #>     BASEGEOGCRS[\"unknown\", #>         DATUM[\"World Geodetic System 1984\", #>             ELLIPSOID[\"WGS 84\",6378137,298.257223563, #>                 LENGTHUNIT[\"metre\",1]], #>             ID[\"EPSG\",6326]], #>         PRIMEM[\"Greenwich\",0, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8901]]], #>     DERIVINGCONVERSION[\"unknown\", #>         METHOD[\"PROJ ob_tran o_proj=longlat\"], #>         PARAMETER[\"o_lat_p\",48.709, #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]], #>         PARAMETER[\"o_lon_p\",-78.167, #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]]], #>     CS[ellipsoidal,2], #>         AXIS[\"longitude\",east, #>             ORDER[1], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]], #>         AXIS[\"latitude\",north, #>             ORDER[2], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]]]"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting the \\(\\sigma_{Hmax}\\) azimuth — PoR_plot","title":"Plotting the \\(\\sigma_{Hmax}\\) azimuth — PoR_plot","text":"Creates set plots including azimuth function distance plate boundary, Norm Chi-squared function distance plate boundary, rose diagram frequency distribution azimuths.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting the \\(\\sigma_{Hmax}\\) azimuth — PoR_plot","text":"","code":"PoR_plot(azi, distance, prd, unc, regime, k = 51, ...)"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting the \\(\\sigma_{Hmax}\\) azimuth — PoR_plot","text":"azi numeric. Azimuth \\(\\sigma_{Hmax}\\) distance numeric. Distance plate boundary prd numeric. predicted direction \\(\\sigma_{Hmax}\\) unc numeric. Uncertainty observed \\(\\sigma_{Hmax}\\), either numeric vector number regime character vector. stress regime (following classification World Stress Map) k integer. window width (number observations) rolling statistics. odd number. ... optional arguments zoo::rollapply(), rose(), plot()","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting the \\(\\sigma_{Hmax}\\) azimuth — PoR_plot","text":"","code":"data(\"nuvel1\") na_pa <- subset(nuvel1, nuvel1$plate.rot == \"na\")  data(\"plates\") plate_boundary <- subset(plates, plates$pair == \"na-pa\")  data(\"san_andreas\") res <- PoR_shmax(san_andreas, na_pa, \"right\") d <- distance_from_pb(san_andreas, na_pa, plate_boundary, tangential = TRUE) PoR_plot(res$azi.PoR, d, res$prd, san_andreas$unc, san_andreas$regime)"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Theoretical Direction of Maximum Horizontal Stress in PoR reference\nsystem — PoR_shmax","title":"Theoretical Direction of Maximum Horizontal Stress in PoR reference\nsystem — PoR_shmax","text":"Models direction maximum horizontal stress \\(\\sigma_{Hmax}\\) Euler pole (Pole Rotation) coordinate reference system. type plate boundary given, also gives deviation theoretically predicted azimuth \\(\\sigma_{Hmax}\\), deviation, normalized \\(\\chi^2\\) statistics.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theoretical Direction of Maximum Horizontal Stress in PoR reference\nsystem — PoR_shmax","text":"","code":"PoR_shmax(df, euler, type = c(\"none\", \"in\", \"out\", \"right\", \"left\"))"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theoretical Direction of Maximum Horizontal Stress in PoR reference\nsystem — PoR_shmax","text":"df data.frame containing coordinates point(s) (lat, lon), direction \\(\\sigma_{Hmax}\\) azi standard deviation unc (optional) euler \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler  pole type Character. Type plate boundary (optional). Can \"\", \"\", \"right\", \"left\" outward, inward, right-lateral, left-lateral moving plate boundaries, respectively. \"none\" (default), PoR-equivalent azimuth returned.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theoretical Direction of Maximum Horizontal Stress in PoR reference\nsystem — PoR_shmax","text":"Either numeric vector azimuths transformed coordinate system, \"data.frame\" \"azi.PoR\" transformed azimuths, \"prd\" predicted azimuths, \"dev\" deviation, \"nchisq\" normalized \\(\\chi^2\\) statistics.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Theoretical Direction of Maximum Horizontal Stress in PoR reference\nsystem — PoR_shmax","text":"According theory, azimuth \\(\\sigma_{Hmax}\\) pole rotation reference system approximate 0 (180), 45, 90, 135 degrees stress sourced outward, sinistral, inward, dextral moving plate boundary, respectively. directions \\(\\sigma_{Hmax}\\) respect four plate boundary types.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theoretical Direction of Maximum Horizontal Stress in PoR reference\nsystem — PoR_shmax","text":"","code":"data(\"nuvel1\") # North America relative to Pacific plate: euler <- subset(nuvel1, nuvel1$plate.rot == \"na\")  data(\"san_andreas\") res <- PoR_shmax(san_andreas, euler, type = \"right\") head(res) #>      azi.PoR prd         dev       nchisq #> 1 133.099514 135   -1.900486 0.0004459072 #> 2 145.655205 135   10.655205 0.0140164678 #> 3   8.999536 135 -126.000464 0.3599938109 #> 4  38.553903 135  -96.446097 0.8618832902 #> 5  77.882633 135  -57.117367 0.4027646442 #> 6  12.393901 135 -122.606099 0.4066740573"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_stress2grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Stress2Grid in PoR system — PoR_stress2grid","title":"Stress2Grid in PoR system — PoR_stress2grid","text":"data transformed PoR system interpolation. interpolation grid returned geographical coordinates azimuths.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_stress2grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stress2Grid in PoR system — PoR_stress2grid","text":"","code":"PoR_stress2grid(x, euler, ...)"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_stress2grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stress2Grid in PoR system — PoR_stress2grid","text":"x sf object containing azi SHmax degree unc Uncertainties SHmax degree type Methods used determination orientation SHmax euler \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler  pole ... Arguments passed stress2grid()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_stress2grid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stress2Grid in PoR system — PoR_stress2grid","text":"Stress field interpolation PoR system","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_stress2grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stress2Grid in PoR system — PoR_stress2grid","text":"","code":"data(\"san_andreas\") data(\"nuvel1\") ep <- subset(nuvel1, nuvel1$plate.rot == \"na\") PoR_stress2grid(san_andreas, ep) #> Simple feature collection with 1119 features and 8 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -125.0802 ymin: 21.44743 xmax: -106.3859 ymax: 41.36318 #> Geodetic CRS:  WGS 84 #> # A tibble: 1,119 × 9 #> # Groups:   R [20] #>      lon   lat   azi    sd     R    mdr     N             geometry azi.PoR #>  * <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl> <int>          <POINT [°]>   <dbl> #>  1 -125.  34.1  NA     0      50 NA         0 (-125.0802 34.07892)     NA  #>  2 -125.  34.1  NA     0     100 NA         0 (-125.0802 34.07892)     NA  #>  3 -125.  34.1  NA     0     150 NA         0 (-125.0802 34.07892)     NA  #>  4 -125.  34.1  NA     0     200 NA         1 (-125.0802 34.07892)     NA  #>  5 -125.  34.1  NA     0     250 NA         1 (-125.0802 34.07892)     NA  #>  6 -125.  34.1  NA     0     300 NA         2 (-125.0802 34.07892)     NA  #>  7 -125.  34.1  NA     0     350 NA         2 (-125.0802 34.07892)     NA  #>  8 -125.  34.1  32.2  24.5   450  0.922    46 (-125.0802 34.07892)    160. #>  9 -125.  34.1  28.9  22.8   500  0.887    85 (-125.0802 34.07892)    156. #> 10 -125.  34.1  29.7  21.1   550  0.890   185 (-125.0802 34.07892)    157. #> # … with 1,109 more rows"},{"path":"https://tobiste.github.io/tectonicr/reference/PositionCenterSpoke.html","id":null,"dir":"Reference","previous_headings":"","what":"Centrically aligned geom_spoke marker — PositionCenterSpoke","title":"Centrically aligned geom_spoke marker — PositionCenterSpoke","text":"\"position\" subclass \"center_spoke\" center ggplot::geom_spoke() marker origin","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PositionCenterSpoke.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Centrically aligned geom_spoke marker — PositionCenterSpoke","text":"","code":"PositionCenterSpoke"},{"path":"https://tobiste.github.io/tectonicr/reference/PositionCenterSpoke.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Centrically aligned geom_spoke marker — PositionCenterSpoke","text":"object class PositionCenterSpoke (inherits Position, ggproto, gg) length 2.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PositionCenterSpoke.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Centrically aligned geom_spoke marker — PositionCenterSpoke","text":"https://stackoverflow.com/questions/55474143/--center-geom-spoke-around--origin","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/Q4_to_euler.html","id":null,"dir":"Reference","previous_headings":"","what":"Euler angle/axis from quaternion — Q4_to_euler","title":"Euler angle/axis from quaternion — Q4_to_euler","text":"Euler angle/axis quaternion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/Q4_to_euler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euler angle/axis from quaternion — Q4_to_euler","text":"","code":"Q4_to_euler(q)"},{"path":"https://tobiste.github.io/tectonicr/reference/Q4_to_euler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Euler angle/axis from quaternion — Q4_to_euler","text":"q object class \"quaternion\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/Q4_to_euler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Euler angle/axis from quaternion — Q4_to_euler","text":"\"euler.pole\" object","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/abs_vel.html","id":null,"dir":"Reference","previous_headings":"","what":"Absolute Plate Velocity — abs_vel","title":"Absolute Plate Velocity — abs_vel","text":"Calculates absolute angular velocity plate motion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/abs_vel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Absolute Plate Velocity — abs_vel","text":"","code":"abs_vel(w, alpha, r = earth_radius())"},{"path":"https://tobiste.github.io/tectonicr/reference/abs_vel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Absolute Plate Velocity — abs_vel","text":"w Angular velocity rate angle rotation alpha Angular distance Euler pole small circle around Euler pole r Radius. Default WGS84 Earth's radius (6371.009 km)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/abs_vel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Absolute Plate Velocity — abs_vel","text":"Number (km/Myr)","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/abs_vel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Absolute Plate Velocity — abs_vel","text":"","code":"abs_vel(0.21, 0) #> [1] 0 abs_vel(0.21, 45) #> [1] 16.51163 abs_vel(0.21, 90) #> [1] 23.35097"},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Degrees to Radians — angle-conversion","title":"Degrees to Radians — angle-conversion","text":"Helper functions transform angles degrees radians.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Degrees to Radians — angle-conversion","text":"","code":"rad2deg(rad)  deg2rad(deg)"},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Degrees to Radians — angle-conversion","text":"rad (array ) angles radians. deg (array ) angles degrees.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Degrees to Radians — angle-conversion","text":"angle degrees radians.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Degrees to Radians — angle-conversion","text":"","code":"deg2rad(seq(-90, 90, 15)) #>  [1] -1.5707963 -1.3089969 -1.0471976 -0.7853982 -0.5235988 -0.2617994 #>  [7]  0.0000000  0.2617994  0.5235988  0.7853982  1.0471976  1.3089969 #> [13]  1.5707963 rad2deg(seq(-pi / 2, pi / 2, length = 13)) #>  [1] -90 -75 -60 -45 -30 -15   0  15  30  45  60  75  90"},{"path":"https://tobiste.github.io/tectonicr/reference/angle_vectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Angle Between Two Vectors — angle_vectors","title":"Angle Between Two Vectors — angle_vectors","text":"Calculates angle two vectors","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle_vectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Angle Between Two Vectors — angle_vectors","text":"","code":"angle_vectors(x, y)"},{"path":"https://tobiste.github.io/tectonicr/reference/angle_vectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Angle Between Two Vectors — angle_vectors","text":"x, y Vectors Cartesian coordinates. Can vectors three numbers matrix 3 columns (x, y, z)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle_vectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Angle Between Two Vectors — angle_vectors","text":"numeric; angle degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle_vectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Angle Between Two Vectors — angle_vectors","text":"","code":"u <- c(1, -2, 3) v <- c(-2, 1, 1) angle_vectors(u, v) #> [1] 96.26395"},{"path":"https://tobiste.github.io/tectonicr/reference/circle_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary statistics of directional data — circle_stats","title":"Summary statistics of directional data — circle_stats","text":"Calculate (weighted median) standard deviation orientation data.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary statistics of directional data — circle_stats","text":"","code":"circular_mean(x, w = NULL, axial = TRUE, na.rm = TRUE)  circular_var(x, w = NULL, axial = TRUE, na.rm = TRUE)  circular_sd(x, w = NULL, axial = TRUE, na.rm = TRUE)  circular_median(x, w = NULL, axial = TRUE, na.rm = TRUE)  circular_quantiles(x, w = NULL, axial = TRUE, na.rm = TRUE)  circular_IQR(x, w = NULL, axial = TRUE, na.rm = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/circle_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary statistics of directional data — circle_stats","text":"x Data values. vector numeric values degrees, mean, median standard deviation required. w (optional) Weights. vector positive numbers, length x. axial logical. Whether data axial, .e. pi-periodical (TRUE, default) circular, .e. 2pi-periodical (FALSE). na.rm logical value indicating whether NA values x stripped computation proceeds.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_stats.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Summary statistics of directional data — circle_stats","text":"Weighting may reciprocal data uncertainties.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_stats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Summary statistics of directional data — circle_stats","text":"Mardia, K.V. (1972). Statistics Directional Data: Probability Mathematical Statistics. London: Academic Press. Ziegler, M. O.; Heidbach O. (2019). Manual Matlab Script Stress2Grid v1.1. WSM Technical Report 19-02, GFZ German Research Centre Geosciences. doi:10.2312/wsm.2019.002 Heidbach, O., Tingay, M., Barth, ., Reinecker, J., Kurfess, D., & Mueller, B. (2010). Global crustal stress pattern based World Stress Map database release 2008. Tectonophysics 482, 3–15, doi:10.1016/j.tecto.2009.07.023","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary statistics of directional data — circle_stats","text":"","code":"x <- c(175, 179, 0, 2, 4) unc <- c(5, 1, 0.1, 2, 4) circular_mean(x, 1 / unc) #> [1] 0.0001016599 circular_var(x, 1 / unc) #> [1] 0.0006107598 circular_sd(x, 1 / unc) #> [1] 2.002807 circular_median(x, 1 / unc) #> [1] 0 circular_quantiles(x, 1 / unc) #>          0%         25%         50%         75%        100%  #> -5.00000000 -2.49999977  0.00000000  0.03278688  4.00000000  circular_IQR(x, 1 / unc) #> [1] 2.532787  data(\"san_andreas\") circular_mean(san_andreas$azi, 1 / san_andreas$unc) #> [1] 9.971235 circular_var(san_andreas$azi, 1 / san_andreas$unc) #> [1] 0.2015211 circular_quantiles(san_andreas$azi, 1 / san_andreas$unc) #>    0%   25%   50%   75%  100%  #> -90.0  -5.0   9.0  25.0  85.3   data(\"nuvel1\") ep <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, ep, \"right\") circular_mean(sa.por$azi.PoR, 1 / san_andreas$unc) #> [1] 138.8937 circular_var(sa.por$azi.PoR, 1 / san_andreas$unc) #> [1] 0.1893274 circular_quantiles(sa.por$azi.PoR, 1 / san_andreas$unc) #>          0%         25%         50%         75%        100%  #>   0.3156904 124.9081101 137.0094023 150.2300413 179.8567715"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_dispersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Circular dispersion — circular_dispersion","title":"Circular dispersion — circular_dispersion","text":"Dispersion angles given angle.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_dispersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Circular dispersion — circular_dispersion","text":"","code":"circular_dispersion(x, from = NULL, w = NULL, axial = TRUE, na.rm = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_dispersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Circular dispersion — circular_dispersion","text":"x Data values. vector numeric values degrees numeric. angle (degree) dispersion measured. NULL, circular median used. w (optional) Weights. vector positive numbers, length x. axial logical. Whether data axial, .e. pi-periodical (TRUE, default) circular, .e. 2pi-periodical (FALSE). na.rm logical value indicating whether NA values x stripped computation proceeds.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_dispersion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Circular dispersion — circular_dispersion","text":"","code":"if (FALSE) { data(\"san_andreas\") circular_dispersion(san_andreas$azi)  data(\"nuvel1\") ep <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, ep, \"right\") circular_dispersion(sa.por$azi.PoR, from = 135) }"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Circular distance between two angles — circular_distance","title":"Circular distance between two angles — circular_distance","text":"Circular distance two angles","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Circular distance between two angles — circular_distance","text":"","code":"circular_distance(x, y, axial = TRUE, na.rm = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Circular distance between two angles — circular_distance","text":"x, y vector numeric values degrees axial logical. Whether data axial, .e. pi-periodical (TRUE, default) circular, .e. 2pi-periodical (FALSE). na.rm logical value indicating whether NA values x stripped computation proceeds.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/compact_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Compact smoothed stress field — compact_grid","title":"Compact smoothed stress field — compact_grid","text":"Filter smoothed stress field smallest wavelength (R) coordinate","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/compact_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compact smoothed stress field — compact_grid","text":"","code":"compact_grid(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/compact_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compact smoothed stress field — compact_grid","text":"x output stress2grid() PoR_stress2grid()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/compact_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compact smoothed stress field — compact_grid","text":"sf object","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/compact_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compact smoothed stress field — compact_grid","text":"","code":"data(\"san_andreas\") res <- stress2grid(san_andreas) compact_grid(res) #> Simple feature collection with 40 features and 7 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -124.57 ymin: 24.33 xmax: -107.07 ymax: 39.33 #> Geodetic CRS:  WGS 84 #> # A tibble: 40 × 8 #>        R   lon   lat    azi    sd   mdr     N        geometry #>    <dbl> <dbl> <dbl>  <dbl> <dbl> <dbl> <int>     <POINT [°]> #>  1   200 -107.  24.3 178.   11.2  0.900    28 (-107.07 24.33) #>  2   150 -107.  34.3  23.6   3.84 0.739     3 (-107.07 34.33) #>  3   900 -107.  36.8  22.5  21.3  0.813   157 (-107.07 36.83) #>  4   300 -107.  39.3 109.    9.40 0.759     5 (-107.07 39.33) #>  5    50 -110.  24.3 162.   15.8  0.880     6 (-109.57 24.33) #>  6   100 -110.  26.8 177.    6.20 0.841     4 (-109.57 26.83) #>  7   250 -110.  29.3  26.3   7.65 0.807     3 (-109.57 29.33) #>  8   150 -110.  31.8  24.1   8.00 0.606     4 (-109.57 31.83) #>  9   600 -110.  34.3   9.44 22.3  0.795   115 (-109.57 34.33) #> 10   200 -110.  36.8 124.   18.2  0.816     5 (-109.57 36.83) #> # … with 30 more rows"},{"path":"https://tobiste.github.io/tectonicr/reference/conjugate_Q4.html","id":null,"dir":"Reference","previous_headings":"","what":"Conjugation of a Quaternion — conjugate_Q4","title":"Conjugation of a Quaternion — conjugate_Q4","text":"Inverse rotation given conjugated quaternion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/conjugate_Q4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conjugation of a Quaternion — conjugate_Q4","text":"","code":"conjugate_Q4(q, normalize = FALSE)"},{"path":"https://tobiste.github.io/tectonicr/reference/conjugate_Q4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conjugation of a Quaternion — conjugate_Q4","text":"q object class \"quaternion\" normalize logical. Whether quaternion normalization applied (TRUE) (FALSE, default).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/conjugate_Q4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conjugation of a Quaternion — conjugate_Q4","text":"object class \"quaternion\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinate_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate Correction — coordinate_mod","title":"Coordinate Correction — coordinate_mod","text":"Corrects longitudes latitudes value -180.0 180.0 -90 90 degree","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinate_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate Correction — coordinate_mod","text":"","code":"longitude_modulo(x)  latitude_modulo(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/coordinate_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate Correction — coordinate_mod","text":"x Longitude(s) latitude(s) degree","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinate_mod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinate Correction — coordinate_mod","text":"numeric","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinate_mod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinate Correction — coordinate_mod","text":"","code":"longitude_modulo(-361 + 5 * 360) #> [1] -1 latitude_modulo(-91 + 5 * 180) #> [1] 89"},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate Transformations — coordinates","title":"Coordinate Transformations — coordinates","text":"Converts vector Cartesian geographical coordinate systems","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate Transformations — coordinates","text":"","code":"cartesian_to_geographical(n)  geographical_to_cartesian(p)  geographical_to_spherical(p)"},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate Transformations — coordinates","text":"n Cartesian coordinates (x, y, z) vector p Geographical coordinates (latitude, longitude) vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinate Transformations — coordinates","text":"Functions return (2- 3-dimensional) vector representing point requested coordinate system.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinate Transformations — coordinates","text":"","code":"n <- c(1, -2, 3) cartesian_to_geographical(n) #> [1]  53.30077 -63.43495 p <- c(50, 10) geographical_to_cartesian(p) #> [1] 0.6330222 0.1116189 0.7660444"},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates2.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate Transformations — coordinates2","title":"Coordinate Transformations — coordinates2","text":"Converts vector Cartesian spherical coordinate systems","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate Transformations — coordinates2","text":"","code":"cartesian_to_spherical(n)  spherical_to_cartesian(p)  spherical_to_geographical(p)"},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate Transformations — coordinates2","text":"n Cartesian coordinates (x, y, z) three-column vector p Spherical coordinates (colatitude, azimuth) two-column vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinate Transformations — coordinates2","text":"Functions return (2- 3-dimensional) vector representing point requested coordinate system.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinate Transformations — coordinates2","text":"","code":"n <- c(1, -2, 3) cartesian_to_spherical(n) #> [1]  36.69923 -63.43495 p <- c(50, 10) spherical_to_cartesian(p) #> [1] 0.7544065 0.1330222 0.6427876"},{"path":"https://tobiste.github.io/tectonicr/reference/cpm_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Global model of current plate motions — cpm_models","title":"Global model of current plate motions — cpm_models","text":"Compilation global models current plate motions, including NNR-NUVEL1A (DeMets et al., 1990), NNR-MORVEL56 (Argus et al., 2011), REVEL (Sella et al., 2002), GSRM2.1 (Kreemer et al., 2014) HS-NUVEL1A (Gripp Gordon, 2002), PB2002 (Bird, 2003)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/cpm_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global model of current plate motions — cpm_models","text":"","code":"data('cpm_models')"},{"path":"https://tobiste.github.io/tectonicr/reference/cpm_models.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Global model of current plate motions — cpm_models","text":"object class data.frame plate.name rotating plate plate.rot abbreviation plate's name lat,lon Coordinates Euler pole angle amount rotation (angle 1 Myr) plate.fix anchored plate, .e. plate.rot moves relative  plate.fix model Model current global plate motion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/cpm_models.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global model of current plate motions — cpm_models","text":"Argus, D. F., Gordon, R. G., & DeMets, C. (2011). Geologically current motion 56 plates relative -net-rotation reference frame. Geochemistry, Geophysics, Geosystems, 12(11). doi: 10.1029/2011GC003751. Bird, P. (2003), updated digital model plate boundaries, Geochem. Geophys. Geosyst., 4, 1027, doi: 10.1029/2001GC000252, 3. DeMets, C., Gordon, R. G., Argus, D. F., & Stein, S. (1990). Current plate motions. Geophysical Journal International, 101(2), 425-478. doi:10.1111/j.1365-246X.1990.tb06579.x . Gripp, . E., & Gordon, R. G. (2002). Young tracks hotspots current plate velocities. Geophysical Journal International, 150(2), 321–361. doi:10.1046/j.1365-246X.2002.01627.x . Kreemer, C., Blewitt, G., & Klein, E. C. (2014). geodetic plate motion Global Strain Rate Model. Geochemistry, Geophysics, Geosystems, 15(10), 3849–3889. doi: 10.1002/2014GC005407. Sella, G. F., Dixon, T. H., & Mao, . (2002). REVEL: model Recent plate velocities space geodesy. Journal Geophysical Research: Solid Earth, 107(B4). doi: 10.1029/2000jb000033.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/cpm_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global model of current plate motions — cpm_models","text":"","code":"data(\"cpm_models\") head(\"cpm_models\") #> [1] \"cpm_models\""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Angle Between Two Directions — deviation_norm","title":"Normalize Angle Between Two Directions — deviation_norm","text":"Normalizes angle two directions acute angle , .e. angles 0 90°","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Angle Between Two Directions — deviation_norm","text":"","code":"deviation_norm(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Angle Between Two Directions — deviation_norm","text":"x Numeric vector containing angles degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Angle Between Two Directions — deviation_norm","text":"Numeric vector, acute angles two directions, .e. values 0 90°","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Normalize Angle Between Two Directions — deviation_norm","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize Angle Between Two Directions — deviation_norm","text":"","code":"deviation_norm(91) #> [1] 89 deviation_norm(c(-91, NA, 23497349)) #> [1] 89 NA 31"},{"path":"https://tobiste.github.io/tectonicr/reference/dist_greatcircle.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance between points — dist_greatcircle","title":"Distance between points — dist_greatcircle","text":"Returns great circle distance location grid point km","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dist_greatcircle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance between points — dist_greatcircle","text":"","code":"dist_greatcircle(   lat1,   lon1,   lat2,   lon2,   r = earth_radius(),   method = c(\"haversine\", \"orthodrome\", \"vincenty\", \"euclidean\") )"},{"path":"https://tobiste.github.io/tectonicr/reference/dist_greatcircle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance between points — dist_greatcircle","text":"lat1, lon1 numeric vector. coordinate point(s) 1 (degrees). lat2, lon2 numeric vector. coordinates point(s) 2 (degrees). r numeric. radius sphere (default = 6371.0087714 km, .e. radius Earth) method Character. Formula calculating great circle distance, one : \"haversine\" great circle distance based haversine formula optimized 64-bit floating-point numbers (default) \"orthodrome\" great circle distance based spherical law cosines \"vincenty\" distance based Vincenty formula ellipsoid equal major minor axes \"euclidean\" Euclidean distance (great circle distance!)","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/dist_greatcircle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance between points — dist_greatcircle","text":"","code":"dist_greatcircle(lat1 = 20, lon1 = 12, lat2 = c(50, 30), lon2 = c(40, 32)) #> [1] 4149.157 2296.583 dist_greatcircle(   lat1 = 20, lon1 = 12, lat2 = c(50, 30), lon2 = c(40, 32),   method = \"orthodrome\" ) #> [1] 4149.157 2296.583 dist_greatcircle(   lat1 = 20, lon1 = 12, lat2 = c(50, 30), lon2 = c(40, 32),   method = \"vincenty\" ) #> [1] 4149.157 2296.583 dist_greatcircle(   lat1 = 20, lon1 = 12, lat2 = c(50, 30), lon2 = c(40, 32),   method = \"euclidean\" ) #> [1] 4076.220 2284.169"},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance from plate boundary — distance_from_pb","title":"Distance from plate boundary — distance_from_pb","text":"Absolute distance data points nearest plate boundary degree","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance from plate boundary — distance_from_pb","text":"","code":"distance_from_pb(x, euler, pb, tangential = FALSE, km = FALSE, ...)"},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance from plate boundary — distance_from_pb","text":"x, pb sf objects data points plate boundary geometries geographical coordinate system euler \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole tangential Logical. Whether plate boundary tangential boundary (TRUE) inward outward boundary (FALSE, default). km Logical. Whether distance expressed kilometers (TRUE) degrees (FALSE, default). ... optional arguments passed smoothr::densify()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance from plate boundary — distance_from_pb","text":"Numeric vector great circle distances","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distance from plate boundary — distance_from_pb","text":"distance plate boundary longitudinal latitudinal difference data point plate boundary (along closest latitude longitude) inward/outward tangential plate boundaries, respectively.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance from plate boundary — distance_from_pb","text":"","code":"data(\"nuvel1\") na_pa <- subset(nuvel1, nuvel1$plate.rot == \"na\")  data(\"plates\") plate_boundary <- subset(plates, plates$pair == \"na-pa\")  data(\"san_andreas\") res <- distance_from_pb(   x = san_andreas, euler = na_pa, pb = plate_boundary, tangential = TRUE ) head(res) #> [1] 0.445774233 2.497791902 0.517719667 0.006737403 6.099231339 0.789671591  res.km <- distance_from_pb(   x = san_andreas, euler = na_pa, pb = plate_boundary, tangential = TRUE, km = TRUE ) head(res.km) #> [1]  49.5679014 277.7421697  57.5678796   0.7491661 678.2045151  87.8075955"},{"path":"https://tobiste.github.io/tectonicr/reference/distance_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize angular distance on a sphere distance — distance_mod","title":"Normalize angular distance on a sphere distance — distance_mod","text":"Helper function express angular distance sphere range -180 180 degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize angular distance on a sphere distance — distance_mod","text":"","code":"distance_mod(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/distance_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize angular distance on a sphere distance — distance_mod","text":"x numeric, angular distance (degrees)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_mod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize angular distance on a sphere distance — distance_mod","text":"numeric vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"Plate Stress Dummy Grid — dummy","title":"Plate Stress Dummy Grid — dummy","text":"Helper functions create dummy grid small circles, great circles, loxodromes Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plate Stress Dummy Grid — dummy","text":"","code":"smallcircle_dummy(n)  greatcircle_dummy(n)  loxodrome_dummy(n, angle, cw)"},{"path":"https://tobiste.github.io/tectonicr/reference/dummy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plate Stress Dummy Grid — dummy","text":"n Number curves angle Direction loxodromes (degree) cw logical. Sense loxodromes: TRUE clockwise loxodromes (right-lateral displaced plate boundaries). FALSE counterclockwise loxodromes (left-lateral displaced plate boundaries).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dummy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plate Stress Dummy Grid — dummy","text":"data.frame","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/earth_radius.html","id":null,"dir":"Reference","previous_headings":"","what":"Earth's radius in km — earth_radius","title":"Earth's radius in km — earth_radius","text":"IERS mean radius Earth km (based WGS 84)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/earth_radius.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Earth's radius in km — earth_radius","text":"","code":"earth_radius()"},{"path":"https://tobiste.github.io/tectonicr/reference/equivalent_rotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Equivalent rotation — equivalent_rotation","title":"Equivalent rotation — equivalent_rotation","text":"Transforms sequence rotations new reference system","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/equivalent_rotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Equivalent rotation — equivalent_rotation","text":"","code":"equivalent_rotation(x, fixed, rot)"},{"path":"https://tobiste.github.io/tectonicr/reference/equivalent_rotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Equivalent rotation — equivalent_rotation","text":"x Object class \"data.frame\" containing Euler poles plate rotations: plate.rot Moving plate lat, lon coordinates Euler pole angle Angle rotation plate.fix Fixed plate fixed plate regarded fixed. one x$plate.fix rot (optional) plate regarded rotating. one x$plate.rot.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/equivalent_rotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Equivalent rotation — equivalent_rotation","text":"sequence plate rotations new reference system. object class x","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/equivalent_rotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Equivalent rotation — equivalent_rotation","text":"","code":"data(nuvel1) # load the NUVEL1 rotation parameters  # all nuvel1 rotation equivalent to fixed Africa: equivalent_rotation(nuvel1, fixed = \"af\") #>    plate.rot        lat        lon     angle plate.fix #> 1         af  90.000000    0.00000 0.0000000        af #> 2         an  -5.729623  141.14853 0.1330674        af #> 3         ar  24.358850   24.41733 0.4163188        af #> 4         au  12.575099   50.25300 0.6604014        af #> 5         ca -64.951860 -164.64172 0.1551761        af #> 6         co  17.709052 -121.08039 1.3658002        af #> 7         eu -21.224307  159.74610 0.1283940        af #> 8         in  23.801567   28.95037 0.4299189        af #> 9         nz  43.352648 -113.62807 0.4948982        af #> 10        na -79.039887 -140.84695 0.2489005        af #> 11        sa -62.620310  140.61897 0.3237372        af #> 12        jf -36.503136   69.97118 0.8851710        af #> 13        ph -54.222891  -24.76214 1.0236334        af #> 14        pa -59.160000  106.82600 0.9695000        af # relative plate motion between Eurasia and India: equivalent_rotation(nuvel1, \"eu\", \"in\") #>   plate.rot      lat      lon     angle plate.fix #> 8        in 24.57682 18.07207 0.5281698        eu"},{"path":"https://tobiste.github.io/tectonicr/reference/euler_pole.html","id":null,"dir":"Reference","previous_headings":"","what":"Euler pole object — euler_pole","title":"Euler pole object — euler_pole","text":"Creates object orientation Euler pole axis","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_pole.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euler pole object — euler_pole","text":"","code":"euler_pole(x, y, z = NA, geo = TRUE, angle = NA)"},{"path":"https://tobiste.github.io/tectonicr/reference/euler_pole.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Euler pole object — euler_pole","text":"x latitude x coordinate Euler pole axis y longitude y z z coordinate geo logical, TRUE (default) Euler pole axis given geographical coordinates (latitude, longitude). FALSE given Cartesian coordinates (x, y, z) angle (optional) Angle rotation degrees (CCW rotation angle positive)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_pole.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Euler pole object — euler_pole","text":"object class \"euler.pole\" containing Euler pole axis geographical Cartesian coordinates angle rotation radians.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_pole.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Euler pole object — euler_pole","text":"","code":"euler_pole(90, 0, angle = 45) #>   lat lon x y z     angle #> 1  90   0 0 0 1 0.7853982 euler_pole(0, 0, 1, geo = FALSE) #>   lat lon x y z angle #> 1  90   0 0 0 1    NA"},{"path":"https://tobiste.github.io/tectonicr/reference/euler_to_Q4.html","id":null,"dir":"Reference","previous_headings":"","what":"Quaternion from Euler angle-axis representation for rotations — euler_to_Q4","title":"Quaternion from Euler angle-axis representation for rotations — euler_to_Q4","text":"Quaternion Euler angle-axis representation rotations","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_to_Q4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quaternion from Euler angle-axis representation for rotations — euler_to_Q4","text":"","code":"euler_to_Q4(x, normalize = FALSE)"},{"path":"https://tobiste.github.io/tectonicr/reference/euler_to_Q4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quaternion from Euler angle-axis representation for rotations — euler_to_Q4","text":"x \"euler.pole\" object normalize logical. Whether quaternion normalization applied (TRUE) (FALSE, default).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_to_Q4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quaternion from Euler angle-axis representation for rotations — euler_to_Q4","text":"object class \"quaternion\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":null,"dir":"Reference","previous_headings":"","what":"Azimuth Between two Points — get_azimuth","title":"Azimuth Between two Points — get_azimuth","text":"Calculate initial bearing (forward azimuth/direction) go point point b following great circle arc sphere.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Azimuth Between two Points — get_azimuth","text":"","code":"get_azimuth(a, b)"},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Azimuth Between two Points — get_azimuth","text":", b Coordinates start end point(s). Can vectors two numbers matrix 2 columns (latitude, longitude)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Azimuth Between two Points — get_azimuth","text":"Azimuth degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Azimuth Between two Points — get_azimuth","text":"formula initial bearing (sometimes referred forward azimuth) followed straight line along great circle arc lead start point end point b. $$\\theta = \\arctan2 (\\sin \\Delta\\lambda * \\cos\\psi_2, \\cos\\psi_1 \\sin\\psi_1-\\sin\\psi_1 \\cos\\psi_2 \\cos\\Delta\\lambda)$$  \\(\\psi_1, \\lambda_1\\) start point, \\(\\psi_2\\), \\(\\lambda_2\\) end point (\\(\\Delta\\lambda\\) difference longitude)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Azimuth Between two Points — get_azimuth","text":"http://www.movable-type.co.uk/scripts/latlong.html","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Azimuth Between two Points — get_azimuth","text":"","code":"berlin <- c(52.517, 13.4) # Berlin tokyo <- c(35.7, 139.767) # Tokyo get_azimuth(berlin, tokyo) #> [1] 41.57361"},{"path":"https://tobiste.github.io/tectonicr/reference/is.Q4.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is quaternion — is.Q4","title":"Check if object is quaternion — is.Q4","text":"Check object quaternion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/is.Q4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is quaternion — is.Q4","text":"","code":"is.Q4(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/is.Q4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is quaternion — is.Q4","text":"x object class \"quaternion\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/is.Q4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if object is quaternion — is.Q4","text":"logical","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/is.euler.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is euler.pole — is.euler","title":"Check if object is euler.pole — is.euler","text":"Check object euler.pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/is.euler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is euler.pole — is.euler","text":"","code":"is.euler(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/is.euler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is euler.pole — is.euler","text":"x object class \"euler.pole\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/is.euler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if object is euler.pole — is.euler","text":"logical","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/misfit_shmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — misfit_shmax","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — misfit_shmax","text":"Calculate angular difference observed modeled direction maximum horizontal stresses (\\(\\sigma_{Hmax}\\)) along great circles, small circles, loxodromes relative plate motion's Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/misfit_shmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — misfit_shmax","text":"","code":"misfit_shmax(prd, obs)"},{"path":"https://tobiste.github.io/tectonicr/reference/misfit_shmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — misfit_shmax","text":"prd data.frame containing modeled azimuths \\(\\sigma_{Hmax}\\), .e. return object model_shmax() obs Numeric vector containing observed azimuth \\(\\sigma_{Hmax}\\), length prd","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/misfit_shmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — misfit_shmax","text":"object class data.frame dev.gc Deviation observed stress modeled \\(\\sigma_{Hmax}\\) following great circles dev.sc Small circles dev.ld.cw Clockwise loxodromes dev.ld.ccw Counter-clockwise loxodromes","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/misfit_shmax.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — misfit_shmax","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/misfit_shmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — misfit_shmax","text":"","code":"data(\"nuvel1\") # North America relative to Pacific plate: euler <- subset(nuvel1, nuvel1$plate.rot == \"na\")  # the point where we want to model the SHmax direction: point <- data.frame(lat = 45, lon = 20)  prd <- model_shmax(point, euler) misfit_shmax(prd, obs = 90) #>     dev.gc    dev.sc dev.ld.cw dev.ld.ccw #> 1 42.45436 -47.54564  87.45436  -2.545636"},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Theoretical Direction of Maximum Horizontal Stress in the\ngeographical reference system. — model_shmax","title":"Theoretical Direction of Maximum Horizontal Stress in the\ngeographical reference system. — model_shmax","text":"Models direction maximum horizontal stress \\(\\sigma_{Hmax}\\) along great circles, small circles, loxodromes given point points according relative plate motion geographical coordinate reference system.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theoretical Direction of Maximum Horizontal Stress in the\ngeographical reference system. — model_shmax","text":"","code":"model_shmax(df, euler)"},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theoretical Direction of Maximum Horizontal Stress in the\ngeographical reference system. — model_shmax","text":"df data.frame containing coordinates point(s) (lat, lon). euler \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler  pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theoretical Direction of Maximum Horizontal Stress in the\ngeographical reference system. — model_shmax","text":"data.frame gc Azimuth modeled \\(\\sigma_{Hmax}\\) following great circles sc Small circles ld.cw Clockwise loxodromes ld.ccw Counter-clockwise loxodromes","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Theoretical Direction of Maximum Horizontal Stress in the\ngeographical reference system. — model_shmax","text":"\\(\\sigma_{Hmax}\\) following great circles (initial) bearing given point pole relative plate motion. \\(\\sigma_{Hmax}\\) along small circles, clockwise, counter-clockwise loxodromes 90\\(^{\\circ}\\), +45\\(^{\\circ}\\), 135\\(^{\\circ}\\) (-45\\(^{\\circ}\\)) great circle bearing, respectively.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Theoretical Direction of Maximum Horizontal Stress in the\ngeographical reference system. — model_shmax","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theoretical Direction of Maximum Horizontal Stress in the\ngeographical reference system. — model_shmax","text":"","code":"data(\"nuvel1\") # North America relative to Pacific plate: euler <- subset(nuvel1, nuvel1$plate.rot == \"na\")  # the point where we mant to model the SHmax direction: point <- data.frame(lat = 45, lon = 20)  model_shmax(point, euler) #>         sc   ld.ccw       gc    ld.cw #> 1 42.45436 87.45436 132.4544 177.4544"},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalized Chi-Squared Test — norm_chisq","title":"Normalized Chi-Squared Test — norm_chisq","text":"quantitative comparison predicted observed directions \\(\\sigma_{Hmax}\\) obtained calculation average azimuth normalized \\(\\chi^2\\) test.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalized Chi-Squared Test — norm_chisq","text":"","code":"norm_chisq(obs, prd, unc)"},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalized Chi-Squared Test — norm_chisq","text":"obs Numeric vector containing observed azimuth \\(\\sigma_{Hmax}\\), length prd prd data.frame containing modeled azimuths \\(\\sigma_{Hmax}\\), .e. return object model_shmax() unc Uncertainty observed \\(\\sigma_{Hmax}\\), either numeric vector number","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalized Chi-Squared Test — norm_chisq","text":"Numeric vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalized Chi-Squared Test — norm_chisq","text":"normalized \\(\\chi^2\\) test $$ {Norm} \\chi^2_i =  = \\frac{    \\sum^M_{= 1} \\left( \\frac{\\alpha_i - \\alpha_{{predict}}}{\\sigma_i}    \\right) ^2}    {\\sum^M_{= 1} \\left( \\frac{90}{\\sigma_i} \\right) ^2 }$$ value chi-squared test statistic number 0 1 indicating quality predicted \\(\\sigma_{Hmax}\\) directions. Low values (\\(\\le 0.15\\)) indicate good agreement, high values (\\(> 0.7\\)) indicate systematic misfit predicted observed \\(\\sigma_{Hmax}\\) directions.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Normalized Chi-Squared Test — norm_chisq","text":"Wdowinski, S., 1998, theory intraplate tectonics. Journal Geophysical Research: Solid Earth, 103, 5037-5059, doi: 10.1029/97JB03390.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalized Chi-Squared Test — norm_chisq","text":"","code":"data(\"nuvel1\") euler <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to # Pacific plate point <- data.frame(lat = 45, lon = 20) prd <- model_shmax(point, euler) norm_chisq(obs = c(50, 40, 42), prd$sc, unc = c(10, NA, 5)) #> [1] 0.001426232"},{"path":"https://tobiste.github.io/tectonicr/reference/normalize_Q4.html","id":null,"dir":"Reference","previous_headings":"","what":"Quaternion normalization — normalize_Q4","title":"Quaternion normalization — normalize_Q4","text":"Quaternion normalization","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/normalize_Q4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quaternion normalization — normalize_Q4","text":"","code":"normalize_Q4(q)"},{"path":"https://tobiste.github.io/tectonicr/reference/normalize_Q4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quaternion normalization — normalize_Q4","text":"q quaternion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/normalize_Q4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quaternion normalization — normalize_Q4","text":"object class \"quaternion\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1.html","id":null,"dir":"Reference","previous_headings":"","what":"NUVEL-1 Global model of current plate motions — nuvel1","title":"NUVEL-1 Global model of current plate motions — nuvel1","text":"NNR-NUVEL-1 global model current plate motions DeMets et al. 1990","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NUVEL-1 Global model of current plate motions — nuvel1","text":"","code":"data('nuvel1')"},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NUVEL-1 Global model of current plate motions — nuvel1","text":"object class data.frame plate.name rotating plate plate.rot abbreviation plate's name lat,lon Coordinates Euler pole angle amount rotation (angle 1 Myr) plate.fix anchored plate, .e. plate.rot moves relative  plate.fix source Reference underlying study","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"NUVEL-1 Global model of current plate motions — nuvel1","text":"DeMets, C., Gordon, R. G., Argus, D. F., & Stein, S. (1990). Current plate motions. Geophysical Journal International, 101(2), 425-478. doi:10.1111/j.1365-246X.1990.tb06579.x .","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NUVEL-1 Global model of current plate motions — nuvel1","text":"","code":"data(\"nuvel1\") head(\"nuvel1\") #> [1] \"nuvel1\""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1_plates.html","id":null,"dir":"Reference","previous_headings":"","what":"Plate Boundaries on the Earth — nuvel1_plates","title":"Plate Boundaries on the Earth — nuvel1_plates","text":"Global set present plate boundaries Earth based NUVEL-1 model DeMets et al. 1990","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1_plates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plate Boundaries on the Earth — nuvel1_plates","text":"","code":"data('nuvel1_plates')"},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1_plates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Plate Boundaries on the Earth — nuvel1_plates","text":"object class sf","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1_plates.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plate Boundaries on the Earth — nuvel1_plates","text":"DeMets, C., Gordon, R. G., Argus, D. F., & Stein, S. (1990). Current plate motions. Geophysical Journal International, 101(2), 425-478. doi:10.1111/j.1365-246X.1990.tb06579.x .","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1_plates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plate Boundaries on the Earth — nuvel1_plates","text":"","code":"data(\"nuvel1_plates\") head(\"nuvel1_plates\") #> [1] \"nuvel1_plates\""},{"path":"https://tobiste.github.io/tectonicr/reference/pb2002.html","id":null,"dir":"Reference","previous_headings":"","what":"Global model of current plate motions — pb2002","title":"Global model of current plate motions — pb2002","text":"PB2002 global model current plate motions Bird 2003","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/pb2002.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global model of current plate motions — pb2002","text":"","code":"data('pb2002')"},{"path":"https://tobiste.github.io/tectonicr/reference/pb2002.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Global model of current plate motions — pb2002","text":"object class data.frame plate.name rotating plate plate.rot abbreviation plate's name lat,lon Coordinates Euler pole angle amount rotation (angle 1 Myr) plate.fix anchored plate, .e. plate.rot moves relative plate.fix source Reference underlying study","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/pb2002.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global model of current plate motions — pb2002","text":"Bird, P. (2003), updated digital model plate boundaries, Geochem. Geophys. Geosyst., 4, 1027, doi: 10.1029/2001GC000252, 3.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/pb2002.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global model of current plate motions — pb2002","text":"","code":"data(\"pb2002\") head(\"pb2002\") #> [1] \"pb2002\""},{"path":"https://tobiste.github.io/tectonicr/reference/plates.html","id":null,"dir":"Reference","previous_headings":"","what":"Plate Boundaries on the Earth — plates","title":"Plate Boundaries on the Earth — plates","text":"Global set present plate boundaries Earth based PB2002 model Bird (2003). Contains plate boundary displacement types inward, outward, tangentially displacement.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/plates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plate Boundaries on the Earth — plates","text":"","code":"data('plates')"},{"path":"https://tobiste.github.io/tectonicr/reference/plates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Plate Boundaries on the Earth — plates","text":"object class sf","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/plates.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plate Boundaries on the Earth — plates","text":"Bird, P. (2003), updated digital model plate boundaries, Geochem. Geophys. Geosyst., 4, 1027, doi: 10.1029/2001GC000252, 3.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/plates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plate Boundaries on the Earth — plates","text":"","code":"data(\"plates\") head(\"plates\") #> [1] \"plates\""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between spherical PoR to geographical coordinate system — por_transformation_df","title":"Conversion between spherical PoR to geographical coordinate system — por_transformation_df","text":"Transformation spherical PoR geographical coordinate system vice versa","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between spherical PoR to geographical coordinate system — por_transformation_df","text":"","code":"geographical_to_PoR(x, euler)  PoR_to_geographical(x, euler)"},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between spherical PoR to geographical coordinate system — por_transformation_df","text":"x \"data.frame\" containing lat lon coordinates point geographical CRS lat.PoR, lon.PoR) point PoR CRS. euler \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion between spherical PoR to geographical coordinate system — por_transformation_df","text":"\"data.frame\" transformed coordinates (lat.PoR lon.PoR PoR CRS, lat lon geographical CRS).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion between spherical PoR to geographical coordinate system — por_transformation_df","text":"","code":"data(\"nuvel1\") euler <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to Pacific plate data(\"san_andreas\") san_andreas.por <- geographical_to_PoR(san_andreas, euler) head(san_andreas.por) #>    lat.PoR   lon.PoR #> 1 57.39203 -80.90388 #> 2 55.14823 -78.62019 #> 3 56.68739 -80.06332 #> 4 57.73382 -78.23767 #> 5 63.80396 -78.40840 #> 6 56.06259 -81.64269 head(PoR_to_geographical(san_andreas.por, euler)) #>      lat      lon #> 1 35.220 -118.810 #> 2 32.833 -119.982 #> 3 34.428 -119.151 #> 4 34.300 -117.414 #> 5 38.000 -111.450 #> 6 34.738 -120.401"},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_quat.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between PoR to geographical coordinate system using quaternions — por_transformation_quat","title":"Conversion between PoR to geographical coordinate system using quaternions — por_transformation_quat","text":"Helper function transformation PoR geographical coordinate system vice versa","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_quat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between PoR to geographical coordinate system using quaternions — por_transformation_quat","text":"","code":"geographical_to_PoR_quat(x, euler)  PoR_to_geographical_quat(x, euler)"},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_quat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between PoR to geographical coordinate system using quaternions — por_transformation_quat","text":"x, euler two-column vectors containing lat lon coordinates","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_quat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion between PoR to geographical coordinate system using quaternions — por_transformation_quat","text":"","code":"ep.geo <- c(20, 33) q.geo <- c(10, 45) q.por <- geographical_to_PoR_quat(q.geo, ep.geo) q.por #> [1] 74.70603 50.91863 PoR_to_geographical_quat(q.por, ep.geo) #> [1] 10 45"},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","title":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","text":"Transform spatial objects PoR geographical coordinate reference system vice versa.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","text":"","code":"PoR_to_geographical_sf(x, euler)  geographical_to_PoR_sf(x, euler)"},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","text":"x sf, SpatRast, Raster* object data points geographical PoR coordinate system euler \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","text":"sf SpatRast object data points transformed geographical PoR coordinate system","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_sf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","text":"PoR coordinate reference system oblique transformation geographical coordinate system Euler pole coordinates translation factors.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","text":"","code":"data(\"nuvel1\") euler <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to Pacific plate data(\"san_andreas\") san_andreas.por <- geographical_to_PoR_sf(san_andreas, euler) PoR_to_geographical_sf(san_andreas.por, euler) #> Simple feature collection with 1082 features and 9 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -125.82 ymin: 23.08 xmax: -108 ymax: 39.94 #> Geodetic CRS:  WGS 84 #> # A tibble: 1,082 × 10 #>    id         lat   lon   azi   unc type  depth quality regime #>  * <chr>    <dbl> <dbl> <dbl> <dbl> <chr> <dbl> <fct>   <chr>  #>  1 wsm00967  35.2 -119.     6   3   BO     1.91 D       NA     #>  2 wsm14489  32.8 -120.    16   4.3 BO     1.6  D       NA     #>  3 wsm01115  34.4 -119.    61   5   BO     1.32 D       NA     #>  4 wsm01130  34.3 -117.    90   5   HFM    2.09 D       S      #>  5 wsm19348  38   -111.   133   5   FMA    5    D       N      #>  6 wsm06768  34.7 -120.    65   6   BOT    1.7  D       TS     #>  7 wsm14285  34.5 -122.    90   9.2 BO     4.2  D       NA     #>  8 wsm06770  34.6 -121.    36  13   BOT    1.7  D       TS     #>  9 wsm14481  31.3 -118.    13  15   BO     2.21 D       NA     #> 10 wsm19347  38.4 -110.   102  15   FMA    0    D       S      #> # … with 1,072 more rows, and 1 more variable: geometry <POINT [°]>"},{"path":"https://tobiste.github.io/tectonicr/reference/product_Q4.html","id":null,"dir":"Reference","previous_headings":"","what":"Product of quaternions — product_Q4","title":"Product of quaternions — product_Q4","text":"Helper function multiplication two quaternions. Concatenation two rotations R1 followed R2","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/product_Q4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Product of quaternions — product_Q4","text":"","code":"product_Q4(q1, q2, normalize = FALSE)"},{"path":"https://tobiste.github.io/tectonicr/reference/product_Q4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Product of quaternions — product_Q4","text":"q1, q2 two objects class \"quaternion\". first rotation R1 expressed q1 followed second rotation R2 expressed q2 normalize logical. Whether quaternion normalization applied (TRUE) (FALSE, default).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/product_Q4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Product of quaternions — product_Q4","text":"object class \"quaternion\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/product_Q4.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Product of quaternions — product_Q4","text":"Multiplication commutative.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":null,"dir":"Reference","previous_headings":"","what":"Strike of the plate boundary projected on data point — projected_pb_strike","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"fault's strike PoR CRS projected data point along predicted stress trajectories.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"","code":"projected_pb_strike(x, euler, pb, tangential = FALSE, ...)"},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"x, pb sf objects data points plate boundary geometries geographical coordinate system euler \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole tangential Logical. Whether plate boundary tangential boundary (TRUE) inward outward boundary (FALSE, default). ... optional arguments passed smoothr::densify()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"Numeric vector strike direction plate boundary (degree)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"Useful calculate beta angle, .e. angle SHmax direction (PoR CRS!) fault's strike (PoR CRS). beta angle geographical PoR coordinates.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"algorithm calculates great circle bearing line vertices. Since transform plate boundaries represent small circle lines PoR system, great-circle azimuth approximation true (small-circle) azimuth.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"","code":"data(\"nuvel1\") na_pa <- subset(nuvel1, nuvel1$plate.rot == \"na\")  data(\"plates\") plate_boundary <- subset(plates, plates$pair == \"na-pa\")  data(\"san_andreas\") res <- projected_pb_strike(   x = san_andreas, euler = na_pa, pb = plate_boundary, tangential = TRUE ) head(res) #> [1] 60.31233 63.27351 60.83773 69.05300 63.23623 80.40950 head(san_andreas$azi - res) # beta angle #> [1] -54.3123326 -47.2735082   0.1622736  20.9470033  69.7637722 -15.4094958"},{"path":"https://tobiste.github.io/tectonicr/reference/quantise_wsm_quality.html","id":null,"dir":"Reference","previous_headings":"","what":"Numerical values to World Stress Map Quality Ranking — quantise_wsm_quality","title":"Numerical values to World Stress Map Quality Ranking — quantise_wsm_quality","text":"Assigns numeric values precision measurement categorical quality ranking World Stress Map (, B, C, D).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/quantise_wsm_quality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Numerical values to World Stress Map Quality Ranking — quantise_wsm_quality","text":"","code":"quantise_wsm_quality(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/quantise_wsm_quality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numerical values to World Stress Map Quality Ranking — quantise_wsm_quality","text":"x Either string character vector WSM quality ranking","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/quantise_wsm_quality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Numerical values to World Stress Map Quality Ranking — quantise_wsm_quality","text":"\"integer\" vector type \"integer\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/quantise_wsm_quality.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Numerical values to World Stress Map Quality Ranking — quantise_wsm_quality","text":"Heidbach, O., Barth, ., Müller, B., Reinecker, J., Stephansson, O., Tingay, M., Zang, . (2016). WSM quality ranking scheme, database description analysis guidelines stress indicator. World Stress Map Technical Report 16-01, GFZ German Research Centre Geosciences. doi:10.2312/wsm.2016.001","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/quantise_wsm_quality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Numerical values to World Stress Map Quality Ranking — quantise_wsm_quality","text":"","code":"quantise_wsm_quality(c(\"A\", \"B\", \"C\", \"D\", NA)) #> [1] 15 20 25 40 NA data(\"san_andreas\") quantise_wsm_quality(san_andreas$quality[1:20]) #>  [1] 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40"},{"path":"https://tobiste.github.io/tectonicr/reference/raster_transformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between PoR to geographical coordinate reference system of raster\ndata — raster_transformation","title":"Conversion between PoR to geographical coordinate reference system of raster\ndata — raster_transformation","text":"Helper function transform raster data set PoR geographical coordinates","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/raster_transformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between PoR to geographical coordinate reference system of raster\ndata — raster_transformation","text":"","code":"geographical_to_PoR_raster(x, euler)  PoR_to_geographical_raster(x, euler)"},{"path":"https://tobiste.github.io/tectonicr/reference/raster_transformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between PoR to geographical coordinate reference system of raster\ndata — raster_transformation","text":"x \"SpatRaster\" \"RasterLayer\" euler \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/raster_transformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion between PoR to geographical coordinate reference system of raster\ndata — raster_transformation","text":"\"SpatRaster\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/relative_rotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative rotation between two rotations — relative_rotation","title":"Relative rotation between two rotations — relative_rotation","text":"Calculates relative rotation two rotations, .e. difference rotation 1 rotation 2.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/relative_rotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative rotation between two rotations — relative_rotation","text":"","code":"relative_rotation(r1, r2)"},{"path":"https://tobiste.github.io/tectonicr/reference/relative_rotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative rotation between two rotations — relative_rotation","text":"r1, r2 Objects class \"euler.pole\". First rotation r1, followed rotation r2.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/relative_rotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relative rotation between two rotations — relative_rotation","text":"list. Euler axes (geographical coordinates) Euler angles (degrees)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/relative_rotation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Relative rotation between two rotations — relative_rotation","text":"Schaeben, H., Kroner, U. Stephan, T. (2021). Euler Poles Tectonic Plates. B. S. Daza Sagar, Q. Cheng, J. McKinley F. Agterberg (Eds.), Encyclopedia Mathematical Geosciences. Encyclopedia Earth Sciences Series (pp. 1--7). Springer Nature Switzerland AG 2021. doi: 10.1007/978-3-030-26050-7_435-1.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/relative_rotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relative rotation between two rotations — relative_rotation","text":"","code":"a <- euler_pole(90, 0, angle = 45) b <- euler_pole(0, 0, 1, geo = FALSE, angle = -15) relative_rotation(a, b) #> $axis #> [1]  -90 -180 #>  #> $angle #> [1] 60 #>  relative_rotation(b, a) #> $axis #> [1] 90  0 #>  #> $angle #> [1] 60 #>"},{"path":"https://tobiste.github.io/tectonicr/reference/rose.html","id":null,"dir":"Reference","previous_headings":"","what":"Rose Diagram — rose","title":"Rose Diagram — rose","text":"Plots rose diagram (rose directions), analogue histogram density plot angular data.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rose Diagram — rose","text":"","code":"rose(   x,   binwidth = NULL,   bins = NULL,   axial = TRUE,   clockwise = TRUE,   unit = c(\"degree\", \"radian\"),   main = \"N\",   sub,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/rose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rose Diagram — rose","text":"x Data plotted. numeric vector containing angles. binwidth width bins. bins number arcs partition circle width. Overridden binwidth. axial Logical. Whether data uniaxial (axial=FALSE) biaxial (TRUE, default). clockwise Logical. Whether angles increase clockwise direction (clockwise=TRUE, default) anti-clockwise, counter-clockwise direction (FALSE). unit unit angles expressed. \"degrees\" (default), \"radians\". main, sub Character string specifying title subtitle plot. sub = NULL, show bin width. ... Additional arguments passed spatstat.explore::rose().","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rose Diagram — rose","text":"window (class \"owin\") containing plotted region.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Rose Diagram — rose","text":"bins binwidth NULL, optimal bin width calculated using: $$ \\frac{2 IQR(x)}{n^{\\frac{1}{3}}} $$ n length x.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rose Diagram — rose","text":"","code":"x <- runif(100, 60, 210) rose(x)   data(\"san_andreas\") rose(san_andreas$azi, col = \"grey\", axial = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/rotate_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate Lines — rotate_lines","title":"Rotate Lines — rotate_lines","text":"Rotates set straight lines around angle","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotate_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate Lines — rotate_lines","text":"","code":"rotate_lines(theta, p, centre)"},{"path":"https://tobiste.github.io/tectonicr/reference/rotate_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate Lines — rotate_lines","text":"theta Angle rotation (degree) p Coordinates lines end points centre Coordinates center point rotation","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotate_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate Lines — rotate_lines","text":"matrix","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_Q4.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotation of a vector by a quaternion — rotation_Q4","title":"Rotation of a vector by a quaternion — rotation_Q4","text":"Rotation vector quaternion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_Q4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotation of a vector by a quaternion — rotation_Q4","text":"","code":"rotation_Q4(q, p)"},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_Q4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotation of a vector by a quaternion — rotation_Q4","text":"q object class \"quaternion\" p three-column vector (Cartesian coordinates) unit length","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_Q4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotation of a vector by a quaternion — rotation_Q4","text":"three-column vector (Cartesian coordinates) unit length","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/san_andreas.html","id":null,"dir":"Reference","previous_headings":"","what":"Example stress data — san_andreas","title":"Example stress data — san_andreas","text":"Subset World Stress Map (WSM) compilation information crustal present-day stress field (Version 2016). Subset contains stress data adjacent San Andreas Fault.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/san_andreas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example stress data — san_andreas","text":"","code":"data('san_andreas')"},{"path":"https://tobiste.github.io/tectonicr/reference/san_andreas.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example stress data — san_andreas","text":"object class \"sf\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/san_andreas.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example stress data — san_andreas","text":"https://www.world-stress-map.org/","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/san_andreas.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example stress data — san_andreas","text":"Heidbach, O., M. Rajabi, X. Cui, K. Fuchs, B. Müller, J. Reinecker, K. Reiter, M. Tingay, F. Wenzel, F. Xie, M. O. Ziegler, M.-L. Zoback, M. D. Zoback (2018): World Stress Map database release 2016: Crustal stress pattern across scales. Tectonophysics, 744, 484-498, doi:10.1016/j.tecto.2018.07.007 .","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/san_andreas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example stress data — san_andreas","text":"","code":"data(\"san_andreas\") head(\"san_andreas\") #> [1] \"san_andreas\""},{"path":"https://tobiste.github.io/tectonicr/reference/spec_atan.html","id":null,"dir":"Reference","previous_headings":"","what":"Quadrant-specific inverse of the tangent — spec_atan","title":"Quadrant-specific inverse of the tangent — spec_atan","text":"returns quadrant specific inverse tangent","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spec_atan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quadrant-specific inverse of the tangent — spec_atan","text":"","code":"atan2_spec(x, y)  atan2d_spec(x, y)"},{"path":"https://tobiste.github.io/tectonicr/reference/spec_atan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quadrant-specific inverse of the tangent — spec_atan","text":"x, y dividend divisor comprise sum sines cosines, respectively.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spec_atan.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quadrant-specific inverse of the tangent — spec_atan","text":"Jammalamadaka, S. Rao, Ambar Sengupta (2001). Topics circular statistics. Vol. 5. world scientific.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":null,"dir":"Reference","previous_headings":"","what":"Angle along great circle on spherical surface — spherical_angle","title":"Angle along great circle on spherical surface — spherical_angle","text":"Smallest angle two points surface sphere, measured along surface sphere","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Angle along great circle on spherical surface — spherical_angle","text":"","code":"orthodrome(lat1, lon1, lat2, lon2)  haversine(lat1, lon1, lat2, lon2)  vincenty(lat1, lon1, lat2, lon2)"},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Angle along great circle on spherical surface — spherical_angle","text":"lat1, lat2 numeric vector. latitudes point 1 2 (radians) lon1, lon2 numeric vector. longitudes point 1 2 (radians)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Angle along great circle on spherical surface — spherical_angle","text":"angle radians","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Angle along great circle on spherical surface — spherical_angle","text":"\"orthodrome\" based spherical law cosines \"haversine\" uses haversine formula optimized 64-bit floating-point numbers \"vincenty\" uses Vincenty formula ellipsoid equal major minor axes","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Angle along great circle on spherical surface — spherical_angle","text":"Imboden, C. & Imboden, D. (1972). Formel fuer Orthodrome und Loxodrome bei der Berechnung von Richtung und Distanz zwischen Beringungs- und Wiederfundort. Die Vogelwarte 26, 336-346. Sinnott, Roger W. (1984). Virtues Haversine. Sky telescope 68(2), 158. Vincenty, T. (1975). Direct inverse solutions geodesics ellipsoid application nested equations. Survey Review, 23(176), 88–93. doi:10.1179/sre.1975.23.176.88 . http://www.movable-type.co.uk/scripts/latlong.html http://www.edwilliams.org/avform147.htm","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Angle along great circle on spherical surface — spherical_angle","text":"","code":"berlin <- c(52.52, 13.41) calgary <- c(51.04, -114.072) orthodrome(berlin[1], berlin[2], calgary[1], calgary[2]) #> [1] 0.8595483 haversine(berlin[1], berlin[2], calgary[1], calgary[2]) #> [1] 0.8595483 vincenty(berlin[1], berlin[2], calgary[1], calgary[2]) #> [1] 0.8595483"},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Stress2Grid — stress2grid","title":"Stress2Grid — stress2grid","text":"Stress pattern wavelength analysis","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stress2Grid — stress2grid","text":"","code":"stress2grid(   x,   stat = c(\"mean\", \"median\"),   lon_range = NULL,   lat_range = NULL,   gridsize = 2.5,   min_data = 3,   threshold = 25,   arte_thres = 200,   method_weighting = FALSE,   quality_weighting = TRUE,   dist_weight = c(\"inverse\", \"linear\", \"none\"),   dist_threshold = 0.1,   R_range = seq(50, 1000, 50),   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Stress2Grid — stress2grid","text":"https://github.com/MorZieg/Stress2Grid","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stress2Grid — stress2grid","text":"x sf object containing azi SHmax degree unc Uncertainties SHmax degree type Methods used determination direction SHmax stat direction interpolated SHmax based  circular mean standard deviation (\"mean\", default) circular median interquartile range (\"median\")? lon_range, lat_range (optional) numeric vector specifying minimum maximum longitudes latitudes. gridsize Numeric. Target spacing regular grid decimal degree. Default 2.5 min_data Integer. Minimum number data per bin. Default 3 threshold Numeric. Threshold deviation direction. Default 25 arte_thres Numeric. Maximum distance (km) gridpoint next datapoint. Default 200 method_weighting Logical. method weighting applied: Default FALSE. quality_weighting Logical. quality weighting applied: Default TRUE. dist_weight Distance weighting method used. One \"none\", \"linear\", \"inverse\" (default). dist_threshold Numeric. Distance weight prevent overweight data nearby (0 1). Default 0.1 R_range Numeric value vector specifying search radius (km). Default seq(50, 1000, 50) ... optional arguments dist_greatcircle()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stress2Grid — stress2grid","text":"sf object containing lon,lat longitude latitude degree azi Mean SHmax degree sd Standard deviation SHmax degree R Search radius km mdr Mean distance datapoint per search radius N Number data points search radius","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stress2Grid — stress2grid","text":"Calculates weighted mean/median standard deviation/IQR stress data","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Stress2Grid — stress2grid","text":"Ziegler, M. O. Heidbach, O. (2019). Matlab Script Stress2Grid v1.1. GFZ Data Services. doi:10.5880/wsm.2019.002","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stress2Grid — stress2grid","text":"","code":"data(\"san_andreas\") stress2grid(san_andreas) #> Simple feature collection with 671 features and 7 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -124.57 ymin: 24.33 xmax: -107.07 ymax: 39.33 #> Geodetic CRS:  WGS 84 #> # A tibble: 671 × 8 #> # Groups:   R [20] #>      lon   lat   azi    sd     R    mdr     N        geometry #>    <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl> <int>     <POINT [°]> #>  1 -115.  24.3   NA   0       50 NA         0 (-114.57 24.33) #>  2 -115.  24.3   NA   0      100 NA         0 (-114.57 24.33) #>  3 -115.  24.3   NA   0      150 NA         0 (-114.57 24.33) #>  4 -115.  24.3   NA   0      200 NA         1 (-114.57 24.33) #>  5 -115.  24.3  179.  5.32   250  0.820     3 (-114.57 24.33) #>  6 -115.  24.3  170. 25.0    350  0.796     9 (-114.57 24.33) #>  7 -115.  24.3  168. 19.3    400  0.816    18 (-114.57 24.33) #>  8 -115.  24.3  171. 14.8    450  0.884    56 (-114.57 24.33) #>  9 -115.  24.3  171. 16.3    500  0.876   107 (-114.57 24.33) #> 10 -115.  24.3  171. 15.5    550  0.832   139 (-114.57 24.33) #> # … with 661 more rows"},{"path":"https://tobiste.github.io/tectonicr/reference/stress_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick analysis of a stress data set — stress_analysis","title":"Quick analysis of a stress data set — stress_analysis","text":"Returns converted azimuths, distances plate boundary, statistics model, plots.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick analysis of a stress data set — stress_analysis","text":"","code":"stress_analysis(   x,   euler,   type = c(\"none\", \"in\", \"out\", \"right\", \"left\"),   pb,   plot = TRUE,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/stress_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick analysis of a stress data set — stress_analysis","text":"x data.frame sf object containing coordinates point(s) (lat, lon), direction \\(\\sigma_{Hmax}\\) azi standard deviation unc (optional) euler \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole type Character. Type plate boundary (optional). Can \"\", \"\", \"right\", \"left\" outward, inward, right-lateral, left-lateral moving plate boundaries, respectively. \"none\" (default), PoR-equivalent azimuth returned. pb (optional) sf object plate boundary geometries geographical coordinate system plot (logical). Whether produce plot additional output. ... optional arguments distance_from_pb()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quick analysis of a stress data set — stress_analysis","text":"list. results coordinate azimuth conversion, deviation, misfit predicted stress direction , given, distance tested plate boundary well normalized Chi-squared test statistic.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/stress_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quick analysis of a stress data set — stress_analysis","text":"","code":"data(\"nuvel1\") na_pa <- subset(nuvel1, nuvel1$plate.rot == \"na\")  data(\"plates\") plate_boundary <- subset(plates, plates$pair == \"na-pa\")  data(\"san_andreas\")  stress_analysis(san_andreas, na_pa, type = \"right\", plate_boundary, plot = FALSE) #> $result #>          azi.PoR prd           dev       nchisq  lat.PoR   lon.PoR    distance #> 1    133.0995136 135   -1.90048643 4.459072e-04 57.39203 -80.90388 0.445774233 #> 2    145.6552048 135   10.65520481 1.401647e-02 55.14823 -78.62019 2.497791902 #> 3      8.9995358 135 -126.00046419 3.599938e-01 56.68739 -80.06332 0.517719667 #> 4     38.5539027 135  -96.44609733 8.618833e-01 57.73382 -78.23767 0.006737403 #> 5     77.8826330 135  -57.11736704 4.027646e-01 63.80396 -78.40840 6.099231339 #> 6     12.3939009 135 -122.60609907 4.066741e-01 56.06259 -81.64269 0.789671591 #> 7     37.3310081 135  -97.66899193 8.368389e-01 54.71560 -83.01469 2.040027864 #> 8    163.5243814 135   28.52438142 1.004494e-01 55.64358 -81.81066 1.197242367 #> 9    144.9985168 135    9.99851679 1.234202e-02 55.63986 -74.25887 2.359278694 #> 10    46.7758876 135  -88.22411239 9.609252e-01 65.11779 -77.36184 7.129627086 #> 11   146.0062488 135   11.00624884 1.495525e-02 56.10620 -82.25387 0.688885881 #> 12   145.1139186 135   10.11391864 1.262856e-02 57.39251 -80.87994 0.446256853 #> 13   174.5036471 135   39.50364707 1.926590e-01 56.39018 -84.49953 0.290647883 #> 14     3.5928923 135 -131.40710765 2.915147e-01 56.54246 -85.86726 0.014422217 #> 15   179.2423630 135   44.24236304 2.416527e-01 56.64399 -81.35794 0.231131258 #> 16   156.3788362 135   21.37883620 5.642650e-02 56.28397 -81.46314 0.579725697 #> 17    76.1053884 135  -58.89461157 4.282192e-01 57.01858 -79.59386 0.329093916 #> 18   179.5775110 135   44.57751098 2.453277e-01 56.54598 -85.88930 0.006451665 #> 19   168.8548124 135   33.85481239 1.414998e-01 56.99007 -81.67727 0.137814071 #> 20   156.9981601 135   21.99816007 5.974309e-02 56.94036 -78.19473 0.812137995 #> 21   131.3096673 135   -3.69033265 1.681303e-03 58.55451 -81.10095 1.656518390 #> 22   141.8573232 135    6.85732324 5.805294e-03 56.87963 -81.77633 0.038806247 #> 23   131.9302114 135   -3.06978858 1.163408e-03 57.76312 -79.22036 0.277913588 #> 24     2.0470904 135 -132.95290957 2.732628e-01 58.16478 -73.87963 0.167292226 #> 25    21.3005781 135 -113.69942191 5.426872e-01 58.00100 -75.20324 0.228084875 #> 26    99.3881335 135  -35.61186649 1.565685e-01 57.35759 -88.64064 1.000315693 #> 27    88.0250253 135  -46.97497470 2.724257e-01 57.30484 -87.65538 0.924050137 #> 28    68.9263099 135  -66.07369005 5.389793e-01 57.16075 -87.97348 0.786588114 #> 29    90.5150269 135  -44.48497311 2.443102e-01 57.42836 -83.45550 0.694827072 #> 30    28.1960035 135 -106.80399653 6.614389e-01 60.70241 -82.33987 3.912959369 #> 31    64.1187803 135  -70.88121967 6.202651e-01 57.36879 -84.16161 0.671545094 #> 32    62.1096766 135  -72.89032339 6.559258e-01 57.24079 -82.66440 0.468256594 #> 33   112.9868087 135  -22.01319131 5.982476e-02 56.94608 -83.15029 0.196096390 #> 34    99.0806602 135  -35.91933977 1.592838e-01 57.20060 -82.75052 0.428067997 #> 35    69.4799042 135  -65.52009580 5.299855e-01 57.11886 -87.10771 0.706293859 #> 36    76.7082112 135  -58.29178884 4.194979e-01 57.24381 -86.60016 0.791048917 #> 37   147.0097887 135   12.00978868 1.780679e-02 57.46510 -80.98295 0.537254520 #> 38    79.1503888 135  -55.84961122 3.850838e-01 57.43942 -84.03984 0.731808513 #> 39    96.5775110 135  -38.42248902 1.822577e-01 56.54598 -85.88930 0.006451665 #> 40    81.5036471 135  -53.49635293 3.533160e-01 56.39018 -84.49953 0.290647883 #> 41    69.9557084 135  -65.04429159 5.223160e-01 56.48984 -83.64562 0.233319956 #> 42    58.1133021 135  -76.88669788 7.298228e-01 56.91003 -82.97626 0.148765856 #> 43    71.9144766 135  -63.08552342 4.913313e-01 56.99941 -81.57030 0.135719406 #> 44    70.3330663 135  -64.66693366 5.162731e-01 56.98154 -80.89757 0.035284835 #> 45    51.1374328 135  -83.86256723 8.682630e-01 56.58057 -83.25449 0.163779650 #> 46    18.2927937 135 -116.70720629 4.945652e-01 57.10223 -80.85329 0.137561913 #> 47    87.1788748 135  -47.82112524 2.823284e-01 57.16249 -79.34608 0.278199564 #> 48    93.1053884 135  -41.89461157 2.166862e-01 57.01858 -79.59386 0.329093916 #> 49    94.1460131 135  -40.85398689 2.060553e-01 56.75079 -79.76449 0.543570338 #> 50   142.1926276 135    7.19262763 6.386900e-03 57.03376 -81.08075 0.124328316 #> 51   176.4790467 135   41.47904674 2.124088e-01 57.02611 -82.26220 0.231023141 #> 52   177.0543965 135   42.05439651 2.183423e-01 57.38405 -80.98484 0.456207496 #> 53    23.2332286 135 -111.76677136 5.747869e-01 57.75378 -90.07557 1.399086157 #> 54   103.9981601 135  -31.00183993 1.186561e-01 56.94036 -78.19473 0.812137995 #> 55   146.0737814 135   11.07378138 1.513934e-02 60.68131 -64.30760 3.981541444 #> 56   113.7680324 135  -21.23196764 5.565388e-02 56.86022 -73.71551 1.136063985 #> 57    47.5314795 135  -87.46852052 9.445361e-01 65.25291 -80.35379 8.137036435 #> 58    47.2344027 135  -87.76559726 9.509630e-01 57.63245 -88.58797 1.275183622 #> 59   170.0185852 135   35.01858520 1.513952e-01 60.52898 -78.20558 2.788421095 #> 60   155.0209489 135   20.02094888 4.948622e-02 60.17527 -87.71555 3.796133613 #> 61   167.7920245 135   32.79202453 1.327552e-01 60.17833 -86.53381 3.708222390 #> 62   171.2092746 135   36.20927457 1.618656e-01 60.60199 -64.15214 3.896359674 #> 63   138.5522078 135    3.55220782 1.557800e-03 63.23432 -80.85004 6.269653708 #> 64   122.6455233 135  -12.35447673 1.884359e-02 57.47395 -84.82916 0.817359772 #> 65   133.5128533 135   -1.48714674 2.730377e-04 58.17624 -89.14835 1.834853505 #> 66   149.5743711 135   14.57437109 2.622374e-02 58.39801 -84.01700 1.690399496 #> 67   162.9679875 135   27.96798749 9.656893e-02 60.52765 -78.28396 2.799033629 #> 68   158.3225503 135   23.32255025 6.715325e-02 61.88510 -70.61228 4.363824595 #> 69   115.2026347 135  -19.79736531 4.838712e-02 60.52162 -70.30105 3.034489271 #> 70   119.9761409 135  -15.02385915 2.786622e-02 57.13081 -73.17161 0.743342981 #> 71   122.8030274 135  -12.19697261 1.836619e-02 56.98119 -73.56659 1.013892704 #> 72   114.6935938 135  -20.30640617 5.090742e-02 57.08609 -73.66549 0.909797484 #> 73   103.1303293 135  -31.86967070 1.253921e-01 62.11521 -79.60289 4.767543033 #> 74     8.7670576 135 -126.23294244 3.569008e-01 62.66625 -79.62485 5.318574573 #> 75   119.3335208 135  -15.66647924 3.030106e-02 57.86345 -84.94132 1.212922100 #> 76   104.8381659 135  -30.16183413 1.123131e-01 59.93575 -85.18176 3.303402111 #> 77    48.0604946 135  -86.93950544 9.331454e-01 59.43239 -85.35594 2.823453603 #> 78   137.0915642 135    2.09156417 5.400791e-04 57.86988 -72.43276 0.049393973 #> 79   161.1839314 135   26.18393143 8.464176e-02 57.98359 -85.06064 1.339123107 #> 80   135.5585167 135    0.55851674 3.851123e-05 56.70929 -89.07864 0.363940199 #> 81   172.1713155 135   37.17131546 1.705811e-01 56.70539 -86.40026 0.217927948 #> 82   125.7597590 135   -9.24024102 1.054099e-02 56.59113 -73.93354 1.406758166 #> 83    69.0268160 135  -65.97318402 5.373409e-01 64.12585 -76.48773 5.973184715 #> 84   150.2835345 135   15.28353448 2.883783e-02 64.32023 -81.60456 7.467968429 #> 85   134.1428456 135   -0.85715436 9.070538e-05 64.30530 -81.81712 7.464478343 #> 86   125.0696160 135   -9.93038398 1.217439e-02 57.93508 -77.23450 0.076509852 #> 87   138.9089205 135    3.90892050 1.886378e-03 58.26471 -75.61710 0.050155591 #> 88   161.5541617 135   26.55416172 8.705228e-02 58.16851 -76.26266 0.007708582 #> 89   170.1338664 135   35.13386645 1.523937e-01 58.15352 -76.94776 0.071516206 #> 90   150.1576805 135   15.15768054 2.836485e-02 58.17292 -76.89338 0.079137315 #> 91   142.8433048 135    7.84330480 7.594744e-03 57.57067 -84.40960 0.883788054 #> 92   154.3077850 135   19.30778500 4.602353e-02 56.83090 -82.73077 0.058364134 #> 93   169.9932136 135   34.99321359 1.511759e-01 56.17355 -83.89258 0.539245098 #> 94   169.3122386 135   34.31223860 1.453493e-01 56.30605 -83.22808 0.438294336 #> 95   176.7794039 135   41.77940393 2.154961e-01 56.51318 -83.91689 0.199616268 #> 96   125.5664779 135   -9.43352214 1.098659e-02 56.66409 -84.12255 0.038341694 #> 97   143.4255285 135    8.42552852 8.764140e-03 58.24140 -78.00652 0.453079115 #> 98   179.3401916 135   44.34019163 2.427225e-01 57.08923 -85.72226 0.514995736 #> 99   144.7672081 135    9.76720809 1.177757e-02 57.02811 -86.73046 0.588749353 #> 100  139.9675446 135    4.96754456 3.046481e-03 57.03511 -88.04221 0.662605777 #> 101   40.7566811 135  -94.24331887 9.079270e-01 57.44841 -89.57113 1.114972837 #> 102  147.6091329 135   12.60913288 1.962842e-02 57.38081 -89.88863 1.036204300 #> 103  119.1653933 135  -15.83460675 3.095491e-02 58.92379 -84.14088 2.221354599 #> 104  148.4323438 135   13.43234375 2.227504e-02 57.02148 -87.29001 0.629015339 #> 105  134.4983598 135   -0.50164018 3.106702e-05 56.66973 -85.89335 0.130203879 #> 106  153.7154808 135   18.71548081 4.324311e-02 58.42490 -77.38670 0.460169563 #> 107  169.9012412 135   34.90124122 1.503823e-01 60.06367 -81.87859 3.234277944 #> 108  178.8945169 135   43.89451691 2.378677e-01 60.55123 -78.37511 2.846498442 #> 109   90.8280555 135  -44.17194452 2.408840e-01 64.51234 -70.76068 6.602338029 #> 110  154.9538626 135   19.95386259 4.915514e-02 55.96354 -84.16566 0.733714075 #> 111  154.0446492 135   19.04464918 4.477761e-02 56.09822 -83.87993 0.614576870 #> 112  137.3787590 135    2.37875896 6.985795e-04 56.57524 -79.53439 0.803436113 #> 113  142.2613375 135    7.26133750 6.509509e-03 62.17127 -73.83609 4.174179044 #> 114  152.0050307 135   17.00503068 3.570013e-02 56.71332 -80.03104 0.491790080 #> 115  146.7451177 135   11.74511773 1.703059e-02 56.92225 -78.62637 0.723776407 #> 116  142.6571910 135    7.65719096 7.238589e-03 56.94097 -82.04905 0.123016388 #> 117  148.0801557 135   13.08015566 2.112228e-02 56.04296 -82.18900 0.763565397 #> 118  126.8736832 135   -8.12631684 8.152719e-03 57.15296 -78.21693 0.587596198 #> 119  134.9579050 135   -0.04209499 2.187640e-07 56.78967 -81.69409 0.062591996 #> 120  137.1930037 135    2.19300371 5.937365e-04 57.03506 -81.07893 0.125632121 #> 121  148.1054013 135   13.10540126 2.120389e-02 57.12118 -81.14354 0.223191312 #> 122  152.4215189 135   17.42151891 3.747029e-02 56.90170 -80.82482 0.062965432 #> 123  179.8487560 135   44.84875596 2.483223e-01 55.92301 -82.69263 0.849523652 #> 124    3.2003019 135 -131.79969808 2.868233e-01 56.96299 -81.13326 0.064995870 #> 125  145.1330105 135   10.13301052 1.267628e-02 57.36089 -80.87780 0.396226967 #> 126    4.1133021 135 -130.88669788 2.977922e-01 56.91003 -82.97626 0.148765856 #> 127  156.9791448 135   21.97914483 5.963985e-02 56.69786 -80.08772 0.507255914 #> 128  162.7655456 135   27.76554557 9.517599e-02 57.28288 -79.91529 0.033148466 #> 129    2.8305297 135 -132.16947030 2.824395e-01 58.70719 -84.88890 2.056659425 #> 130   78.8682989 135  -56.13170113 3.889837e-01 58.75585 -84.77962 2.093206125 #> 131  124.2442083 135  -10.75579175 1.428235e-02 58.53119 -81.22685 1.644628904 #> 132  136.2442083 135    1.24420825 1.911178e-04 58.53119 -81.22685 1.644628904 #> 133  172.1014918 135   37.10149184 1.699408e-01 57.30012 -87.53517 0.917666933 #> 134  171.2845696 135   36.28456958 1.625395e-01 57.10777 -80.86172 0.143105733 #> 135  171.3705884 135   36.37058837 1.633111e-01 56.73157 -81.06474 0.177853848 #> 136  179.5150269 135   44.51502689 2.446404e-01 57.42836 -83.45550 0.694827072 #> 137  153.5967092 135   18.59670921 4.269600e-02 56.92334 -87.12319 0.517473138 #> 138  173.4850630 135   38.48506296 1.828519e-01 56.36700 -84.55377 0.307761122 #> 139  150.8218467 135   15.82184671 3.090504e-02 56.63636 -82.06321 0.181596494 #> 140  169.4079060 135   34.40790597 1.461610e-01 56.35670 -84.69332 0.312005841 #> 141    5.3556429 135 -129.64435710 3.130482e-01 56.98677 -80.85561 0.022106553 #> 142   17.1398633 135 -117.86013670 4.767114e-01 57.04897 -79.51032 0.329709939 #> 143   75.0084431 135  -59.99155687 4.443194e-01 57.46053 -80.98935 0.532692379 #> 144  168.8967021 135   33.89670214 1.418502e-01 56.90987 -83.33421 0.171161599 #> 145  148.3097341 135   13.30973412 2.187025e-02 58.55513 -81.10027 1.657139469 #> 146  151.7379685 135   16.73796852 3.458760e-02 56.21400 -82.60251 0.564168912 #> 147  150.2083579 135   15.20835794 2.855483e-02 56.54006 -79.84836 0.731985322 #> 148  125.2390753 135   -9.76092467 1.176243e-02 58.51542 -81.24975 1.628856556 #> 149  173.2401662 135   38.24016619 1.805321e-01 59.05548 -85.46364 2.446541754 #> 150    1.0581952 135 -133.94180483 2.618960e-01 60.50445 -78.16683 2.751949327 #> 151  147.6095576 135   12.60955757 1.962975e-02 59.38025 -84.55317 2.705483216 #> 152  163.6073880 135   28.60738802 1.010349e-01 59.73632 -85.74431 3.162091001 #> 153  152.2330167 135   17.23301674 3.666381e-02 61.68018 -84.31053 4.988116270 #> 154  150.6113865 135   15.61138646 3.008832e-02 63.39714 -80.60932 6.358817919 #> 155  152.5258368 135   17.52583678 3.792036e-02 63.82044 -80.32836 6.704567313 #> 156    3.0753175 135 -131.92468249 2.853378e-01 61.13839 -80.59498 4.100073713 #> 157  156.9969896 135   21.99698958 5.973673e-02 62.38235 -79.55181 5.019177798 #> 158  171.4686188 135   36.46861881 1.641926e-01 61.28913 -81.36361 4.414001746 #> 159  155.8559034 135   20.85590343 5.369984e-02 61.26967 -85.29329 4.643374504 #> 160  138.3819547 135    3.38195468 1.412052e-03 58.83268 -88.62675 2.475414534 #> 161  137.2774450 135    2.27744500 6.403402e-04 59.55746 -87.99386 3.184963965 #> 162  122.1702429 135  -12.82975715 2.032132e-02 56.77751 -89.64748 0.448039386 #> 163  109.5014808 135  -25.49851918 8.026845e-02 58.63401 -88.65754 2.276737034 #> 164  127.0967143 135   -7.90328566 7.711349e-03 58.75325 -81.25341 1.866688770 #> 165  152.4480683 135   17.44806834 3.758458e-02 60.23087 -80.87996 3.284619803 #> 166  148.5845068 135   13.58450679 2.278257e-02 57.61335 -81.53718 0.749660873 #> 167  167.3330663 135   32.33306634 1.290651e-01 56.98154 -80.89757 0.035284835 #> 168  119.0783374 135  -15.92166261 3.129621e-02 57.40161 -90.73203 1.014044563 #> 169  173.3788593 135   38.37885933 1.818441e-01 57.14855 -83.95357 0.440931536 #> 170  147.9541543 135   12.95415433 2.071730e-02 56.93405 -78.27246 0.794561342 #> 171  108.0909445 135  -26.90905555 8.939472e-02 53.89241 -56.77092 2.008897350 #> 172   71.3887240 135  -63.61127595 4.995549e-01 65.35651 -80.45134 8.262956575 #> 173   96.5076949 135  -38.49230509 1.829207e-01 64.46661 -78.33258 6.749940163 #> 174   47.2303527 135  -87.76964733 9.510507e-01 65.86986 -77.43199 7.905125742 #> 175  111.0739299 135  -23.92607011 7.067368e-02 58.77807 -81.26625 1.891512974 #> 176  160.8932636 135   25.89326355 8.277297e-02 56.80500 -86.75739 0.365643323 #> 177  141.6869898 135    6.68698979 5.520473e-03 56.90752 -86.99064 0.488254806 #> 178  144.4171120 135    9.41711202 1.094839e-02 56.95217 -87.38937 0.566402484 #> 179  131.5302040 135   -3.46979595 1.486356e-03 56.95274 -87.20181 0.553580347 #> 180  172.7588390 135   37.75883896 1.760160e-01 56.53158 -83.93308 0.181220765 #> 181  162.8012107 135   27.80121068 9.542066e-02 58.36695 -77.29929 0.378787538 #> 182  131.7781031 135   -3.22189687 1.281558e-03 57.73850 -76.25649 0.437717013 #> 183  124.8592376 135  -10.14076244 1.269569e-02 57.83206 -76.04913 0.355119040 #> 184  116.9791211 135  -18.02087889 4.009285e-02 57.79607 -75.88535 0.402059863 #> 185  117.9796613 135  -17.02033874 3.576444e-02 57.82297 -75.86261 0.375162160 #> 186  106.0076632 135  -28.99233684 1.037723e-01 57.80498 -75.83213 0.398623306 #> 187  106.8166033 135  -28.18339666 9.806220e-02 57.81220 -76.13403 0.374973886 #> 188  137.8163778 135    2.81637781 9.792573e-04 57.83462 -76.11605 0.352553954 #> 189  122.7823827 135  -12.21761728 1.842842e-02 57.80706 -76.19338 0.374636205 #> 190  123.7468095 135  -11.25319052 1.563386e-02 57.79230 -76.26282 0.383924622 #> 191  153.7073406 135   18.70734057 4.320551e-02 57.63908 -76.45252 0.513591511 #> 192  169.6909542 135   34.69095425 1.485756e-01 57.72942 -76.40461 0.435025066 #> 193  146.8043094 135   11.80430940 1.720268e-02 57.74621 -76.20789 0.435488799 #> 194  137.6412157 135    2.64121572 8.612371e-04 57.77289 -76.44904 0.379774199 #> 195  126.5685520 135   -8.43144805 8.776459e-03 57.76564 -76.57223 0.375248898 #> 196  127.5220317 135   -7.47796829 6.903705e-03 57.80330 -76.61608 0.325819128 #> 197  138.6360477 135    3.63604768 1.632203e-03 57.09295 -75.38541 1.132566079 #> 198  162.7225707 135   27.72257067 9.488160e-02 57.05926 -83.47587 0.325727245 #> 199  143.4523592 135    8.45235918 8.820046e-03 56.93383 -84.04475 0.231400216 #> 200  175.1597666 135   40.15976661 1.991120e-01 57.08444 -86.02437 0.562269409 #> 201    3.9358377 135 -131.06416231 2.956440e-01 57.22031 -86.25117 0.715493541 #> 202   14.2310940 135 -120.76890604 4.331262e-01 57.63472 -90.21504 1.274978930 #> 203  100.8360977 135  -34.16390234 1.440953e-01 57.54912 -90.95570 1.153903433 #> 204  162.6057650 135   27.60576505 9.408374e-02 56.99864 -83.72769 0.275479367 #> 205    2.2440688 135 -132.75593116 2.755558e-01 56.16743 -81.79705 0.673397881 #> 206  139.3585417 135    4.35854173 2.345295e-03 56.73963 -86.05342 0.217461874 #> 207  135.0851954 135    0.08519538 8.960805e-07 56.72849 -86.51922 0.258381582 #> 208  145.9635527 135   10.96355272 1.483944e-02 56.75627 -83.37289 0.017554470 #> 209  127.2791677 135   -7.72083232 7.359414e-03 57.85521 -75.35454 0.375779158 #> 210  173.0091188 135   38.00911885 1.783572e-01 61.58218 -74.30225 3.582884457 #> 211   77.5919293 135  -57.40807072 4.068749e-01 61.05607 -73.85321 3.058981233 #> 212  163.0886728 135   28.08867276 9.740414e-02 61.03000 -80.67661 4.010091677 #> 213  152.5448321 135   17.54483209 3.800261e-02 60.03307 -87.06721 3.620511398 #> 214  125.2937569 135   -9.70624310 1.163101e-02 59.32024 -83.54462 2.591893404 #> 215   30.7936784 135 -104.20632163 7.092200e-01 59.86656 -80.68822 2.846654327 #> 216  141.2417645 135    6.24176450 4.809830e-03 56.05960 -85.27242 0.566686325 #> 217  121.5386118 135  -13.46138817 2.237148e-02 56.15472 -84.67611 0.513984468 #> 218  175.9368517 135   40.93685167 2.068921e-01 56.29796 -80.51733 0.777181628 #> 219  130.5955891 135   -4.40441087 2.394918e-03 57.03955 -67.36673 0.272273979 #> 220  135.7830320 135    0.78303202 7.569619e-05 55.39602 -55.00817 0.085561612 #> 221  119.5335638 135  -15.46643622 2.953218e-02 55.32261 -57.05826 0.577430030 #> 222  135.5077682 135    0.50776823 3.183069e-05 56.52477 -59.75213 0.360236979 #> 223  130.5307753 135   -4.46922468 2.465922e-03 56.58010 -59.68735 0.410942105 #> 224  126.2337377 135   -8.76626235 9.487328e-03 56.96731 -67.99832 0.175633576 #> 225  129.4896166 135   -5.51038341 3.748682e-03 56.92729 -64.38210 0.229481333 #> 226  126.9888833 135   -8.01111673 7.923209e-03 56.82849 -62.02910 0.333978818 #> 227  131.6551734 135   -3.34482660 1.381218e-03 56.65590 -61.05242 0.359124240 #> 228  166.2329468 135   31.23294685 1.204317e-01 57.71066 -70.71800 0.196378493 #> 229  154.2052050 135   19.20520502 4.553579e-02 57.83956 -70.67099 0.064521677 #> 230  139.1952407 135    4.19524072 2.172845e-03 56.22375 -57.19329 0.325193153 #> 231  159.1781815 135   24.17818149 7.217092e-02 56.35107 -58.76295 0.158092326 #> 232  133.0831016 135   -1.91689841 4.536419e-04 55.99949 -57.47690 0.102752682 #> 233  137.1622217 135    2.16222169 5.771855e-04 56.27434 -57.22275 0.376527831 #> 234  113.3387487 135  -21.66125130 5.792714e-02 56.88408 -72.76432 1.014957291 #> 235  117.1861178 135  -17.81388224 3.917709e-02 57.82113 -85.22281 1.188776440 #> 236  145.3289288 135   10.32892884 1.317121e-02 59.34175 -83.46837 2.608219439 #> 237  149.7841047 135   14.78410473 2.698392e-02 60.11246 -86.61582 3.659705101 #> 238  143.9450580 135    8.94505805 9.878279e-03 56.10023 -84.04572 0.602199885 #> 239  164.8537943 135   29.85379430 1.100307e-01 59.48755 -82.50680 2.703741427 #> 240  160.3634902 135   25.36349023 7.942057e-02 63.62246 -67.80125 6.844720511 #> 241  167.0784130 135   32.07841305 1.270401e-01 62.95165 -68.70475 5.867767985 #> 242  156.1631418 135   21.16314184 5.529365e-02 64.00431 -69.24641 6.610601114 #> 243  173.8469326 135   38.84693258 1.863067e-01 63.10892 -68.92667 6.015273206 #> 244  158.6629794 135   23.66297938 6.912797e-02 63.18255 -80.73991 6.181054820 #> 245  159.0990430 135   24.09904300 7.169924e-02 57.89330 -85.28979 1.267004715 #> 246  120.8148369 135  -14.18516308 2.484183e-02 57.70008 -76.22869 0.481618977 #> 247  165.2368257 135   30.23682574 1.128723e-01 57.09457 -87.53397 0.712121560 #> 248  143.2939974 135    8.29399736 8.492641e-03 57.00825 -87.53254 0.625798907 #> 249  122.8991507 135  -12.10084934 1.807785e-02 56.59195 -85.30574 0.034342981 #> 250  127.6802735 135   -7.31972647 6.614617e-03 58.81686 -86.59500 2.364100550 #> 251  126.5517926 135   -8.44820742 8.811384e-03 58.55768 -85.48446 1.966094250 #> 252  154.1919283 135   19.19192828 4.547285e-02 59.05505 -83.96787 2.347438657 #> 253  143.2719551 135    8.27195509 8.447561e-03 58.52521 -84.37183 1.838323426 #> 254  172.1803123 135   37.18031231 1.706637e-01 58.49710 -82.95324 1.735837334 #> 255  150.4013637 135   15.40136365 2.928420e-02 58.46911 -81.03441 1.559678812 #> 256  138.8114400 135    3.81144003 1.793466e-03 58.07968 -74.32262 0.080385435 #> 257  139.4886028 135    4.48860276 2.487352e-03 62.62628 -69.80980 5.191173371 #> 258   82.9574873 135  -52.04251274 3.343732e-01 61.87102 -74.14280 3.872349050 #> 259  126.8519103 135   -8.14808972 8.196465e-03 61.76811 -77.36395 3.779949064 #> 260  163.7567626 135   28.75676256 1.020928e-01 62.35394 -74.04404 4.355576755 #> 261  161.4692040 135   26.46920402 8.649614e-02 60.60527 -74.40366 2.505902087 #> 262  132.5352366 135   -2.46476338 7.500072e-04 58.80776 -71.03810 0.882580702 #> 263  116.0167927 135  -18.98320729 4.448916e-02 64.39352 -81.90750 7.564127304 #> 264  148.8043094 135   13.80430940 2.352580e-02 57.74621 -76.20789 0.435488799 #> 265  118.8654972 135  -16.13450277 3.213854e-02 57.73789 -76.11598 0.449288567 #> 266  112.3035026 135  -22.69649736 6.359642e-02 57.97609 -89.70961 1.641573580 #> 267  135.3970423 135    0.39704232 1.946205e-05 64.52644 -82.64399 7.748267082 #> 268  128.4427420 135   -6.55725796 5.308350e-03 64.87222 -80.84435 7.907553970 #> 269  134.0330245 135   -0.96697548 1.154372e-04 56.73575 -86.59830 0.282986735 #> 270   52.6635911 135  -82.33640893 8.369487e-01 62.34254 -75.66487 4.133463400 #> 271  114.6320249 135  -20.36797514 5.121659e-02 59.98847 -86.98117 3.569203275 #> 272  149.8647265 135   14.86472652 2.727902e-02 63.66492 -79.99223 6.437498450 #> 273    4.6648200 135 -130.33517995 3.045178e-01 51.34628 -83.80554 5.371704747 #> 274  144.4537958 135    9.45379581 1.103386e-02 58.44535 -80.97289 1.517513555 #> 275  145.4421861 135   10.44218608 1.346164e-02 58.25804 -81.16546 1.360048273 #> 276  126.0851267 135   -8.91487326 9.811724e-03 55.33374 -57.78048 0.576285478 #> 277  120.0924228 135  -14.90757719 2.743653e-02 55.26079 -57.80207 0.651132786 #> 278  137.6956868 135    2.69568680 8.971268e-04 56.38364 -59.52136 0.207553668 #> 279  157.0402587 135   22.04025875 5.997198e-02 56.55130 -60.48878 0.228505784 #> 280  141.9731794 135    6.97317942 6.003115e-03 56.52384 -57.40854 0.629006975 #> 281  128.0035267 135   -6.99647328 6.043289e-03 56.57900 -85.14494 0.059412318 #> 282  111.8825937 135  -23.11740631 6.597710e-02 58.41182 -85.10719 1.773405568 #> 283  136.0128652 135    1.01286525 1.266538e-04 58.49861 -84.81118 1.842019126 #> 284  166.3157061 135   31.31570610 1.210708e-01 55.63354 -55.65902 0.108029034 #> 285  137.8613460 135    2.86134599 1.010778e-03 55.47430 -54.84935 0.002085141 #> 286  148.1659036 135   13.16590360 2.140013e-02 56.65132 -58.63606 0.455008844 #> 287  149.5289587 135   14.52895870 2.606057e-02 56.71710 -67.68100 0.056567473 #> 288  134.8491839 135   -0.15081608 2.808085e-06 58.62800 -89.69737 2.293482927 #> 289  150.3338188 135   15.33381881 2.902790e-02 58.72711 -77.73428 0.879523445 #> 290  167.2544667 135   32.25446668 1.284383e-01 59.88027 -83.05346 3.124645933 #> 291  144.4988985 135    9.49889853 1.113939e-02 58.54366 -80.81001 1.560579648 #> 292  158.8342066 135   23.83420661 7.013203e-02 55.83043 -56.34665 0.040082530 #> 293  153.3563707 135   18.35637073 4.159955e-02 56.17034 -58.56433 0.027626576 #> 294  135.2367561 135    0.23675612 6.920181e-06 55.52223 -55.83423 0.017921519 #> 295  134.3929539 135   -0.60704615 4.549445e-05 55.71233 -55.50092 0.195099658 #> 296  137.7629120 135    2.76291205 9.424300e-04 56.24225 -61.09585 0.053243438 #> 297   95.3434634 135  -39.65653657 1.941532e-01 57.88004 -73.62502 0.115438715 #> 298  130.8804406 135   -4.11955938 2.095157e-03 57.91356 -72.73848 0.010471098 #> 299  147.7223931 135   12.72239307 1.998263e-02 57.69347 -73.15817 0.180685469 #> 300  136.7221955 135    1.72219545 3.661676e-04 57.78372 -77.92292 0.016544218 #> 301  135.5831322 135    0.58313221 4.198064e-05 55.17254 -53.81157 0.175175178 #> 302  134.6336080 135   -0.36639204 1.657323e-05 55.05091 -53.77881 0.041379023 #> 303  145.6927395 135   10.69273945 1.411539e-02 56.27845 -57.97273 0.363846070 #> 304  135.8356502 135    0.83565016 8.621126e-05 56.40164 -60.89543 0.101008281 #> 305  131.8196589 135   -3.18034106 1.248712e-03 56.71654 -83.65035 0.006620670 #> 306  131.8483695 135   -3.15163047 1.226268e-03 56.72451 -83.59491 0.003838134 #> 307  132.9470300 135   -2.05296998 5.203316e-04 56.67760 -83.47687 0.055928032 #> 308  129.4221861 135   -5.57781389 3.840989e-03 59.08162 -85.15078 2.449266021 #> 309  137.4232728 135    2.42327281 7.249693e-04 59.08819 -85.14233 2.449781909 #> 310  140.7098934 135    5.70989341 4.025047e-03 56.21051 -84.33240 0.481559440 #> 311  120.5055724 135  -14.49442761 2.593684e-02 56.80567 -66.04239 0.134918538 #> 312  141.1288527 135    6.12885267 4.637387e-03 55.15639 -71.02889 2.768784041 #> 313  133.6752586 135   -1.32474136 2.166592e-04 55.47388 -55.14887 0.020184587 #> 314  133.3017844 135   -1.69821556 3.560415e-04 54.29861 -61.20434 1.994322061 #> 315  139.3421132 135    4.34211316 2.327648e-03 54.22160 -61.17556 2.072608720 #> 316  160.4664927 135   25.46649268 8.006694e-02 55.57531 -55.44158 0.063596010 #> 317  172.4437887 135   37.44378875 1.730910e-01 55.48077 -55.51858 0.036464534 #> 318  154.0732789 135   19.07327895 4.491234e-02 56.17762 -83.75397 0.540359889 #> 319  134.7334701 135   -0.26652992 8.770148e-06 56.90182 -67.23156 0.137105440 #> 320  133.0113248 135   -1.98867524 4.882505e-04 56.69361 -86.67870 0.247553689 #> 321  148.4256404 135   13.42564040 2.225282e-02 58.26878 -74.78953 0.186519734 #> 322  152.1441896 135   17.14418960 3.628682e-02 56.76836 -89.70109 0.433842249 #> 323   88.2634775 135  -46.73652253 2.696670e-01 57.03610 -80.96207 0.108255757 #> 324  101.2397311 135  -33.76026888 1.407106e-01 55.44056 -57.48097 0.458070046 #> 325  102.2987499 135  -32.70125008 1.320212e-01 55.47714 -57.36877 0.418438804 #> 326  112.2651833 135  -22.73481665 6.381134e-02 55.57377 -57.37907 0.321810791 #> 327  111.2924729 135  -23.70752713 6.938850e-02 55.47158 -57.38146 0.423996465 #> 328  111.1236120 135  -23.87638797 7.038048e-02 55.65423 -57.57096 0.248205965 #> 329  122.1774410 135  -12.82255898 2.029852e-02 55.60685 -57.50574 0.291785519 #> 330  123.1908204 135  -11.80917960 1.721688e-02 55.53952 -57.51495 0.359114994 #> 331  123.1934885 135  -11.80651146 1.720910e-02 55.52605 -57.51679 0.372582089 #> 332  135.5053390 135    0.50533903 3.152686e-05 56.20777 -58.30704 0.007913940 #> 333  131.3243847 135   -3.67561530 1.667919e-03 56.23086 -60.19572 0.064923379 #> 334  136.0158685 135    1.01586846 1.274060e-04 55.43386 -54.61773 0.023659808 #> 335  136.0985756 135    1.09857555 1.489961e-04 56.24513 -58.94243 0.054707286 #> 336  133.4836488 135   -1.51635116 2.838668e-04 56.23686 -58.32794 0.036503974 #> 337  132.4055830 135   -2.59441700 8.309876e-04 55.63153 -55.51540 0.114298227 #> 338  127.5865054 135   -7.41349455 6.785173e-03 56.87796 -62.64751 0.104254931 #> 339  132.3444755 135   -2.65552452 8.705939e-04 56.32388 -61.72866 0.039107965 #> 340  136.6223926 135    1.62239261 3.249577e-04 55.88376 -56.66311 0.016959595 #> 341  134.2394793 135   -0.76052066 7.140638e-05 56.44569 -61.83298 0.162346431 #> 342  134.2675435 135   -0.73245648 6.623364e-05 56.40375 -61.81019 0.119691394 #> 343  131.2051355 135   -3.79486447 1.777901e-03 56.77283 -64.93163 0.089570785 #> 344  132.3785765 135   -2.62142352 8.483779e-04 55.51806 -55.60761 0.004694528 #> 345  135.3243847 135    0.32438470 1.299079e-05 56.23086 -60.19572 0.064923379 #> 346  137.4206789 135    2.42067891 7.234181e-04 56.20556 -60.05329 0.041013061 #> 347  141.2456506 135    6.24565062 4.815821e-03 56.27325 -60.30106 0.054060409 #> 348  138.5405466 135    3.54054662 1.547589e-03 54.74443 -65.56809 1.932796554 #> 349  141.5451883 135    6.54518833 5.288826e-03 54.76983 -65.54565 1.907396532 #> 350  147.3302869 135   12.33028693 1.876987e-02 56.23659 -60.18329 0.070649020 #> 351  144.7143932 135    9.71439320 1.165055e-02 57.54312 -70.06242 0.081478820 #> 352  148.2125446 135   13.21254465 2.155202e-02 56.25800 -60.36220 0.068432121 #> 353  142.4151947 135    7.41519465 6.788285e-03 56.82339 -69.42184 0.581858283 #> 354  151.1294181 135   16.12941813 3.211829e-02 56.26196 -60.49419 0.060833311 #> 355  149.1199160 135   14.11991603 2.461383e-02 57.03739 -69.75615 0.392406568 #> 356  150.1557130 135   15.15571299 2.835749e-02 57.18282 -69.59892 0.236068500 #> 357  162.4778253 135   27.47782532 9.321369e-02 57.89673 -73.39666 0.036011701 #> 358  139.3440555 135    4.34405548 2.329731e-03 56.24226 -58.54945 0.043464518 #> 359  129.1621316 135   -5.83786844 4.207495e-03 56.21496 -58.85498 0.022830441 #> 360  153.4879333 135   18.48793327 4.219798e-02 56.09873 -56.78170 0.197229786 #> 361  131.5010083 135   -3.49899165 1.511474e-03 56.79256 -64.44255 0.096204144 #> 362  155.5155928 135   20.51559283 5.196167e-02 56.81308 -64.40704 0.115270549 #> 363  168.6935026 135   33.69350257 1.401546e-01 55.86374 -58.16760 0.051896293 #> 364  130.6308180 135   -4.36918198 2.356759e-03 56.79924 -62.62002 0.023753416 #> 365    5.4099837 135 -129.59001635 3.137243e-01 56.18489 -58.47117 0.016399226 #> 366  165.8527351 135   30.85273513 1.175174e-01 55.33252 -54.92247 0.142809075 #> 367  141.5503026 135    6.55030262 5.297094e-03 56.81247 -64.35144 0.112699326 #> 368  120.7092748 135  -14.29072522 2.521294e-02 56.78580 -62.50140 0.001411843 #> 369  132.9335469 135   -2.06645315 5.271887e-04 55.12421 -54.87874 0.348004103 #> 370  179.8567715 135   44.85677153 2.484111e-01 56.60301 -62.36457 0.136835176 #> 371  137.3444931 135    2.34449306 6.785985e-04 56.38396 -61.69658 0.098468214 #> 372  125.1636039 135   -9.83639607 1.194502e-02 56.82128 -63.35880 0.091210950 #> 373  135.6442335 135    0.64423345 5.123910e-05 56.37673 -61.21692 0.083799599 #> 374  126.3088235 135   -8.69117655 9.325500e-03 56.82152 -63.12512 0.082972608 #> 375  134.3147584 135   -0.68524163 5.796989e-05 56.36218 -61.75621 0.077407010 #> 376  116.2234822 135  -18.77651775 4.352563e-02 56.18077 -63.62364 0.540825811 #> 377  136.1189938 135    1.11899382 1.545861e-04 56.15071 -63.81053 0.564695483 #> 378  139.2016713 135    4.20167131 2.179511e-03 56.16558 -63.66765 0.553901046 #> 379  110.0702284 135  -24.92977162 7.672759e-02 56.14786 -63.89150 0.565595058 #> 380  130.1388466 135   -4.86115338 2.917384e-03 56.11519 -63.79830 0.600213868 #> 381  125.1369029 135   -9.86309709 1.200996e-02 56.13731 -63.78897 0.580054225 #> 382  139.9820253 135    4.98202531 3.064269e-03 55.39186 -54.68959 0.069855885 #> 383  124.3466870 135  -10.65331305 1.401149e-02 56.34559 -61.71351 0.060819083 #> 384  126.1509269 135   -8.84907310 9.667419e-03 56.13074 -63.76985 0.586624178 #> 385  132.0299833 135   -2.97001669 1.089012e-03 56.77720 -63.59892 0.053476769 #> 386  127.4407540 135   -7.55924598 7.054593e-03 55.37959 -55.56674 0.140406376 #> 387  133.2953495 135   -1.70465048 3.587448e-04 56.81065 -63.15291 0.072103531 #> 388  145.0422872 135   10.04228724 1.245031e-02 56.45815 -62.14437 0.026918639 #> 389  132.4278335 135   -2.57216650 8.167951e-04 57.89129 -73.48102 0.102987430 #> 390  145.4517202 135   10.45172025 1.348623e-02 57.87805 -73.45281 0.115822180 #> 391  129.4123560 135   -5.58764404 3.854539e-03 57.89158 -73.50563 0.102698557 #> 392  129.4158822 135   -5.58411777 3.849675e-03 57.89790 -73.49513 0.096371450 #> 393  127.9821078 135   -7.01789221 6.080347e-03 56.84204 -68.48810 0.231845120 #> 394  108.4057017 135  -26.59429834 8.731564e-02 56.16063 -68.23988 0.906280173 #> 395  145.5435058 135   10.54350575 1.372414e-02 57.81872 -73.35073 0.045354982 #> 396  134.2199393 135   -0.78006068 7.512280e-05 59.07315 -88.61557 2.715875754 #> 397  140.3532355 135    5.35323551 3.537917e-03 55.72991 -57.16583 0.168642988 #> 398  171.3643795 135   36.36437953 1.632553e-01 57.02470 -69.36846 0.377829203 #> 399  120.8954357 135  -14.10456425 2.456034e-02 57.29141 -78.06290 0.484973507 #> 400  131.7738716 135   -3.22612844 1.284927e-03 56.35736 -61.01807 0.059292011 #> 401  135.8046333 135    0.80463335 7.993023e-05 56.40538 -60.94343 0.106038172 #> 402  156.1646029 135   21.16460288 5.530129e-02 58.69224 -78.03238 0.915853487 #> 403  138.7544910 135    3.75449099 1.740272e-03 55.38786 -55.05756 0.096839836 #> 404  135.5147720 135    0.51477202 3.271484e-05 54.81188 -55.68780 0.716396017 #> 405  154.2465726 135   19.24657255 4.573217e-02 58.19320 -75.13568 0.035252695 #> 406  141.7471734 135    6.74717335 5.620290e-03 56.13390 -57.95377 0.219560409 #> 407  155.8502122 135   20.85021220 5.367054e-02 55.96903 -57.86564 0.055208004 #> 408  142.9477381 135    7.94773811 7.798338e-03 55.89593 -57.74277 0.014102297 #> 409  132.6356572 135   -2.36434284 6.901379e-04 56.70981 -67.51232 0.060021714 #> 410  132.3168007 135   -2.68319935 8.888344e-04 57.01933 -66.21573 0.343198449 #> 411  155.2867319 135   20.28673190 5.080883e-02 56.88700 -67.96459 0.098112155 #> 412  134.5458303 135   -0.45416975 2.546545e-05 56.88909 -67.54345 0.117980174 #> 413  121.5410300 135  -13.45896997 2.236344e-02 57.86991 -73.31571 0.005838140 #> 414  139.7680658 135    4.76806581 2.806722e-03 58.70678 -81.81793 1.865958524 #> 415  123.7680658 135  -11.23193419 1.557486e-02 58.70678 -81.81793 1.865958524 #> 416  131.7680658 135   -3.23193419 1.289555e-03 58.70678 -81.81793 1.865958524 #> 417  132.0587958 135   -2.94120415 1.067985e-03 55.33412 -54.58995 0.121303343 #> 418  148.6398589 135   13.63985895 2.296861e-02 55.30925 -55.27544 0.191052411 #> 419  131.3690211 135   -3.63097886 1.627655e-03 56.34177 -60.06756 0.176762493 #> 420  128.3158319 135   -6.68416806 5.515815e-03 56.81410 -66.34414 0.134386917 #> 421  144.5050541 135    9.50505406 1.115383e-02 57.97290 -73.29492 0.105461555 #> 422  129.6362051 135   -5.36379487 3.551888e-03 57.81681 -73.20329 0.053981620 #> 423  123.0151865 135  -11.98481352 1.773281e-02 57.73173 -74.26753 0.267410867 #> 424  134.0204322 135   -0.97956783 1.184634e-04 57.71246 -74.27409 0.286677273 #> 425  158.1286589 135   23.12865885 6.604134e-02 57.77303 -72.44528 0.146249194 #> 426  122.7156136 135  -12.28438641 1.863039e-02 57.76395 -73.11575 0.113559154 #> 427  125.1243573 135   -9.87564266 1.204053e-02 57.79232 -72.43785 0.126958706 #> 428  125.0084892 135   -9.99151080 1.232473e-02 57.71902 -74.28822 0.280270678 #> 429  122.0084892 135  -12.99151080 2.083696e-02 57.71902 -74.28822 0.280270678 #> 430  107.0816041 135  -27.91839593 9.622677e-02 57.71159 -74.17621 0.287233474 #> 431  137.5578600 135    2.55785999 8.077343e-04 56.14174 -58.25419 0.225585808 #> 432  124.9360661 135  -10.06393389 1.250405e-02 57.66879 -74.44419 0.430347968 #> 433  154.3321603 135   19.33216033 4.613981e-02 55.38817 -55.73824 0.142860526 #> 434  133.8888327 135   -1.11116733 1.524312e-04 57.77183 -76.05062 0.415344492 #> 435  127.8472953 135   -7.15270474 6.316196e-03 57.74816 -72.91597 0.142783191 #> 436  114.9988411 135  -20.00115888 4.938844e-02 56.77692 -68.50369 0.298123767 #> 437  122.4006467 135  -12.59935332 1.959799e-02 58.03880 -73.41169 0.181440469 #> 438  137.0083055 135    2.00830548 4.979371e-04 55.77608 -56.09098 0.217700351 #> 439  141.8940389 135    6.89403889 5.867626e-03 55.78809 -56.26929 0.216039159 #> 440  139.9299846 135    4.92998456 3.000586e-03 55.71030 -56.24588 0.142807790 #> 441  147.8709554 135   12.87095543 2.045204e-02 56.04682 -56.19149 0.479323401 #> 442  137.7214355 135    2.72143546 9.143470e-04 55.87461 -56.50811 0.026576417 #> 443  147.7975999 135   12.79759993 2.021958e-02 55.78400 -56.42613 0.118322732 #> 444  130.7555118 135   -4.24448819 2.224158e-03 55.81035 -56.48206 0.091120041 #> 445  127.7846268 135   -7.21537318 6.427359e-03 55.77300 -56.45189 0.129036609 #> 446  135.5769611 135    0.57696115 4.109681e-05 54.96253 -53.90542 0.032620190 #> 447  162.5882622 135   27.58826222 9.396447e-02 56.03978 -58.25382 0.123632647 #> 448  114.7927893 135  -20.20721070 5.041128e-02 57.76222 -72.99300 0.125370627 #> 449  136.7296402 135    1.72964021 3.693402e-04 56.04835 -59.63357 0.120807720 #> 450  151.2181165 135   16.21811651 3.247251e-02 63.36906 -79.76387 6.074708808 #> 451  136.1790479 135    1.17904790 1.716239e-04 56.40087 -61.95456 0.118966044 #> 452  125.9818966 135   -9.01810339 1.004027e-02 57.76406 -72.68772 0.139025821 #> 453  133.9478809 135   -1.05211907 1.366611e-04 56.21511 -57.59359 0.312681404 #> 454  153.7563965 135   18.75639650 4.343240e-02 56.12605 -57.94266 0.211707047 #> 455  148.7802385 135   13.78023847 2.344382e-02 56.05096 -57.93973 0.136613459 #> 456  137.6983002 135    2.69830020 8.988672e-04 56.24316 -57.98054 0.328562700 #> 457  132.9097799 135   -2.09022014 5.393852e-04 56.18167 -57.67033 0.275442101 #> 458  117.9000919 135  -17.09990813 3.609961e-02 59.26427 -85.78037 2.707394210 #> 459  125.7064391 135   -9.29356087 1.066300e-02 56.85890 -62.46559 0.170926723 #> 460  129.6769980 135   -5.32300196 3.498068e-03 56.70093 -62.60015 0.076333491 #> 461  127.5260537 135   -7.47394634 6.896281e-03 56.66921 -66.09274 0.003328504 #> 462  132.5275701 135   -2.47242994 7.546802e-04 56.74240 -62.81759 0.018583473 #> 463  121.2410001 135  -13.75899987 2.337161e-02 55.88424 -57.27609 0.012824129 #> 464  141.0373409 135    6.03734090 4.499936e-03 56.03243 -57.53516 0.131893479 #> 465  120.0531564 135  -14.94684357 2.758125e-02 56.64067 -84.99982 0.003797685 #> 466  128.0788970 135   -6.92110297 5.913786e-03 58.76343 -89.18186 2.422045506 #> 467  122.8951716 135  -12.10482845 1.808974e-02 55.37109 -61.33220 0.919274117 #> 468  132.2786481 135   -2.72135187 9.142909e-04 57.45163 -69.21790 0.057917777 #> 469  134.3850008 135   -0.61499916 4.669432e-05 56.63541 -66.34227 0.044298159 #> 470  132.6142001 135   -2.38579992 7.027211e-04 55.48442 -55.24267 0.015887205 #> 471  110.7320878 135  -24.26791222 7.270760e-02 57.73801 -73.10888 0.139498513 #> 472  137.2941255 135    2.29412553 6.497546e-04 55.99354 -57.14060 0.094241571 #> 473  142.6763030 135    7.67630302 7.274769e-03 58.11952 -74.50744 0.020726490 #> 474  138.0476568 135    3.04765677 1.146693e-03 57.70568 -74.23550 0.293300284 #> 475  136.2490194 135    1.24901939 1.925987e-04 57.36361 -69.32531 0.035978337 #> 476  127.8807933 135   -7.11920669 6.257173e-03 55.40388 -58.07975 0.511241631 #> 477  140.0854715 135    5.08547152 3.192842e-03 55.22268 -57.83083 0.691150688 #> 478  128.8986836 135   -6.10131638 4.595810e-03 55.38814 -58.05801 0.526978122 #> 479  137.9951946 135    2.99519463 1.107554e-03 55.47699 -54.63306 0.017366103 #> 480  131.9444389 135   -3.05556110 1.152649e-03 55.46624 -54.71911 0.002423979 #> 481  135.0996499 135    0.09964989 1.225938e-06 55.91876 -57.48763 0.020128365 #> 482  146.0064076 135   11.00640762 1.495568e-02 54.03163 -61.83075 2.251707179 #> 483  142.3804566 135    7.38045655 6.724832e-03 56.75114 -84.34509 0.059072715 #> 484  118.2919555 135  -16.70804453 3.446404e-02 55.17108 -57.51863 0.727549725 #> 485  164.5518806 135   29.55188056 1.078165e-01 54.28582 -76.06196 3.901349948 #> 486  168.2758790 135   33.27587895 1.367017e-01 55.46323 -55.79668 0.072361017 #> 487  135.1210032 135    0.12100316 1.807625e-06 56.18361 -58.93639 0.006821076 #> 488  136.7915326 135    1.79153258 3.962456e-04 56.27367 -59.42203 0.095271922 #> 489  128.9659863 135   -6.03401369 4.494978e-03 56.38651 -59.08602 0.198627974 #> 490  167.4960101 135   32.49601009 1.303692e-01 59.50225 -84.60643 2.827489383 #> 491  157.8660228 135   22.86602284 6.455000e-02 56.16947 -80.75203 0.832025622 #> 492  148.6334033 135   13.63340334 2.294687e-02 56.97787 -68.96384 0.398211402 #> 493  138.4052598 135    3.40525978 1.431580e-03 55.58568 -55.53562 0.068452261 #> 494  138.6970308 135    3.69703078 1.687412e-03 56.66862 -59.37676 0.487912951 #> 495  114.6504765 135  -20.34952346 5.112384e-02 56.68864 -72.39795 1.234685386 #> 496  137.1314498 135    2.13144979 5.608739e-04 56.79347 -89.69384 0.458958059 #> 497   12.5912858 135 -122.40871417 4.094761e-01 54.28513 -75.99432 3.907522644 #> 498  173.2353206 135   38.23532061 1.804864e-01 58.25619 -81.49840 1.392503798 #> 499  164.2789589 135   29.27895886 1.058343e-01 57.29167 -69.32586 0.107919907 #> 500  174.1143224 135   39.11432242 1.888803e-01 57.26171 -69.61196 0.157176263 #> 501  158.3978384 135   23.39783838 6.758751e-02 57.32377 -69.11247 0.064065787 #> 502  131.8848958 135   -3.11510423 1.198009e-03 57.22702 -78.13518 0.537422574 #> 503  149.9545673 135   14.95456726 2.760976e-02 61.87966 -66.69981 5.114361826 #> 504  171.7891116 135   36.78911163 1.670912e-01 55.63598 -71.26641 2.301472355 #> 505  145.4424930 135   10.44249299 1.346243e-02 55.58594 -55.47562 0.071467494 #> 506  132.9563558 135   -2.04364424 5.156150e-04 56.06327 -59.26042 0.122062902 #> 507  125.4364876 135   -9.56351236 1.129145e-02 56.80978 -62.92647 0.057216869 #> 508  145.9702080 135   10.97020796 1.485746e-02 56.85819 -88.23076 0.489001253 #> 509  160.0134053 135   25.01340529 7.724326e-02 57.25393 -69.78027 0.181175266 #> 510  149.0245853 135   14.02458530 2.428259e-02 57.24698 -69.76697 0.182817360 #> 511  140.9715018 135    5.97150185 4.402325e-03 57.33276 -69.79377 0.102346767 #> 512  142.1743545 135    7.17435453 6.354489e-03 57.23307 -69.53454 0.180361214 #> 513  153.0669136 135   18.06691361 4.029795e-02 57.30888 -69.65623 0.115468395 #> 514  137.9083431 135    2.90834306 1.044254e-03 55.51204 -54.75803 0.046126948 #> 515  159.3824303 135   24.38243027 7.339542e-02 61.83606 -73.53874 3.841382154 #> 516  147.9083750 135   12.90837500 2.057113e-02 55.87734 -56.20675 0.309849913 #> 517  152.3615115 135   17.36151147 3.721260e-02 56.56802 -84.55931 0.106748639 #> 518  124.3169967 135  -10.68300326 1.408970e-02 57.19209 -72.57189 0.719088946 #> 519  151.8432550 135   16.84325500 3.502410e-02 59.50635 -82.50502 2.722540458 #> 520  138.9685878 135    3.96858778 1.944406e-03 55.23179 -54.77762 0.236227476 #> 521  162.7604081 135   27.76040809 9.514077e-02 56.84711 -89.75100 0.512597092 #> 522  147.1896190 135   12.18961895 1.834405e-02 56.83846 -89.71236 0.503948319 #> 523  170.4063502 135   35.40635025 1.547666e-01 56.70063 -89.67431 0.371159296 #> 524  160.2527524 135   25.25275238 7.872858e-02 56.83775 -89.60849 0.508281269 #> 525  155.0668466 135   20.06684665 4.971337e-02 56.83852 -89.75006 0.504003892 #> 526  142.8597560 135    7.85975598 7.626638e-03 56.82514 -89.61110 0.495673735 #> 527  156.7992548 135   21.79925481 5.866759e-02 56.70257 -89.68392 0.373100533 #> 528  159.9874041 135   24.98740412 7.708276e-02 56.80759 -89.75098 0.473071095 #> 529  139.6552047 135    4.65520468 2.675424e-03 56.82547 -89.61828 0.495999109 #> 530  145.3514506 135   10.35145064 1.322871e-02 56.80082 -89.65234 0.471353043 #> 531  143.6245205 135    8.62452052 9.183007e-03 56.81542 -89.68053 0.485953021 #> 532  140.9007024 135    5.90070243 4.298554e-03 56.84055 -89.69163 0.511076619 #> 533  146.6623102 135   11.66231018 1.679129e-02 56.82122 -89.61129 0.491751903 #> 534  145.8217168 135   10.82171685 1.445797e-02 56.81657 -89.68388 0.487104238 #> 535  138.6372868 135    3.63728681 1.633315e-03 56.79991 -89.67688 0.470443345 #> 536  163.8582255 135   28.85822549 1.028145e-01 56.84514 -89.75685 0.510623600 #> 537  151.6935389 135   16.69353894 3.440423e-02 56.81599 -89.73128 0.481479685 #> 538  117.0287847 135  -17.97121527 3.987217e-02 56.78639 -89.70627 0.451878894 #> 539  160.2837978 135   25.28379776 7.892228e-02 56.70962 -89.70166 0.375107589 #> 540  145.7460460 135   10.74604599 1.425648e-02 56.82127 -89.63821 0.491805700 #> 541  149.7565797 135   14.75657971 2.688354e-02 56.81352 -89.62949 0.484048045 #> 542   39.5164263 135  -95.48357370 8.818551e-01 56.82749 -89.51447 0.494046673 #> 543  152.3476513 135   17.34765135 3.715321e-02 56.84648 -89.60710 0.517008513 #> 544  135.0227558 135    0.02275581 6.392925e-08 56.83327 -89.66329 0.503798457 #> 545  139.7234914 135    4.72349141 2.754490e-03 56.79884 -89.70098 0.464328969 #> 546  118.7267290 135  -16.27327100 3.269375e-02 56.81960 -89.67215 0.490128838 #> 547  134.3676402 135   -0.63235981 4.936777e-05 56.81384 -89.61078 0.484366794 #> 548  138.6552940 135    3.65529403 1.649528e-03 56.83273 -89.60994 0.503257665 #> 549  166.7891010 135   31.78910103 1.247589e-01 56.85259 -89.69725 0.518071313 #> 550  135.7195713 135    0.71957133 6.392381e-05 56.79670 -89.70991 0.462183692 #> 551  130.4489144 135   -4.55108562 2.557084e-03 56.84331 -89.60858 0.513836928 #> 552   35.7164059 135  -99.28359411 8.043380e-01 56.82617 -89.51599 0.492726953 #> 553   27.5164059 135 -107.48359411 6.492135e-01 56.82617 -89.51599 0.492726953 #> 554  153.3582843 135   18.35828431 4.160822e-02 56.81105 -89.62945 0.481583305 #> 555  134.8147696 135   -0.18523037 4.235838e-06 56.81556 -89.69655 0.481047791 #> 556  148.2850816 135   13.28508164 2.178931e-02 56.84043 -89.71765 0.505919739 #> 557  145.0716515 135   10.07165149 1.252323e-02 57.34592 -80.99176 0.418084101 #> 558  158.6393940 135   23.63939397 6.899024e-02 57.24574 -86.71106 0.799675584 #> 559  146.5939405 135   11.59394053 1.659499e-02 57.23972 -81.87194 0.410327372 #> 560  136.2801132 135    1.28011324 2.023074e-04 56.21787 -81.68970 0.634391805 #> 561  135.9144766 135    0.91447658 1.032429e-04 56.99941 -81.57030 0.135719406 #> 562  161.4731918 135   26.47319180 8.652221e-02 57.19028 -87.04273 0.771012821 #> 563  148.6881462 135   13.68814624 2.313152e-02 56.98037 -81.96094 0.162414507 #> 564  147.1076815 135   12.10768155 1.809827e-02 57.11933 -81.14151 0.221332700 #> 565  177.6041395 135   42.60413946 2.240880e-01 56.93872 -78.84399 0.641126885 #> 566  147.9751700 135   12.97517001 2.078457e-02 56.79741 -81.65830 0.054842320 #> 567  144.1328023 135    9.13280228 1.029729e-02 57.16731 -81.05609 0.257877487 #> 568  174.9157935 135   39.91579350 1.967001e-01 57.02983 -81.53981 0.166137173 #> 569    0.3156904 135 -134.68430964 2.535200e-01 56.17380 -81.67094 0.678453252 #> 570   10.0022331 135 -124.99776693 3.734871e-01 56.69584 -80.05130 0.509270020 #> 571  101.2535583 135  -33.74644167 1.405953e-01 57.71845 -72.28509 0.208927352 #> 572  163.6488001 135   28.64880011 1.013276e-01 55.77124 -81.48170 1.092448517 #> 573    1.3337400 135 -133.66626000 2.650389e-01 57.08353 -80.80315 0.100448107 #> 574  176.9471514 135   41.94715145 2.172301e-01 57.05747 -81.46253 0.193775533 #> 575  144.6309830 135    9.63098297 1.145134e-02 56.93015 -78.80728 0.663221881 #> 576  141.2545507 135    6.25455068 4.829556e-03 56.57073 -79.74446 0.723625853 #> 577   14.4537492 135 -120.54625076 4.363887e-01 56.69485 -84.27939 0.002786501 #> 578  138.9387857 135    3.93878567 1.915313e-03 56.94021 -81.58537 0.087953478 #> 579   90.7018246 135  -44.29817540 2.422628e-01 54.59597 -60.39465 1.730027774 #> 580  113.7598661 135  -21.24013393 5.569670e-02 64.38452 -79.46341 6.990342710 #> 581  163.4253497 135   28.42534971 9.975315e-02 60.91414 -65.13952 4.232646383 #> 582   11.3149806 135 -123.68501937 3.915280e-01 57.11520 -80.80500 0.132116716 #> 583  166.1404455 135   31.14044548 1.197194e-01 57.08826 -79.47461 0.305915384 #> 584    3.4413603 135 -131.55863967 2.896994e-01 56.16509 -81.46817 0.698603316 #> 585  166.6540834 135   31.65408343 1.237014e-01 57.13218 -88.45253 0.770934865 #> 586  176.6374060 135   41.63740600 2.140338e-01 57.37381 -83.30883 0.629466382 #> 587    2.9557084 135 -132.04429159 2.839197e-01 56.48984 -83.64562 0.233319956 #> 588  116.6570651 135  -18.34293492 4.153867e-02 57.43216 -81.58843 0.579898964 #> 589   74.2346807 135  -60.76531928 4.558548e-01 61.71573 -73.85637 3.718639628 #> 590   99.0470904 135  -35.95290957 1.595817e-01 58.16478 -73.87963 0.167292226 #> 591  140.0831041 135    5.08310412 3.189870e-03 57.04293 -81.25242 0.156372000 #> 592  169.3881335 135   34.38813351 1.459931e-01 57.35759 -88.64064 1.000315693 #> 593    3.0023780 135 -131.99762200 2.844726e-01 56.35288 -87.05391 0.059682642 #> 594  167.8111296 135   32.81112961 1.329099e-01 56.47653 -83.89999 0.236262830 #> 595  178.1503888 135   43.15038878 2.298711e-01 57.43942 -84.03984 0.731808513 #> 596  147.2343806 135   12.23438063 1.847902e-02 57.76173 -70.67948 0.142350941 #> 597  151.9599475 135   16.95994754 3.551109e-02 57.00936 -78.19850 0.731195524 #> 598    5.0250253 135 -129.97497470 3.089510e-01 57.30484 -87.65538 0.924050137 #> 599  160.9263099 135   25.92630995 8.298439e-02 57.16075 -87.97348 0.786588114 #> 600  178.1187803 135   43.11878033 2.295345e-01 57.36879 -84.16161 0.671545094 #> 601  158.4721620 135   23.47216203 6.801758e-02 57.12217 -87.11693 0.709603388 #> 602  164.6833521 135   29.68335215 1.087779e-01 57.20636 -83.39680 0.467652245 #> 603    5.9495202 135 -129.05047981 3.204758e-01 57.22131 -86.22766 0.716494537 #> 604  147.4349561 135   12.43495610 1.908989e-02 56.94852 -82.40849 0.159068247 #> 605  171.2882661 135   36.28826607 1.625726e-01 56.21297 -81.68058 0.639285134 #> 606   15.1460131 135 -119.85398689 4.466102e-01 56.75079 -79.76449 0.543570338 #> 607  176.0806602 135   41.08066023 2.083482e-01 57.20060 -82.75052 0.428067997 #> 608  165.5873965 135   30.58739646 1.155048e-01 57.21757 -83.54327 0.489226270 #> 609    2.4907844 135 -132.50921558 2.784413e-01 57.01755 -82.25098 0.222461564 #> 610  171.3617866 135   36.36178664 1.632320e-01 56.21548 -81.55502 0.648208345 #> 611  117.4191462 135  -17.58085382 3.815882e-02 59.83234 -87.47639 3.448234454 #> 612  133.2445148 135   -1.75548520 3.804603e-04 58.53094 -81.22659 1.644383515 #> 613  125.2434344 135   -9.75656560 1.175192e-02 58.53532 -81.22423 1.648755883 #> 614  135.2445148 135    0.24451480 7.381171e-06 58.53094 -81.22659 1.644383515 #> 615  153.2258251 135   18.22582510 4.100996e-02 56.84555 -84.50719 0.164724841 #> 616  172.0007294 135   37.00072940 1.690190e-01 57.14956 -82.93084 0.388294551 #> 617  152.4784040 135   17.47840397 3.771538e-02 57.11212 -82.18182 0.305597459 #> 618  164.7928291 135   29.79282910 1.095818e-01 56.90301 -81.86091 0.073623625 #> 619  120.2141194 135  -14.78588064 2.699040e-02 57.11258 -80.97298 0.184736877 #> 620  108.2570166 135  -26.74298337 8.829471e-02 57.53207 -78.89399 0.034263465 #> 621  165.9868087 135   30.98680869 1.185410e-01 56.94608 -83.15029 0.196096390 #> 622  100.3005781 135  -34.69942191 1.486481e-01 58.00100 -75.20324 0.228084875 #> 623  169.4393190 135   34.43931899 1.464280e-01 56.40926 -84.58812 0.265503712 #> 624    9.5054829 135 -125.49451710 3.667713e-01 57.00976 -82.23415 0.214670160 #> 625  150.3096673 135   15.30966735 2.893653e-02 58.55451 -81.10095 1.656518390 #> 626    5.5549108 135 -129.44508923 3.155307e-01 57.73640 -78.23381 0.004153313 #> 627  165.9846123 135   30.98461228 1.185242e-01 57.17297 -87.86435 0.797148773 #> 628    8.3342911 135 -126.66570885 3.511786e-01 57.39112 -85.42172 0.782182435 #> 629  144.7366962 135    9.73669616 1.170411e-02 56.95365 -78.61309 0.692373368 #> 630  126.0732362 135   -8.92676385 9.837915e-03 56.49050 -80.11709 0.692300664 #> 631  142.2228502 135    7.22285015 6.440687e-03 57.04122 -81.02418 0.131789791 #> 632  172.6049523 135   37.60495229 1.745843e-01 57.22674 -86.78765 0.787381839 #> 633  154.7082112 135   19.70821116 4.795229e-02 57.24381 -86.60016 0.791048917 #> 634  155.8552162 135   20.85521615 5.369630e-02 56.95001 -81.71402 0.109189787 #> 635  152.5072238 135   17.50722383 3.783986e-02 57.21937 -82.03320 0.401418000 #> 636  168.1325065 135   33.13250649 1.355263e-01 56.19568 -80.28201 0.942495590 #> 637   19.4114208 135 -115.58857918 5.122014e-01 55.83210 -81.82704 0.997289026 #> 638    4.3094416 135 -130.69055844 3.001754e-01 55.84798 -81.98470 0.969974206 #> 639  149.4902067 135   14.49020666 2.592174e-02 57.05119 -77.29366 0.960401568 #> 640  108.2029055 135  -26.79709449 8.865238e-02 57.82656 -88.42528 1.465314610 #> 641  154.5684720 135   19.56847197 4.727470e-02 64.57625 -82.35469 7.786805925 #> 642  150.4248514 135   15.42485142 2.937359e-02 63.74769 -69.06308 6.365733756 #> 643  135.8467075 135    0.84670749 8.850785e-05 63.61943 -80.06097 6.414315537 #> 644  137.2277947 135    2.22779466 6.127246e-04 58.69351 -82.68730 1.920974998 #> 645   69.2002128 135  -65.79978721 5.345200e-01 62.16523 -73.54300 4.170549410 #> 646  127.8599176 135   -7.14008238 6.293923e-03 57.51802 -74.68539 0.572274329 #> 647  138.3903408 135    3.39034084 1.419063e-03 58.45822 -77.87593 0.646009637 #> 648  162.2848047 135   27.28480473 9.190871e-02 56.93219 -82.67182 0.159653371 #> 649  137.7445836 135    2.74458362 9.299678e-04 58.01202 -74.48278 0.086887852 #> 650  119.5839889 135  -15.41601108 2.933993e-02 57.93239 -74.80319 0.149867724 #> 651  131.1907568 135   -3.80924316 1.791399e-03 57.83707 -75.51138 0.382969772 #> 652  152.3277168 135   17.32771681 3.706787e-02 58.17336 -76.62093 0.044245390 #> 653  109.7786005 135  -25.22139952 7.853321e-02 57.84485 -76.16849 0.336843088 #> 654  132.9908700 135   -2.00912999 4.983461e-04 58.18243 -77.15235 0.123975672 #> 655  128.9961966 135   -6.00380337 4.450081e-03 58.11006 -77.20485 0.075039154 #> 656  124.9184543 135  -10.08154567 1.254785e-02 58.10225 -77.33607 0.114088366 #> 657  127.1912244 135   -7.80877555 7.528022e-03 57.87068 -77.09293 0.187778514 #> 658  152.7282786 135   17.72827865 3.880146e-02 58.50180 -78.89173 0.935468137 #> 659  155.7137239 135   20.71372392 5.297017e-02 58.46294 -78.94921 0.910133187 #> 660  132.7905257 135   -2.20947432 6.026885e-04 57.61320 -77.95832 0.187068364 #> 661  126.0428734 135   -8.95712663 9.904953e-03 58.34552 -80.12443 1.162720179 #> 662  138.2288366 135    3.22883662 1.287085e-03 58.69163 -81.10158 1.793638144 #> 663  137.4837793 135    2.48377930 7.616246e-04 57.46993 -78.57961 0.185882514 #> 664  124.0165800 135  -10.98341999 1.489327e-02 57.66073 -80.79202 0.677652680 #> 665  112.0060371 135  -22.99396293 6.527436e-02 57.62104 -80.84558 0.656377931 #> 666  156.4068069 135   21.40680688 5.657424e-02 56.94041 -79.16714 0.558324429 #> 667  135.2011297 135    0.20112973 4.994218e-06 57.11150 -80.99529 0.183661915 #> 668  145.1003203 135   10.10032034 1.259463e-02 57.00478 -81.25935 0.118221591 #> 669  166.5621113 135   31.56211133 1.229836e-01 58.87777 -75.66724 0.668687489 #> 670  142.4848216 135    7.48482161 6.916365e-03 58.17754 -74.76757 0.093269270 #> 671  122.8625351 135  -12.13746490 1.818741e-02 57.94671 -74.34495 0.052738091 #> 672  147.5250625 135   12.52506249 1.936755e-02 58.10751 -74.75881 0.023241856 #> 673  150.5845248 135   15.58452485 2.998487e-02 58.07501 -74.68941 0.015283573 #> 674  119.5848229 135  -15.41517706 2.933675e-02 58.00338 -74.74563 0.082893390 #> 675  116.3065241 135  -18.69347593 4.314149e-02 57.98817 -75.20398 0.240915590 #> 676  124.3867506 135  -10.61324942 1.390630e-02 57.92049 -75.12935 0.307964881 #> 677  124.2679825 135  -10.73201746 1.421928e-02 57.91351 -75.32572 0.317475687 #> 678  162.3448460 135   27.34484604 9.231365e-02 58.21123 -76.56204 0.070340748 #> 679  117.3905742 135  -17.60942584 3.828295e-02 57.63432 -75.35202 0.596671784 #> 680  152.1432565 135   17.14325646 3.628287e-02 58.26826 -76.83660 0.174470964 #> 681  127.9951712 135   -7.00482878 6.057732e-03 57.82358 -75.83714 0.380026731 #> 682  124.7961349 135  -10.20386509 1.285418e-02 57.88265 -76.10932 0.304520567 #> 683  135.0368601 135    0.03686012 1.677369e-07 57.75432 -75.82619 0.449282642 #> 684  163.6742114 135   28.67421138 1.015075e-01 58.41094 -77.46432 0.469640461 #> 685    3.9856064 135 -131.01439362 2.962456e-01 58.25478 -77.09978 0.196328866 #> 686  137.0468222 135    2.04682219 5.172199e-04 58.22329 -77.02844 0.153061735 #> 687  130.8209262 135   -4.17907380 2.156131e-03 57.77569 -76.15695 0.406011567 #> 688  128.3587915 135   -6.64120855 5.445142e-03 57.99416 -76.72024 0.123173625 #> 689  138.2405768 135    3.24057681 1.296461e-03 57.47945 -75.71921 0.729631959 #> 690  124.1802064 135  -10.81979358 1.445283e-02 58.01610 -76.98868 0.065903990 #> 691  141.7947092 135    6.79470922 5.699762e-03 58.16501 -77.48111 0.223703117 #> 692  134.2241082 135   -0.77589180 7.432199e-05 57.94656 -76.97641 0.135450400 #> 693  135.5278171 135    0.52781705 3.439393e-05 57.78922 -76.61842 0.339897947 #> 694  123.0853132 135  -11.91468678 1.752590e-02 57.97176 -77.17837 0.063260642 #> 695  133.1470122 135   -1.85298783 4.238968e-04 57.93958 -77.10624 0.118879096 #> 696  130.2076213 135   -4.79237867 2.835419e-03 57.90862 -77.03471 0.161610016 #> 697  118.4497525 135  -16.55024750 3.381613e-02 57.78313 -76.74937 0.322434947 #> 698  132.8905579 135   -2.10944213 5.493514e-04 57.52704 -76.24788 0.649183317 #> 699  132.7626221 135   -2.23737790 6.180074e-04 58.08833 -77.59778 0.193887419 #> 700  125.8239143 135   -9.17608566 1.039513e-02 58.05763 -77.52556 0.139757939 #> 701  127.1306903 135   -7.86930967 7.645189e-03 57.90162 -77.16440 0.133404579 #> 702  140.4330587 135    5.43305867 3.644213e-03 57.74523 -76.80782 0.360336101 #> 703  130.6842542 135   -4.31574577 2.299464e-03 58.08157 -77.72925 0.233992104 #> 704  120.7468483 135  -14.25315168 2.508053e-02 58.05030 -77.65549 0.179288999 #> 705  109.0526368 135  -25.94736315 8.311922e-02 57.89518 -77.29547 0.116416184 #> 706  122.0365709 135  -12.96342915 2.074697e-02 57.85719 -77.35341 0.130970073 #> 707  124.9600343 135  -10.03996573 1.244456e-02 57.85003 -77.48280 0.091271934 #> 708  146.0810295 135   11.08102954 1.515916e-02 57.78833 -77.33984 0.199833415 #> 709  117.4130133 135  -17.58698673 3.818544e-02 58.05515 -78.18729 0.302649943 #> 710  144.9886391 135    9.98863909 1.231764e-02 57.74255 -77.52771 0.175327528 #> 711  144.9125972 135    9.91259718 1.213081e-02 57.73533 -77.65668 0.135686686 #> 712  149.9729292 135   14.97292917 2.767761e-02 57.70453 -77.58532 0.189915710 #> 713  165.9573072 135   30.95730721 1.183154e-01 57.66650 -77.64286 0.227942678 #> 714  132.6451285 135   -2.35487145 6.846197e-04 57.70948 -78.11113 0.054960596 #> 715  136.8634077 135    1.86340771 4.286776e-04 58.47351 -80.29418 1.335330486 #> 716  137.8201161 135    2.82011607 9.818586e-04 57.50569 -78.00227 0.282637842 #> 717  126.6836574 135   -8.31634262 8.538464e-03 58.48793 -80.56729 1.431198866 #> 718  141.4501320 135    6.45013203 5.136321e-03 58.57016 -80.86305 1.605491105 #> 719  146.2209748 135   11.22097481 1.554448e-02 58.21783 -79.95523 0.968100383 #> 720  131.2168987 135   -3.78310129 1.766896e-03 58.65186 -81.15761 1.753866681 #> 721  126.2050491 135   -8.79495093 9.549526e-03 58.61208 -81.21356 1.725523315 #> 722  147.4004054 135   12.40040536 1.898396e-02 58.52511 -80.98392 1.597270174 #> 723  133.5946136 135   -1.40538640 2.438409e-04 58.43773 -80.75542 1.436240926 #> 724  152.2530103 135   17.25301026 3.674893e-02 58.38975 -81.34501 1.514627096 #> 725  125.6911375 135   -9.30886254 1.069814e-02 57.15945 -78.51007 0.515923856 #> 726  130.6780864 135   -4.32191361 2.306042e-03 57.12067 -78.56494 0.535137732 #> 727  127.4815482 135   -7.51845181 6.978657e-03 58.04101 -81.30444 1.154446666 #> 728  130.7363108 135   -4.26368917 2.244327e-03 57.92488 -81.00191 1.015456819 #> 729  123.5347570 135  -11.46524301 1.622862e-02 57.97277 -81.28235 1.086215311 #> 730  142.5989184 135    7.59891843 7.128835e-03 57.94299 -81.20666 1.044993155 #> 731  123.7246913 135  -11.27530866 1.569538e-02 57.88578 -81.05683 0.976348086 #> 732  125.8393541 135   -9.16064592 1.036018e-02 57.78804 -80.96189 0.860201757 #> 733  143.2869304 135    8.28693038 8.478175e-03 57.00053 -79.31147 0.455656804 #> 734  108.0573327 135  -26.94266727 8.961819e-02 57.55250 -80.82522 0.587828944 #> 735  148.1547373 135   13.15473726 2.136384e-02 57.02160 -79.51010 0.357080826 #> 736  152.2142822 135   17.21428217 3.658414e-02 56.99195 -79.43844 0.417728185 #> 737  147.3340093 135   12.33400934 1.878121e-02 56.93128 -79.29495 0.524909535 #> 738  149.3932081 135   14.39320815 2.557586e-02 56.90151 -79.22362 0.583695439 #> 739  131.1310545 135   -3.86894548 1.847992e-03 56.94313 -79.61852 0.404538776 #> 740  154.5520854 135   19.55208538 4.719556e-02 57.20490 -80.33468 0.089034150 #> 741  154.8507037 135   19.85070374 4.864820e-02 56.91794 -78.45641 0.767220847 #> 742  163.5616802 135   28.56168021 1.007123e-01 56.88395 -78.96153 0.668862833 #> 743  137.7494133 135    2.74941332 9.332437e-04 55.25910 -80.07183 1.946017133 #> 744  131.1660496 135   -3.83395043 1.814713e-03 57.13615 -81.03021 0.226723872 #> 745  179.3703407 135   44.37034071 2.430527e-01 56.91528 -82.54677 0.137105013 #> 746  147.5483583 135   12.54835827 1.943967e-02 56.83750 -82.32657 0.048047310 #> 747  139.7044566 135    4.70445663 2.732335e-03 56.80121 -82.10264 0.005310529 #> 748  139.6260497 135    4.62604973 2.642017e-03 58.22039 -74.50817 0.121589973 #> 749  139.9044019 135    4.90440190 2.969526e-03 58.01972 -74.22074 0.020740255 #> 750  150.6052337 135   15.60523372 3.006461e-02 58.11191 -74.62709 0.015581188 #> 751  152.4642460 135   17.46424598 3.765431e-02 58.14062 -74.82978 0.060367686 #> 752  150.2243091 135   15.22430905 2.861476e-02 58.19843 -75.16704 0.030020596 #> 753  118.5648136 135  -16.43518642 3.334757e-02 57.89481 -74.86377 0.256631586 #> 754  125.8598452 135   -9.14015485 1.031388e-02 57.66077 -74.57342 0.437678252 #> 755  122.2073799 135  -12.79262007 2.020384e-02 57.94645 -75.39659 0.279062368 #> 756  169.2542302 135   34.25423018 1.448583e-01 58.42200 -76.53129 0.281110404 #> 757  160.3771329 135   25.37713292 7.950603e-02 58.35927 -76.38764 0.194823709 #> 758  174.3809267 135   39.38092667 1.914639e-01 58.28695 -76.44154 0.134287043 #> 759  168.4431077 135   33.44310774 1.380792e-01 58.25457 -76.36909 0.090124498 #> 760  131.1099807 135   -3.89001925 1.868179e-03 57.90395 -75.58732 0.310607795 #> 761  136.4284326 135    1.42843258 2.519037e-04 57.70835 -75.23171 0.521376020 #> 762  127.0917892 135   -7.90821078 7.720963e-03 57.86624 -75.64706 0.348320678 #> 763  133.0727800 135   -1.92721997 4.585403e-04 57.82980 -75.70714 0.379283534 #> 764  156.4282608 135   21.42826076 5.668770e-02 58.14502 -76.48355 0.007643794 #> 765  124.9139748 135  -10.08602516 1.255900e-02 57.89030 -75.91353 0.307830525 #> 766  139.1531345 135    4.15313453 2.129448e-03 57.76230 -75.63228 0.452258256 #> 767  134.0547739 135   -0.94522609 1.103028e-04 57.79206 -75.76671 0.411539687 #> 768  176.7538806 135   41.75388057 2.152329e-01 58.41767 -77.33169 0.429503217 #> 769  169.8156947 135   34.81569470 1.496460e-01 58.38633 -77.25978 0.374735660 #> 770  140.0637459 135    5.06374592 3.165620e-03 58.26187 -76.96897 0.179863271 #> 771  146.1261605 135   11.12616046 1.528289e-02 58.22970 -76.89622 0.135913582 #> 772  140.9167547 135    5.91675466 4.321974e-03 57.81857 -75.96750 0.374083619 #> 773  131.1161918 135   -3.88380818 1.862218e-03 57.68813 -75.75183 0.520948368 #> 774  148.8612451 135   13.86124510 2.372026e-02 58.31763 -77.24530 0.306032917 #> 775  159.3435676 135   24.34356759 7.316164e-02 58.52734 -77.89080 0.715134712 #> 776  170.4698792 135   35.46987916 1.553225e-01 58.46520 -77.74332 0.617614327 #> 777  172.6578529 135   37.65785288 1.750758e-01 58.37229 -77.52333 0.454417254 #> 778  121.2147296 135  -13.78527040 2.346095e-02 58.09132 -76.87031 0.002463552 #> 779  162.3277059 135   27.32770586 9.219796e-02 58.48863 -77.94941 0.688360618 #> 780  121.1968004 135  -13.80319956 2.352201e-02 58.05403 -76.93027 0.027974913 #> 781  142.0028175 135    7.00281751 6.054253e-03 57.60768 -76.00033 0.584967323 #> 782  124.0583076 135  -10.94169239 1.478032e-02 58.07794 -77.13235 0.019480869 #> 783  138.7097580 135    3.70975804 1.699050e-03 58.23066 -77.56118 0.312782937 #> 784  131.4456263 135   -3.55437371 1.559700e-03 57.85554 -76.69586 0.261802723 #> 785  140.7160017 135    5.71600169 4.033664e-03 58.15829 -77.61288 0.263846521 #> 786  138.7787549 135    3.77875489 1.762838e-03 58.12699 -77.53900 0.209121750 #> 787  138.5109581 135    3.51095811 1.521830e-03 57.75134 -76.67701 0.366002148 #> 788  166.6305470 135   31.63054703 1.235175e-01 57.68891 -76.53556 0.451984217 #> 789  125.2905109 135   -9.70948913 1.163879e-02 57.84251 -76.95658 0.239494602 #> 790  130.6999491 135   -4.30005085 2.282770e-03 58.11961 -77.67159 0.248601236 #> 791  111.8850808 135  -23.11491920 6.596290e-02 58.02689 -77.45347 0.085587662 #> 792  125.9473661 135   -9.05263390 1.011731e-02 57.99548 -77.38003 0.030748111 #> 793  155.6136323 135   20.61363235 5.245949e-02 57.65104 -76.59418 0.478075379 #> 794  162.6728818 135   27.67288181 9.454178e-02 57.61913 -76.52469 0.521755980 #> 795  147.8706163 135   12.87061625 2.045096e-02 58.47996 -78.68441 0.853500349 #> 796  129.6227849 135   -5.37721510 3.569684e-03 58.11218 -77.80166 0.288028342 #> 797  121.8080636 135  -13.19193640 2.148484e-02 58.01961 -77.58334 0.125170059 #> 798  126.9310904 135   -8.06890963 8.037939e-03 57.95684 -77.43891 0.015537569 #> 799  126.1132230 135   -8.88677702 9.749976e-03 57.86429 -77.22393 0.170738349 #> 800  130.2576726 135   -4.74232736 2.776502e-03 57.76664 -77.07303 0.303593168 #> 801  140.7372296 135    5.73722964 4.063679e-03 57.51539 -76.50597 0.625498760 #> 802  156.8558020 135   21.85580202 5.897236e-02 58.44113 -78.74212 0.824456946 #> 803  130.6072566 135   -4.39274342 2.382246e-03 58.07412 -77.85917 0.261912321 #> 804  124.6686483 135  -10.33135166 1.317739e-02 58.04353 -77.78682 0.219374651 #> 805  133.9139346 135   -1.08606539 1.456220e-04 57.91946 -77.49819 0.021839795 #> 806  135.0970817 135    0.09708171 1.163563e-06 57.82631 -77.28193 0.185281547 #> 807  116.8981107 135  -18.10188934 4.045412e-02 57.88145 -77.55593 0.036423659 #> 808  129.0205939 135   -5.97940608 4.413987e-03 57.81920 -77.41126 0.145532576 #> 809  127.2251918 135   -7.77480820 7.462672e-03 57.69073 -77.18915 0.344296714 #> 810  134.0044372 135   -0.99556276 1.223636e-04 57.78056 -77.47002 0.160747807 #> 811  142.1262601 135    7.12626006 6.269578e-03 57.71817 -77.32597 0.269999032 #> 812  115.5831697 135  -19.41683031 4.654485e-02 57.92492 -78.02594 0.148539681 #> 813  111.7064033 135  -23.29359669 6.698662e-02 57.86310 -77.88046 0.050888479 #> 814  143.0718443 135    8.07184426 8.043786e-03 57.67726 -77.44845 0.264040133 #> 815  159.8970506 135   24.89705058 7.652631e-02 57.69729 -77.71416 0.150293646 #> 816  164.8813304 135   29.88133036 1.102338e-01 57.65860 -77.77252 0.188984198 #> 817  132.0843407 135   -2.91565931 1.049515e-03 57.53170 -77.55126 0.386173285 #> 818  136.7441507 135    1.74415068 3.755632e-04 57.68258 -77.97402 0.105740611 #> 819  135.7340287 135    0.73402865 6.651828e-05 58.53281 -80.44591 1.439253900 #> 820  137.8378407 135    2.83784070 9.942395e-04 58.39479 -80.40688 1.301236061 #> 821  136.4645187 135    1.46451869 2.647920e-04 57.61677 -78.48354 0.068389803 #> 822  134.5864954 135   -0.41350456 2.110938e-05 57.55511 -78.33906 0.161563258 #> 823  128.7070027 135   -6.29299731 4.889113e-03 57.49455 -78.19555 0.257946492 #> 824  133.2699857 135   -1.73001431 3.694999e-04 58.58377 -81.13679 1.685775674 #> 825  132.3359190 135   -2.66408100 8.762133e-04 58.55417 -81.05952 1.644738789 #> 826  141.5305084 135    6.53050837 5.265128e-03 58.46692 -80.83064 1.502256246 #> 827  133.6587965 135   -1.34120352 2.220774e-04 58.40915 -80.67939 1.389245809 #> 828  139.7239524 135    4.72395244 2.755028e-03 58.37928 -80.60289 1.340957578 #> 829  129.6553924 135   -5.34460760 3.526522e-03 57.45205 -78.31601 0.264620399 #> 830  132.7165062 135   -2.28349380 6.437462e-04 57.42080 -78.24349 0.319757378 #> 831  146.3239720 135   11.32397200 1.583115e-02 58.51440 -81.11554 1.616406037 #> 832  143.3885645 135    8.38856450 8.687409e-03 58.48600 -81.03910 1.576576372 #> 833  137.9595659 135    2.95956588 1.081362e-03 58.65336 -81.56465 1.789665586 #> 834  139.1169275 135    4.11692752 2.092481e-03 58.56141 -81.40105 1.686289149 #> 835  149.1831229 135   14.18312291 2.483469e-02 58.53257 -81.32277 1.646012317 #> 836  147.1715330 135   12.17153299 1.828966e-02 58.49278 -81.37848 1.617651350 #> 837  155.3018455 135   20.30184545 5.088456e-02 58.43491 -81.22490 1.548348347 #> 838  176.5433206 135   41.54332061 2.130676e-01 58.74406 -82.13861 1.937543958 #> 839  137.5901797 135    2.59017973 8.282754e-04 58.17088 -81.00925 1.261448340 #> 840  146.6417227 135   11.64172274 1.673206e-02 58.10254 -80.98979 1.174703847 #> 841  133.7207587 135   -1.27924132 2.020319e-04 57.99974 -80.95777 1.071899243 #> 842  119.8769525 135  -15.12304746 2.823538e-02 58.33295 -81.99931 1.514992747 #> 843  135.4715679 135    0.47156790 2.745386e-05 58.00127 -81.35756 1.126145626 #> 844  119.9287919 135  -15.07120806 2.804214e-02 57.72413 -80.87603 0.759464112 #> 845  131.1560325 135   -3.84396752 1.824208e-03 57.13367 -79.40893 0.276007862 #> 846  109.8415298 135  -25.15847018 7.814181e-02 57.24423 -79.82563 0.027815307 #> 847  152.3463238 135   17.34632380 3.714752e-02 56.97080 -79.23997 0.500891048 #> 848  118.6563278 135  -16.34367215 3.297724e-02 57.76068 -81.28338 0.874123872 #> 849  141.1427466 135    6.14274663 4.658437e-03 56.98204 -79.56481 0.381131003 #> 850  148.2022104 135   13.20221038 2.151832e-02 56.95241 -79.49321 0.441770159 #> 851  142.3219992 135    7.32199919 6.618725e-03 56.89240 -79.34891 0.548286391 #> 852  141.2497088 135    6.24970880 4.822081e-03 56.88384 -79.47555 0.510338846 #> 853  136.3356050 135    1.33560500 2.202272e-04 57.17456 -80.71694 0.173064076 #> 854  124.9878166 135  -10.01218337 1.237578e-02 56.81220 -79.97115 0.415221130 #> 855  152.7976048 135   17.79760485 3.910552e-02 56.76277 -78.67765 0.863687459 #> 856  153.7460275 135   18.74602751 4.338439e-02 56.60813 -78.89679 0.958197866 #> 857  145.4618065 135   10.46180652 1.351227e-02 56.57299 -79.39861 0.852195200 #> 858  144.3489474 135    9.34894744 1.079047e-02 58.10939 -73.44027 0.129169079 #> 859  140.3381412 135    5.33814116 3.517994e-03 57.82515 -73.67573 0.170733138 #> 860    0.3278169 135 -134.67218307 2.536557e-01 56.92764 -82.60517 0.149466352 #> 861  142.5024885 135    7.50248853 6.949054e-03 56.83555 -82.40427 0.046105104 #> 862  166.4583889 135   31.45838885 1.221766e-01 56.84078 -82.47223 0.056971544 #> 863  136.0646019 135    1.06460191 1.399231e-04 58.02712 -73.95846 0.029069701 #> 864  150.8040420 135   15.80404201 3.083552e-02 58.05100 -74.35695 0.021535939 #> 865  149.5444826 135   14.54448265 2.611629e-02 58.14507 -74.69799 0.054769906 #> 866  149.3440804 135   14.34408042 2.540156e-02 58.13379 -75.02736 0.092759470 #> 867  119.6635454 135  -15.33645456 2.903788e-02 57.93676 -74.67204 0.155549277 #> 868  103.6442060 135  -31.35579405 1.213810e-01 57.89920 -74.73276 0.187072670 #> 869  155.4937963 135   20.49379627 5.185132e-02 58.43969 -76.13539 0.257991465 #> 870  114.2466883 135  -20.75331166 5.317283e-02 58.01985 -75.27454 0.210505695 #> 871  119.2865963 135  -15.71340367 3.048285e-02 57.95117 -75.26561 0.279183894 #> 872  160.5837522 135   25.58375219 8.080597e-02 58.22876 -76.16572 0.047060639 #> 873  124.1889307 135  -10.81106933 1.442953e-02 57.90877 -75.45655 0.316742867 #> 874  126.1784133 135   -8.82158674 9.607456e-03 58.34343 -76.71762 0.226088281 #> 875  176.1614159 135   41.16141588 2.091682e-01 58.30553 -76.77642 0.199968554 #> 876  150.0588247 135   15.05882467 2.799607e-02 58.33421 -76.91607 0.252198025 #> 877  150.9407508 135   15.94075085 3.137130e-02 58.32419 -77.11288 0.265735809 #> 878  137.9761126 135    2.97611263 1.093487e-03 57.78647 -75.89801 0.411662062 #> 879  124.3539758 135  -10.64602418 1.399232e-02 57.55896 -75.47158 0.661074009 #> 880    0.6119380 135 -134.38806197 2.568455e-01 58.44154 -77.53741 0.523669723 #> 881  127.8381437 135   -7.16185634 6.332369e-03 57.81284 -76.09880 0.374331479 #> 882  163.9390160 135   28.93901602 1.033909e-01 58.74564 -78.34319 1.028970751 #> 883  175.5959300 135   40.59593000 2.034604e-01 58.40352 -77.59538 0.509080095 #> 884  147.7611577 135   12.76115772 2.010459e-02 57.80705 -76.22759 0.374652072 #> 885  131.8035025 135   -3.19649746 1.261432e-03 57.73788 -76.21602 0.443818677 #> 886  103.3744911 135  -31.62550894 1.234781e-01 58.41950 -77.93452 0.619237696 #> 887  147.6655776 135   12.66557759 1.980455e-02 57.76333 -76.41762 0.389333008 #> 888  124.0407104 135  -10.95928960 1.482790e-02 58.04061 -77.19202 0.005581317 #> 889  130.1634239 135   -4.83657605 2.887959e-03 57.97752 -77.04799 0.092708576 #> 890  135.5877465 135    0.58774652 4.264765e-05 57.75801 -76.54758 0.382880414 #> 891  145.7724508 135   10.77245083 1.432663e-02 57.59045 -76.38717 0.573993462 #> 892  113.0687922 135  -21.93120783 5.937998e-02 57.93315 -77.23745 0.078440583 #> 893  133.4757588 135   -1.52424123 2.868286e-04 58.20819 -77.95477 0.407920025 #> 894  121.8691534 135  -13.13084657 2.128631e-02 57.98888 -77.51130 0.071010366 #> 895  131.3777686 135   -3.62223135 1.619822e-03 57.70454 -76.93100 0.377464503 #> 896  129.8565506 135   -5.14344940 3.266058e-03 57.45203 -76.36446 0.712418564 #> 897  149.7927498 135   14.79274976 2.701549e-02 58.47118 -78.81610 0.877809793 #> 898  143.9187263 135    8.91872633 9.820207e-03 58.41104 -78.66826 0.774797790 #> 899  145.7781097 135   10.77810974 1.434169e-02 58.43234 -78.87366 0.852484915 #> 900  150.9282317 135   15.92823169 3.132205e-02 57.77335 -77.59913 0.121088081 #> 901  115.7593678 135  -19.24063223 4.570394e-02 57.72066 -77.91683 0.079608192 #> 902  158.8197958 135   23.81979575 7.004724e-02 57.68996 -77.84534 0.134189251 #> 903  137.7290206 135    2.72902058 9.194510e-04 57.64450 -78.03114 0.131881122 #> 904  151.7032354 135   16.70323537 3.444421e-02 58.12612 -79.26432 0.654431959 #> 905  128.5929583 135   -6.40704167 5.067924e-03 57.66698 -78.23211 0.073579421 #> 906  136.7137230 135    1.71372298 3.625736e-04 57.60577 -78.08914 0.158675352 #> 907  131.7751494 135   -3.22485057 1.283909e-03 57.57447 -78.01638 0.213852155 #> 908  139.6181894 135    4.61818936 2.633046e-03 58.51778 -80.64407 1.497871787 #> 909  143.8050942 135    8.80509420 9.571566e-03 57.46760 -78.05927 0.308782331 #> 910  134.3208863 135   -0.67911371 5.693771e-05 58.62829 -81.01447 1.718865260 #> 911  135.6476984 135    0.64769838 5.179175e-05 58.36883 -80.73426 1.367337261 #> 912  135.2459672 135    0.24596724 7.469122e-06 58.07061 -80.04824 0.865493827 #> 913  123.2393099 135  -11.76069006 1.707578e-02 57.59152 -78.87071 0.011666271 #> 914  153.2476811 135   18.24768112 4.110838e-02 58.50362 -81.24706 1.617062006 #> 915  139.4048156 135    4.40481558 2.395358e-03 58.41126 -81.08267 1.501828638 #> 916  152.1228496 135   17.12284962 3.619654e-02 58.44755 -81.49849 1.583861915 #> 917  155.3813595 135   20.38135946 5.128393e-02 58.33236 -81.19356 1.434370022 #> 918  134.6006587 135   -0.39934130 1.968808e-05 58.21058 -80.95568 1.282735163 #> 919  141.1858945 135    6.18589449 4.724110e-03 57.43612 -79.09375 0.076127812 #> 920  126.6536966 135   -8.34630343 8.600096e-03 58.14230 -80.93379 1.196043958 #> 921  136.5943137 135    1.59431368 3.138069e-04 57.18626 -78.64530 0.449982523 #> 922  144.3378813 135    9.33788125 1.076494e-02 58.17267 -81.41227 1.297544727 #> 923  103.1500529 135  -31.84994707 1.252369e-01 57.75535 -80.48922 0.680206451 #> 924  118.3986156 135  -16.60138443 3.402543e-02 57.63799 -80.19310 0.477502475 #> 925  153.3747348 135   18.37473482 4.168282e-02 57.16058 -79.02702 0.378705562 #> 926  172.2261118 135   37.22611178 1.710844e-01 58.15582 -81.60739 1.303567485 #> 927  141.3548143 135    6.35481428 4.985638e-03 58.09853 -81.45446 1.223408504 #> 928  145.2517458 135   10.25174583 1.297510e-02 57.10863 -79.27411 0.363061186 #> 929  157.3126264 135   22.31262635 6.146337e-02 57.07830 -79.20092 0.406909775 #> 930  111.6779027 135  -23.32209730 6.715064e-02 57.84019 -81.17464 0.942199067 #> 931  142.2396566 135    7.23965656 6.470695e-03 57.06975 -79.32816 0.370932027 #> 932  133.3513861 135   -1.64861392 3.355466e-04 57.48067 -80.41243 0.387111983 #> 933  119.0678835 135  -15.93211648 3.133733e-02 57.59218 -80.77166 0.609102160 #> 934  139.9866168 135    4.98661677 3.069919e-03 57.03710 -79.77254 0.257251427 #> 935  137.1904385 135    2.19043851 5.923483e-04 56.91351 -79.54698 0.449667665 #> 936  117.9161376 135  -17.08386245 3.603190e-02 57.41793 -81.17914 0.519938192 #> 937  113.4366992 135  -21.56330076 5.740444e-02 57.03704 -80.67638 0.017134596 #> 938    1.9675579 135 -133.03244212 2.723397e-01 57.06287 -84.71575 0.400219747 #> 939  133.0172261 135   -1.98277392 4.853571e-04 57.66836 -74.31364 0.330938907 #> 940  122.9276078 135  -12.07239223 1.799292e-02 56.33250 -78.83369 1.260870621 #> 941  143.3848350 135    8.38483496 8.679686e-03 58.20770 -74.90327 0.017586391 #> 942  134.3484152 135   -0.65158478 5.241515e-05 57.84650 -75.25013 0.383226146 #> 943  128.6255255 135   -6.37447445 5.016534e-03 57.64787 -74.96177 0.578046467 #> 944  156.2396645 135   21.23966454 5.569424e-02 58.31181 -76.64631 0.182694198 #> 945  166.3633168 135   31.36331684 1.214392e-01 58.24846 -76.50160 0.107569088 #> 946  171.4244689 135   36.42446889 1.637953e-01 58.21736 -76.42967 0.064694809 #> 947  123.0131059 135  -11.98689409 1.773897e-02 57.86132 -75.77763 0.342281954 #> 948  153.9354736 135   18.93547362 4.426570e-02 58.39652 -77.06029 0.326287134 #> 949  157.3524978 135   22.35249784 6.168323e-02 58.63835 -77.78104 0.790767740 #> 950  121.5490026 135  -13.45099742 2.233695e-02 57.49996 -75.20300 0.729122697 #> 951  152.1874751 135   17.18747511 3.647028e-02 58.19876 -76.82409 0.093196254 #> 952  148.2712224 135   13.27122242 2.174387e-02 58.13269 -76.74525 0.027124440 #> 953  145.2353382 135   10.23533820 1.293360e-02 57.62363 -75.61145 0.590932976 #> 954  175.9227227 135   40.92272275 2.067493e-01 58.28622 -77.17371 0.251194172 #> 955  116.1358385 135  -18.86416148 4.393291e-02 58.08498 -77.00210 0.014748716 #> 956  120.1193200 135  -14.88068000 2.733761e-02 58.04704 -77.06045 0.023191340 #> 957   98.2952458 135  -36.70475424 1.663258e-01 58.41244 -78.06690 0.636052478 #> 958  149.6472630 135   14.64726299 2.648671e-02 57.72612 -76.47785 0.426543928 #> 959  159.6910826 135   24.69108264 7.526538e-02 57.65635 -76.46457 0.496314462 #> 960  117.6137672 135  -17.38623275 3.731865e-02 58.00108 -77.91134 0.200811098 #> 961  122.6985525 135  -12.30144752 1.868217e-02 57.93614 -77.83060 0.111993472 #> 962  130.6278589 135   -4.37214110 2.359953e-03 57.43305 -76.75145 0.672514291 #> 963  156.0944719 135   21.09447191 5.493540e-02 58.50340 -79.89906 1.253661641 #> 964  126.8814715 135   -8.11852853 8.137099e-03 57.47497 -77.92885 0.325299395 #> 965  125.0237162 135   -9.97628375 1.228719e-02 57.37893 -77.77927 0.468649822 #> 966  132.7476878 135   -2.25231216 6.262852e-04 58.45864 -80.49217 1.383491480 #> 967  146.8661164 135   11.86611635 1.738330e-02 57.43625 -77.98688 0.352078942 #> 968  137.5415062 135    2.54150616 7.974387e-04 58.50725 -80.77585 1.524174035 #> 969  150.4649644 135   15.46496444 2.952656e-02 58.49666 -80.90753 1.550408807 #> 970  143.2594495 135    8.25944949 8.422038e-03 58.54340 -81.19119 1.645408975 #> 971  125.0095525 135   -9.99044754 1.232210e-02 57.15585 -77.99217 0.632475416 #> 972  128.5371250 135   -6.46287498 5.156636e-03 58.23977 -81.03042 1.330341828 #> 973  139.9174992 135    4.91749920 2.985407e-03 58.49287 -81.78303 1.652045586 #> 974  174.2102636 135   39.21026360 1.898080e-01 58.23000 -81.56312 1.366307847 #> 975  133.6868527 135   -1.31314729 2.128834e-04 57.04748 -78.61384 0.598547768 #> 976  117.4183356 135  -17.58166442 3.816234e-02 58.07012 -81.37893 1.194992708 #> 977  151.3721776 135   16.37217758 3.309237e-02 57.04855 -79.12930 0.463699501 #> 978  163.3597001 135   28.35970005 9.929291e-02 57.00904 -79.18442 0.476166084 #> 979  149.1665866 135   14.16658661 2.477681e-02 57.06049 -79.45626 0.333686113 #> 980  152.2274225 135   17.22742252 3.664001e-02 57.03022 -79.38309 0.394960353 #> 981  104.9067054 135  -30.09329462 1.118033e-01 57.64533 -80.98443 0.717493473 #> 982  117.1549833 135  -17.84501666 3.931415e-02 57.52865 -80.68828 0.508740257 #> 983  102.9943158 135  -32.00568423 1.264647e-01 57.58195 -80.90056 0.635699189 #> 984  139.2749199 135    4.27491989 2.256165e-03 56.96165 -79.36544 0.463532827 #> 985  151.2615601 135   16.26156013 3.264671e-02 56.92273 -79.42172 0.486947122 #> 986  138.3067035 135    3.30670353 1.349912e-03 57.32264 -80.62912 0.284322305 #> 987  106.5857165 135  -28.41428345 9.967549e-02 58.26511 -84.13135 1.562681380 #> 988  132.3252019 135   -2.67479808 8.832771e-04 56.86831 -81.01431 0.041117943 #> 989  142.8035259 135    7.80352590 7.517903e-03 56.63462 -80.43555 0.458941012 #> 990  165.6968875 135   30.69688750 1.163332e-01 56.56244 -77.36122 1.425723038 #> 991  125.2172591 135   -9.78274089 1.181506e-02 57.11849 -80.96239 0.190649070 #> 992  166.7408774 135   31.74087739 1.243807e-01 58.31215 -75.84653 0.108547042 #> 993  135.5039075 135    0.50390749 3.134849e-05 58.22278 -76.29823 0.046556430 #> 994  161.3023284 135   26.30232837 8.540895e-02 58.28016 -76.57265 0.139268224 #> 995  130.8569703 135   -4.14302973 2.119098e-03 57.84999 -76.03813 0.342661202 #> 996  165.5260331 135   30.52603309 1.150418e-01 58.50766 -77.61760 0.613213368 #> 997  107.1524478 135  -27.84755221 9.573903e-02 58.12291 -76.94367 0.040903334 #> 998  124.8398545 135  -10.16014550 1.274427e-02 58.09564 -77.46770 0.154337331 #> 999  151.9252350 135   16.92523504 3.536587e-02 58.52282 -78.55991 0.857230773 #> 1000 137.0096655 135    2.00966551 4.986118e-04 57.46347 -76.10664 0.723706991 #> 1001 142.2007702 135    7.20077016 6.401369e-03 57.88446 -78.67700 0.257997473 #> 1002 128.6534018 135   -6.34659822 4.972754e-03 57.63639 -78.16057 0.116107223 #> 1003 105.1519382 135  -29.84806181 1.099885e-01 58.68079 -81.23366 1.794229754 #> 1004 134.5184873 135   -0.48151271 2.862401e-05 58.42783 -80.88596 1.481579124 #> 1005 147.9928868 135   12.99288681 2.084137e-02 58.18819 -80.34761 1.072322537 #> 1006 125.4278584 135   -9.57214163 1.131184e-02 57.31530 -78.80512 0.278068538 #> 1007 136.2898764 135    1.28987635 2.054051e-04 58.12750 -81.53163 1.263806403 #> 1008 137.6723086 135    2.67230862 8.816337e-04 57.95477 -81.07743 1.045341097 #> 1009 174.0602558 135   39.06025575 1.883585e-01 58.20747 -81.82474 1.366651776 #> 1010 154.6599591 135   19.65995914 4.771778e-02 56.97050 -78.72464 0.646169592 #> 1011 147.0950779 135   12.09507791 1.806061e-02 57.05120 -79.58188 0.311975967 #> 1012  88.7943667 135  -46.20563333 2.635754e-01 57.08711 -80.04355 0.118006838 #> 1013 105.5784791 135  -29.42152089 1.068674e-01 57.05800 -80.42432 0.035555224 #> 1014 142.5099155 135    7.50991551 6.962819e-03 56.72915 -79.18207 0.756064575 #> 1015 150.7448385 135   15.74483847 3.060493e-02 58.08363 -74.42607 0.015622241 #> 1016 143.6646318 135    8.66463181 9.268623e-03 58.07936 -74.55777 0.019205274 #> 1017 125.6039230 135   -9.39607705 1.089954e-02 58.59128 -80.59909 1.552963982 #> 1018 135.3148559 135    0.31485592 1.223880e-05 57.09583 -80.82291 0.131167998 #> 1019 173.1096766 135   38.10967661 1.793022e-01 57.24079 -82.66440 0.468256594 #> 1020 153.5954848 135   18.59548484 4.269038e-02 57.22427 -81.88394 0.394877477 #> 1021 175.5323336 135   40.53233358 2.028235e-01 58.43469 -77.67003 0.563679988 #> 1022 118.9186732 135  -16.08132678 3.192705e-02 57.29490 -78.02201 0.481483088 #> 1023 164.9136462 135   29.91364617 1.104724e-01 57.19393 -83.03097 0.438309436 #> 1024 130.4541214 135   -4.54587855 2.551236e-03 58.42715 -77.80108 0.602994834 #> 1025 122.2247885 135  -12.77521150 2.014889e-02 56.95089 -81.10405 0.052900400 #> 1026  14.7147224 135 -120.28527761 4.402282e-01 57.66276 -91.02055 1.263727034 #> 1027 153.7436148 135   18.74361485 4.337322e-02 57.20037 -81.66354 0.348115294 #> 1028 142.1374328 135    7.13743277 6.289253e-03 56.58057 -83.25449 0.163779650 #> 1029 161.9003993 135   26.90039925 8.933722e-02 57.00406 -81.58915 0.151801003 #> 1030  56.5936741 135  -78.40632589 7.589570e-01 62.53564 -69.72308 5.108565164 #> 1031 167.7993608 135   32.79936079 1.328146e-01 58.34835 -77.31801 0.360187078 #> 1032 134.1974447 135   -0.80255534 7.951791e-05 57.91335 -80.26887 0.775175229 #> 1033 143.1221096 135    8.12210956 8.144279e-03 56.80834 -89.69253 0.478872896 #> 1034 169.8386395 135   34.83863952 1.498433e-01 57.18117 -83.16644 0.431184022 #> 1035 132.7886735 135   -2.21132651 6.036994e-04 57.85651 -80.98060 0.928665968 #> 1036   3.9972916 135 -131.00270835 2.963870e-01 57.13449 -82.95101 0.373232272 #> 1037 169.8119433 135   34.81194334 1.496138e-01 57.19215 -83.19960 0.442165213 #> 1038 128.4191462 135   -6.58085382 5.346622e-03 59.83234 -87.47639 3.448234454 #> 1039 140.1338130 135    5.13381298 3.253832e-03 57.28061 -79.31558 0.175573762 #> 1040 133.8776566 135   -1.12234337 1.555129e-04 58.35560 -77.18700 0.320570593 #> 1041 132.3121993 135   -2.68780066 8.918855e-04 58.45055 -78.00696 0.662223556 #> 1042 137.1992689 135    2.19926892 5.971338e-04 57.00815 -81.09338 0.110159567 #> 1043 127.2171830 135   -7.78281700 7.478054e-03 57.02166 -81.05148 0.112234969 #> 1044  11.9310274 135 -123.06897259 4.001410e-01 56.99873 -81.54368 0.135037874 #> 1045 122.2086781 135  -12.79132190 2.019974e-02 57.04075 -81.04792 0.131319731 #> 1046  22.3065605 135 -112.69343946 5.592806e-01 57.13429 -80.80136 0.151206114 #> 1047 135.3022738 135    0.30227378 1.128018e-05 58.12994 -81.50943 1.266250113 #> 1048 111.9513979 135  -23.04860209 6.558495e-02 54.79221 -66.52546 1.894675705 #> 1049 153.4514961 135   18.45149613 4.203182e-02 60.98074 -83.19241 4.230749228 #> 1050 155.2848525 135   20.28485252 5.079941e-02 60.27499 -81.08872 3.376996502 #> 1051 150.2587026 135   15.25870261 2.874420e-02 62.09931 -79.42806 4.689632294 #> 1052  52.5263137 135  -82.47368632 8.397418e-01 66.80636 -78.87857 9.226504808 #> 1053 122.0296749 135  -12.97032510 2.076905e-02 57.94755 -77.28823 0.064046459 #> 1054 116.8139607 135  -18.18603932 4.083111e-02 57.75279 -77.80116 0.071357879 #> 1055 126.1578872 135   -8.84211284 9.652217e-03 57.45935 -79.11892 0.052901334 #> 1056 112.4026605 135  -22.59733952 6.304194e-02 56.93726 -80.82343 0.027406639 #> 1057  99.0541204 135  -35.94587956 1.595193e-01 58.72856 -84.51298 2.047739478 #> 1058 164.1836542 135   29.18365417 1.051464e-01 57.16387 -79.33703 0.276811525 #> 1059  74.4711742 135  -60.52882579 4.523134e-01 63.06172 -72.42366 5.142441204 #> 1060 109.0603110 135  -25.93968902 8.307006e-02 55.93624 -62.39722 0.558921692 #> 1061 141.0603110 135    6.06031098 4.534243e-03 55.93624 -62.39722 0.558921692 #> 1062 102.2190378 135  -32.78096219 1.326656e-01 54.80362 -56.17234 0.759315975 #> 1063 138.9513979 135    3.95139791 1.927598e-03 54.79221 -66.52546 1.894675705 #> 1064 163.4214690 135   28.42146900 9.972591e-02 54.76868 -65.75303 1.906117601 #> 1065 111.5713623 135  -23.42863773 6.776556e-02 56.54355 -66.09599 0.128992354 #> 1066 108.2828975 135  -26.71710250 8.812390e-02 56.16182 -63.53769 0.564017480 #> 1067 139.2828975 135    4.28289750 2.264594e-03 56.16182 -63.53769 0.564017480 #> 1068 140.4388081 135    5.43880810 3.651930e-03 56.11345 -63.31120 0.618742055 #> 1069  99.6108326 135  -35.38916743 1.546164e-01 54.39376 -55.70635 1.134515033 #> 1070 116.4306344 135  -18.56936556 4.257054e-02 55.84837 -61.84148 0.434970008 #> 1071 139.4306344 135    4.43063444 2.423521e-03 55.84837 -61.84148 0.434970008 #> 1072 138.6178744 135    3.61787438 1.615928e-03 55.83262 -61.54513 0.454311513 #> 1073 126.0341549 135   -8.96584509 9.924244e-03 55.70380 -60.93456 0.595543634 #> 1074 109.0992776 135  -25.90072243 8.282067e-02 54.67807 -58.05670 1.237043267 #> 1075  98.0402871 135  -36.95971290 1.686445e-01 56.46264 -67.01008 0.300302913 #> 1076 118.3162770 135  -16.68372304 3.436378e-02 55.47427 -63.86774 1.239186827 #> 1077  61.8681831 135  -73.13181687 6.602793e-01 58.75520 -84.78047 2.092548978 #> 1078 165.0866851 135   30.08668509 1.117542e-01 56.40505 -86.85729 0.027608129 #> 1079 104.5148290 135  -30.48517100 1.147340e-01 56.39275 -87.82897 0.016932933 #> 1080 149.5511919 135   14.55119194 2.614039e-02 58.16210 -76.27269 0.014118793 #> 1081 151.4173114 135   16.41731143 3.327508e-02 56.44219 -86.26468 0.062626400 #> 1082 158.9115097 135   23.91150966 7.058769e-02 56.18412 -82.33958 0.605331693 #>  #> $norm_chisq #> [1] 0.05289781 #>"},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Theoretical Plate Tectonic Stress Paths — stress_paths","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"Construct \\(\\sigma_{Hmax}\\) lines following small circles, great circles, loxodromes Euler pole relative plate motion.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"","code":"eulerpole_paths(x, type = c(\"sc\", \"gc\", \"ld\"), n = 10, angle, cw)  eulerpole_smallcircles(x, n = 10)  eulerpole_greatcircles(x, n = 10)  eulerpole_loxodromes(x, n = 10, angle = 45, cw)"},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"x Either object class \"euler.pole\" \"data.frame\" containing coordinates Euler pole lat, lon, rotation angle (optional). type Character string specifying type curves export. Either \"sm\" small circles (default), \"gc\" great circles, \"ld\" loxodromes. n Number equally spaced curves; n = 10 default (angular distance curves: 180 / n) angle Direction loxodromes; angle = 45 default. cw logical. Sense loxodromes: TRUE clockwise loxodromes (left-lateral displaced plate boundaries). FALSE counterclockwise loxodromes (right-lateral displaced plate boundaries).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"sf object","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"Maximum horizontal stress can aligned three types curves related relative plate motion: Small circles Lines constant distance Euler pole. x contains angle, output additionally gives absolute velocity small circle (degree/Myr -> km/Myr). Great circles Paths shortest distance Euler pole antipodal position. Loxodromes Lines constant bearing, .e. curves cutting small circles constant angle.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"","code":"data(\"nuvel1\") euler <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to # Pacific plate  eulerpole_smallcircles(euler) #> Simple feature collection with 11 features and 2 fields #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -84.709 xmax: 180 ymax: 84.709 #> Geodetic CRS:  WGS 84 #> # A tibble: 11 × 3 #>                                                           geometry     d abs_vel #>  *                                                  <GEOMETRY [°]> <dbl>   <dbl> #>  1 LINESTRING (101.833 -48.709, 101.833 -48.709, 101.833 -48.709,…     0     0   #>  2 LINESTRING (101.833 -30.709, 102.4799 -30.71571, 103.1265 -30.…   -18    26.9 #>  3 LINESTRING (101.833 -12.709, 102.9175 -12.72024, 104.0016 -12.…   -36    51.2 #>  4 MULTILINESTRING ((101.833 5.291, 103.2953 5.275842, 104.757 5.…   -54    70.4 #>  5 MULTILINESTRING ((101.833 23.291, 103.6965 23.27168, 105.5586 …   -72    82.8 #>  6 MULTILINESTRING ((101.833 41.291, 104.228 41.26618, 106.6194 4…    90    87.1 #>  7 MULTILINESTRING ((101.833 59.291, 105.1832 59.25627, 108.521 5…    72    82.8 #>  8 MULTILINESTRING ((101.833 77.291, 108.4309 77.22258, 114.9037 …    54    70.4 #>  9 LINESTRING (-78.167 84.709, -89.46284 84.59139, -99.79473 84.2…    36    51.2 #> 10 LINESTRING (-78.167 66.709, -79.57283 66.69442, -80.97315 66.6…    18    26.9 #> 11 LINESTRING (-78.167 48.709, -78.167 48.709, -78.167 48.709, -7…     0     0   eulerpole_greatcircles(euler) #> Simple feature collection with 11 features and 1 field #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -89.991 xmax: 180 ymax: 89.991 #> Geodetic CRS:  WGS 84 #> # A tibble: 11 × 2 #>        d                                                                geometry #>  * <dbl>                                                          <GEOMETRY [°]> #>  1     0 LINESTRING (101.833 -48.709, 101.833 -48.609, 101.833 -48.509, 101.833… #>  2    36 LINESTRING (101.833 -48.709, 101.7441 -48.62806, 101.6554 -48.54706, 1… #>  3    72 LINESTRING (101.833 -48.709, 101.689 -48.67801, 101.5451 -48.64684, 10… #>  4   108 LINESTRING (101.833 -48.709, 101.6888 -48.73981, 101.5444 -48.77044, 1… #>  5   144 LINESTRING (101.833 -48.709, 101.7438 -48.78987, 101.6543 -48.87067, 1… #>  6     0 LINESTRING (101.833 -48.709, 101.833 -48.809, 101.833 -48.909, 101.833… #>  7    36 MULTILINESTRING ((101.833 -48.709, 101.9222 -48.78987, 102.0117 -48.87… #>  8    72 MULTILINESTRING ((101.833 -48.709, 101.9772 -48.73981, 102.1216 -48.77… #>  9   108 MULTILINESTRING ((101.833 -48.709, 101.977 -48.67801, 102.1209 -48.646… #> 10   144 MULTILINESTRING ((101.833 -48.709, 101.9219 -48.62806, 102.0106 -48.54… #> 11     0 MULTILINESTRING ((101.833 -48.709, 101.833 -48.609, 101.833 -48.509, 1… eulerpole_loxodromes(x = euler, angle = 45, n = 10, cw = FALSE) #> Simple feature collection with 15 features and 1 field #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -82.82221 xmax: 180 ymax: 82.82221 #> Geodetic CRS:  WGS 84 #> # A tibble: 15 × 2 #>        d                                                                geometry #>  * <dbl>                                                          <GEOMETRY [°]> #>  1   108 LINESTRING (-78.07054 66.58404, -78.01693 66.51323, -77.96404 66.44238… #>  2   144 LINESTRING (101.6024 77.35336, 101.3391 77.42378, 101.0733 77.49398, 1… #>  3     0 LINESTRING (101.833 41.291, 101.7388 41.36167, 101.6444 41.43227, 101.… #>  4    36 LINESTRING (101.3044 5.933699, 101.2458 6.003953, 101.1871 6.074159, 1… #>  5    72 LINESTRING (101.6185 -30.1275, 101.5917 -30.05698, 101.5648 -29.98648,… #>  6   108 LINESTRING (101.7399 -48.5214, 101.7063 -48.4543, 101.6725 -48.38724, … #>  7   144 LINESTRING (101.5909 -48.59325, 101.5042 -48.55193, 101.4174 -48.5107,… #>  8     0 LINESTRING (101.5338 -48.70929, 101.4266 -48.70954, 101.3195 -48.70986… #>  9    36 LINESTRING (101.591 -48.82535, 101.5043 -48.86716, 101.4177 -48.90905,… #> 10    72 MULTILINESTRING ((101.7412 -48.89695, 101.7086 -48.96434, 101.6762 -49… #> 11   108 MULTILINESTRING ((101.9268 -48.89653, 101.961 -48.96356, 101.9956 -49.… #> 12   144 LINESTRING (102.0762 -48.82424, 102.1639 -48.86512, 102.2519 -48.9058,… #> 13     0 LINESTRING (102.1322 -48.70793, 102.2393 -48.70703, 102.3465 -48.70586… #> 14    36 LINESTRING (102.0739 -48.59215, 102.1596 -48.54991, 102.245 -48.50747,… #> 15    72 LINESTRING (101.9241 -48.52098, 101.9561 -48.45352, 101.9878 -48.38601… eulerpole_loxodromes(x = euler, angle = 30, cw = TRUE) #> Simple feature collection with 13 features and 1 field #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -85.21953 xmax: 180 ymax: 85.21953 #> Geodetic CRS:  WGS 84 #> # A tibble: 13 × 2 #>        d                                                                geometry #>  * <dbl>                                                          <GEOMETRY [°]> #>  1   144 LINESTRING (101.5141 -47.93824, 101.4813 -47.85449, 101.4487 -47.77068… #>  2     0 LINESTRING (100.8943 -48.20753, 100.7944 -48.15215, 100.6949 -48.09657… #>  3    36 LINESTRING (100.6237 -48.6678, 100.4929 -48.66181, 100.3621 -48.65551,… #>  4    72 LINESTRING (100.8139 -49.14575, 100.7018 -49.19187, 100.5894 -49.23775… #>  5   108 LINESTRING (101.4023 -49.45697, 101.3538 -49.53763, 101.3048 -49.61821… #>  6   144 LINESTRING (102.1618 -49.47885, 102.1969 -49.5624, 102.2319 -49.64599,… #>  7     0 MULTILINESTRING ((102.7905 -49.20269, 102.8946 -49.25631, 102.9989 -49… #>  8    36 MULTILINESTRING ((103.044 -48.73753, 103.1752 -48.74063, 103.3065 -48.… #>  9    72 MULTILINESTRING ((102.8344 -48.26342, 102.9424 -48.21527, 103.0504 -48… #> 10   108 MULTILINESTRING ((102.251 -47.95948, 102.2967 -47.87845, 102.3424 -47.… #> 11   144 MULTILINESTRING ((101.833 -21.06283, 101.8579 -20.97623, 101.883 -20.8… #> 12     0 MULTILINESTRING ((101.833 41.291, 101.8996 41.37758, 101.9664 41.46413… #> 13    36 LINESTRING (-78.167 76.35517, -78.26446 76.26854, -78.36015 76.18185, … eulerpole_smallcircles(data.frame(lat = 30, lon = 10)) #> Simple feature collection with 11 features and 1 field #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -84 xmax: 180 ymax: 84 #> Geodetic CRS:  WGS 84 #> # A tibble: 11 × 2 #>                                                                   geometry     d #>  *                                                          <GEOMETRY [°]> <dbl> #>  1 LINESTRING (-170 -30, -170 -30, -170 -30, -170 -30, -170 -30, -170 -30…     0 #>  2 MULTILINESTRING ((-170 -12, -169.4314 -12.00774, -168.8632 -12.03093, …   -18 #>  3 MULTILINESTRING ((-170 6, -168.9363 5.985529, -167.8735 5.942134, -166…   -36 #>  4 MULTILINESTRING ((-170 24, -168.4063 23.97832, -166.8145 23.91332, -16…   -54 #>  5 MULTILINESTRING ((-170 42, -167.6973 41.96867, -165.3999 41.87482, -16…   -72 #>  6 MULTILINESTRING ((-170 60, -166.4035 59.95107, -162.8282 59.80475, -15…    90 #>  7 MULTILINESTRING ((-170 78, -161.8144 77.88851, -153.9057 77.56006, -14…    72 #>  8 LINESTRING (10 84, -3.638991 83.81339, -15.74781 83.28465, -25.60532 8…    54 #>  9 LINESTRING (10 66, 7.401912 65.96464, 4.822514 65.85889, 2.279844 65.6…    36 #> 10 LINESTRING (10 48, 9.169016 47.98869, 8.339768 47.9548, 7.51398 47.898…    18 #> 11 LINESTRING (10 30, 10 30, 10 30, 10 30, 10 30, 10 30, 10 30, 10 30, 10…     0"},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.html","id":null,"dir":"Reference","previous_headings":"","what":"library(tectonicr) — tectonicr","title":"library(tectonicr) — tectonicr","text":"list documented functions may viewed typing help(package=\"tectonicr\"). details theoretical background provided Wdowinski (1999).","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"library(tectonicr) — tectonicr","text":"Maintainer: Tobias Stephan tobias.stephan1@yahoo.com (ORCID)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/trigon.html","id":null,"dir":"Reference","previous_headings":"","what":"Trigonometric Functions in Degrees — trigon","title":"Trigonometric Functions in Degrees — trigon","text":"Trigonometric functions expecting input degrees.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/trigon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trigonometric Functions in Degrees — trigon","text":"","code":"sind(x)  cosd(x)  tand(x)  asind(x)  acosd(x)  atand(x)  atan2d(x1, x2)"},{"path":"https://tobiste.github.io/tectonicr/reference/trigon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trigonometric Functions in Degrees — trigon","text":"x, x1, x2 Numeric complex vectors.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/trigon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trigonometric Functions in Degrees — trigon","text":"Returns scalar vector numeric values.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vcross.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector cross product — vcross","title":"Vector cross product — vcross","text":"Vector cross product","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vcross.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector cross product — vcross","text":"","code":"vcross(x, y)"},{"path":"https://tobiste.github.io/tectonicr/reference/vcross.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector cross product — vcross","text":"x, y numeric vectors length 3","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vcross.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector cross product — vcross","text":"numeric vector length 3","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vcross.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vector cross product — vcross","text":"","code":"vcross(c(1, 2, 3), c(4, 5, 6)) #> [1] -3  6 -3"},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-02","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2","title":"tectonicr 0.2","text":"Calculation rotation replaced quaternions boost performance “sp” class output small circles, great circles loxodromes deprecated new functions added calculate mean/median stress direction, e.g. weighted mean","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-01","dir":"Changelog","previous_headings":"","what":"tectonicr 0.1","title":"tectonicr 0.1","text":"new functions rotate stress directions data points PoR coordinate system calculate distance data point plate boundaries Added functions calculate relative plate motions set absolute plate motions different relative plate motions","code":""}]
