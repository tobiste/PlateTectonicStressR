[{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://tobiste.github.io/tectonicr/articles/datasets.html","id":"larger-data-sets","dir":"Articles","previous_headings":"","what":"Larger Data Sets","title":"Handling large datasets","text":"tectonicr also handles larger data sets. World Stress map (WSM2016) data compilation included example data set can imported : Subset WSM data stress data relevant Plate boundary North America Pacific plate San Andreas fault: Modeling stress directions (wrt geographic North pole) using Euler pole motion North America relative Pacific Pate. Combine model results coordinates observed data ggplot2::ggplot() can used visualize results. orientation axis can displayed function geom_spoke(). position argument position = \"center_spoke\" aligns marker symbol center point. deviation can color coded. deviation_norm() yields normalized value deviation, .e. values 0 90\\(^{\\circ}\\). Also included plate boundary geometries Bird (2003):  map shows generally low deviation observed \\(\\sigma_{Hmax}\\) directions modeled stress direction using counter-clockwise 45\\(^{\\circ}\\) loxodromes. normalized \\(\\chi^2\\) test quantifies fit modeled \\(\\sigma_{Hmax}\\) orientation observed stress direction considering reported uncertainties measurement. First, need complete uncertainties WSM database case missing values: value \\(\\leq\\) 0.15, indicating significantly good fit model. Thus, traction transform plate boundary explain stress direction area.","code":"data(\"wsm2016\") head(wsm2016) #> # A tibble: 6 × 60 #>   id       site    lat   lon   azi type  depth quality regime locality   country #>   <chr>    <chr> <dbl> <dbl> <dbl> <chr> <dbl> <fct>   <chr>  <chr>      <chr>   #> 1 wsm00001 TU31   40.3  28.2   100 FMS      14 C       NF     NA         Turkey  #> 2 wsm00002 TU28   40.1  27.4   105 FMS       0 C       SS     NA         Turkey  #> 3 wsm00003 TU25   39    27      87 FMS       0 C       NF     NA         Turkey  #> 4 wsm00004 TU13   39.1  41.6    38 FMS      38 C       TS     NA         Turkey  #> 5 wsm00005 TU12   37.8  29.3   101 FMS      16 C       NF     centralTu… Turkey  #> 6 wsm00006 TU60   40.1  29.4    82 FMS      15 C       SS     NA         Turkey  #> # … with 49 more variables: date <date>, time <chr>, number <int>, sd <dbl>, #> #   method <chr>, s1az <dbl>, s1pl <dbl>, s2az <dbl>, s2pl <dbl>, s3az <dbl>, #> #   s3pl <dbl>, mag_int_s1 <dbl>, slopes1 <dbl>, mag_int_s2 <dbl>, #> #   slopes2 <dbl>, mag_int_s3 <dbl>, slopes3 <dbl>, pore_magin <dbl>, #> #   pore_slope <dbl>, mag_type <chr>, eq_mag <dbl>, mom <dbl>, mom_exp <dbl>, #> #   eq_avg <chr>, tot_len <dbl>, sd_weight <chr>, samp_int <dbl>, top <dbl>, #> #   bot <dbl>, no_mag_ven <int>, young <dbl>, poisson <dbl>, rock <chr>, … california <- subset(   wsm2016,   wsm2016$lat >= 23 & wsm2016$lat <= 40 &     wsm2016$lon >= -126 & wsm2016$lon <= -108 ) euler <- subset(nuvel1, nuvel1$plate.rot == \"na\")  california.prd <- model_shmax(california, euler) california.deviation <- misfit_shmax(california.prd, california$azi) california.res <- cbind(   lat = california$lat,   lon = california$lon,   azi = california$azi,   california.prd,   california.deviation ) data(\"PB2002\") # load plate boundary data set # load some geometries from the rnaturalearth package world <- rnaturalearth::ne_countries(scale = \"small\", returnclass = \"sf\")   ggplot(california.res) +   geom_sf(data = world, alpha =.5) +   geom_sf(     data = PB2002,     color = \"red\",     lwd = 2,     alpha = .5   ) +   geom_spoke(     aes(       x = lon,       y = lat,       radius = 1,       angle = deg2rad(-azi + 90),       color = deviation_norm(dev.ld.ccw)     ),     position = \"center_spoke\",     na.rm = TRUE   ) +   scale_color_continuous(     type = \"viridis\",     limits = c(0, 90),     name = \"|Deviation| in °\",     breaks = seq(0, 90, 22.5)   ) +   coord_sf(     xlim = range(california.res$lon),     ylim = range(california.res$lat),     expand = FALSE,      default_crs = \"WGS84\"   ) # convert the WSM quality ranking into the standard deviation of the measurement california.res$unc <- ifelse(   is.na(california$sd),    quantise_wsm_quality(california$quality),    california$sd ) norm_chisq(   obs = california$azi,   prd = california.prd$ld.ccw,   unc = california.res$unc ) #> NA values have been removed #> [1] 0.01246891"},{"path":"https://tobiste.github.io/tectonicr/articles/datasets.html","id":"variation-of-the-orientation-of-the-maximum-horizontal-stress-wrt-to-the-distance-to-the-plate-boundary","dir":"Articles","previous_headings":"Larger Data Sets","what":"Variation of the Orientation of the Maximum Horizontal Stress wrt to the Distance to the Plate Boundary","title":"Handling large datasets","text":"orientation maximum horizontal stress correlates plate motion direction plate boundary zone. Towards plate interior, plate boundary forces become weaker stress sources probably dominate. visualize variation \\(\\sigma_{Hmax}\\) wrt distance plate boundary, need transfer orientation \\(\\sigma_{Hmax}\\) geographic reference system (.e. azimuth deviation direction geographic North pole) Pole Rotation (PoR) reference system (.e. azimuth deviation Euler pole). PoR coordinate reference system oblique transformation geographical coordinate system Euler pole coordinates translation factors. azimuth PoR reference system \\(\\alpha_{PoR}\\) angular difference azimuth geographic reference system \\(\\alpha_{geo}\\) (initial) bearing great circle passes data point Euler pole \\(\\theta\\): function PoR_shmax() returns transformed azimuth \\(\\sigma_{Hmax}\\) , given, deviation predicted \\(\\sigma_{Hmax}\\) orientation related plate boundary type: calculate distance plate boundary, plate boundary geometries data points (geographical coordinates() transformed PoR reference system. PoR system, distance latitudinal longitudinal difference data points inward/outward tangential moving plate boundaries, respectively. done function distance_from_pb(), returns angular distances. Finally, visualize \\(\\sigma_{Hmax}\\) orientation wrt distance plate boundary:  Close dextral plate boundary, majority stress data strike-slip fault regime oriented around 135° wrt Euler pole. Thus, date parallel predicted stress sourced right-lateral displaced plate boundary. Away plate boundary, data becomes noisy. Azimuth (PoR) vs. distance plot also allows identify wether less known plate boundary represents inward, outward, tangetial displaced boundary. relationship azimuth distance can better visualized using deviation (normalized data precision) predicted stress orientation, .e. normalized \\(\\chi^2\\):  can see data fact starts scatter notably beyond distance 4° becomes random ca. 8° away plate boundary. Thus, North American-Pacific plate boundary zone San Andreas Fault approx. 4–6° (ca. 440–670 km) wide. normalized \\(\\chi^2\\) vs. distance plot allows specify width plate boundary zone.","code":"california.res <- cbind(california.res,                         PoR_shmax(california.res, euler, type = \"right\")) san_andreas <- subset(PB2002,                       PB2002$PlateA %in% c(\"NA\" , \"PA\") &                         PB2002$PlateB %in% c(\"NA\", \"PA\"))  california_sf <-   sf::st_set_crs(sf::st_as_sf(california, coords = c(\"lon\", \"lat\")), \"WGS84\")  california.res$distance <-   distance_from_pb(     x = california_sf,     ep = euler,     pb = san_andreas,     tangential = TRUE   ) ggplot(california.res,        aes(          x = distance,          y = azi.PoR,          color = california$regime        )) +   labs(x = \"Distance from plate boundary (°)\", y = \"Azimuth in PoR (°)\") +   geom_hline(yintercept = c(0, 45, 90, 135, 180), lty = 3) +   geom_pointrange(aes(ymin = azi.PoR - unc, ymax = azi.PoR + unc)) +   scale_y_continuous(     breaks = seq(-180, 360, 45),     sec.axis = sec_axis(       ~ .,       name = NULL,       breaks = c(0, 45, 90, 135, 180),       labels = c(\"Outward\", 'Tan (L)', \"Inward\", \"Tan (R)\", \"Outward\")     )   ) ggplot(california.res, aes(x = distance, y = nchisq)) +   coord_cartesian(ylim = c(0, 1)) +   labs(x = \"Distance from plate boundary (°)\", y = expression(Norm~chi^2)) +   geom_hline(yintercept = c(0.15, .33, .7), lty = 3) +   geom_smooth() +   geom_point(aes(color = california$regime)) +   scale_y_continuous(sec.axis = sec_axis(     ~ .,     name = NULL,     breaks = c(.15 / 2, .33, .7 + 0.15),     labels = c(\"Good fit\", 'Random', \"Systematic\\nmisfit\")   ))"},{"path":"https://tobiste.github.io/tectonicr/articles/stress_trajectories.html","id":"equivalent-rotations","dir":"Articles","previous_headings":"","what":"Equivalent rotations","title":"Plotting trajectories of theoretic stress directions","text":"Relative plate motions set (global) plate motions can retrieved transforming set Euler rotations parameters equivalent rotations. NUVEL1 data set offers global plate motions relative Pacific plate. order extract plate motions two plates (e.g. plates relative Eurasia), one transform rotations new, equivalent reference system (.e. rotation respect Eurasia). tectonicr can done :","code":"nuvel1.eu <- equivalent_rotation(nuvel1, fixed = \"eu\") head(nuvel1.eu) #>   plate.rot       lat        lon      angle plate.fix #> 1        af  20.82968  -20.97018 0.12839397        eu #> 2        an  37.72529   76.43428 0.05402503        eu #> 3        ar  24.35031   13.32720 0.51993229        eu #> 4        au  14.93390   40.02216 0.71935116        eu #> 5        ca -51.10066  -51.56252 0.12128773        eu #> 6        co  20.06612 -116.50311 1.36455727        eu"},{"path":"https://tobiste.github.io/tectonicr/articles/stress_trajectories.html","id":"plotting-pole-of-rotation-grids","dir":"Articles","previous_headings":"","what":"Plotting Pole of Rotation Grids","title":"Plotting trajectories of theoretic stress directions","text":"visualize theoretical trajectories orientation \\(\\sigma_{Hmax}\\) (great circles, small circles, loxodomes), need transform locations geographical coordinate system PoR coordinate system. transformations done function functions geographical_to_PoR() PoR_to_geographical(). base functions eulerpole_smallcircles(), eulerpole_greatcircles(), eulerpole_loxodromes() allow draw theoretical trajectories geographical coordinates.","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/stress_trajectories.html","id":"small-circles","dir":"Articles","previous_headings":"Plotting Pole of Rotation Grids","what":"Small Circles","title":"Plotting trajectories of theoretic stress directions","text":"Function eulerpole_smallcircles(x, gridsize) returns Small circles simple feature(sf) giving data.frame Euler pole coordinates lat lon (x) number small circles (n). example small circles around Euler pole relative motion Indian plate relative Eurasian plate (transformed NUVEL1 model). returnclass option eulerpole_smallcircles() provides output types \"sf\" (simple feature) \"sp\" (Spatial* object) small circles. eventually plot small circles ggplot, recommend extract sf feature plot geom_sf(): Predicted SHmax trajectories small circles around -Eu Euler pole.","code":"euler <-   subset(nuvel1.eu, nuvel1$plate.rot == \"in\") # India relative to Eurasia euler.sm <- eulerpole_smallcircles(euler)  ggplot() +   geom_sf(data = world, alpha =.5) +   geom_sf(     data = PB2002,     color = \"red\",     alpha = .5   ) +   labs(title = \"India relative to Eurasia\", subtitle = \"source: NUVEL1\") +  geom_sf(     data = euler.sm,      aes(lty = \"small circles\"),     color = \"darkblue\", fill = NA,     alpha = .5   ) +   geom_point(     data = euler,     aes(lon, lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   geom_point(     data = euler,     aes(lon + 180, -lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   coord_sf(default_crs = \"WGS84\", crs = sf::st_crs(\"+proj=natearth\"))"},{"path":"https://tobiste.github.io/tectonicr/articles/stress_trajectories.html","id":"great-circles","dir":"Articles","previous_headings":"Plotting Pole of Rotation Grids","what":"Great Circles","title":"Plotting trajectories of theoretic stress directions","text":"Great circles lines cut small circles 90\\(^{\\circ}\\) Euler pole. Function eulerpole_greatcircles(x, n) returns great circles sf object giving data.frame Euler pole coordinates lat lon (x) number great circles n, great circle angles (360/d). Predicted SHmax trajectories great circles passing -Eu Euler pole.","code":"euler.gm <- eulerpole_greatcircles(euler)  ggplot() +   geom_sf(data = world, alpha =.5) +   geom_sf(     data = PB2002,     color = \"red\",     alpha = .5   ) +   labs(title = \"India relative to Eurasia\", subtitle = \"source: NUVEL1\") +  geom_sf(     data = euler.sm,      aes(lty = \"small circles\"),     color = \"darkblue\",     alpha = .5   ) +   geom_sf(     data = euler.gm,      aes(lty = \"great circles\"),     color = \"darkblue\"   ) +   geom_point(     data = euler,     aes(lon, lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   geom_point(     data = euler,     aes(lon + 180, -lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   coord_sf(default_crs = \"WGS84\", crs = sf::st_crs(\"+proj=natearth\"))"},{"path":"https://tobiste.github.io/tectonicr/articles/stress_trajectories.html","id":"loxodromes","dir":"Articles","previous_headings":"Plotting Pole of Rotation Grids","what":"Loxodromes","title":"Plotting trajectories of theoretic stress directions","text":"Loxodrome (also called Rhumb Line) curve cutting small circles constant angle. Thus, small great circles 0\\(^{\\circ}\\) 90\\(^{\\circ}\\) loxodromes, respectively. Function eulerpole_loxodromes(x, n) returns loxodromes sf object giving data.frame Euler pole coordinates lat lon (x) angle loxodromes, direction, sense. Predicted SHmax trajectories 45-degree loxodromes circles directed towards -Eu Euler pole.","code":"euler.ld <- eulerpole_loxodromes(x = euler, angle = 45, n = 10, cw = FALSE)  ggplot() +   labs(title = \"India relative to Eurasia\", subtitle = \"source: NUVEL1\") +   geom_sf(data = world, alpha =.5) +   geom_sf(     data = PB2002,     color = \"red\",     alpha = .5   ) +   geom_sf(     data = euler.ld,      aes(lty = \"clockwise loxodromes\"),     color = \"darkblue\"   ) +   geom_point(     data = euler,     aes(lon, lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   geom_point(     data = euler,     aes(lon + 180, -lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   coord_sf(default_crs = \"WGS84\", crs = sf::st_crs(\"+proj=natearth\"))"},{"path":"https://tobiste.github.io/tectonicr/articles/tectonicr.html","id":"theory","dir":"Articles","previous_headings":"","what":"Theory","title":"Introduction to tectonicr","text":"theory intraplate tectonics (Wdowinski 1998) allows calculating first-order intraplate deformation induced horizontal displacement deformable plate boundaries. based empirical link directions relative plate motion displacement deformation fields within plate interior adjacent three types deformable plate boundaries: inward-, outward-, tangential-displaced boundaries. model predicts direction intraplate displacement, displacement rate, strain, stress fields terms small circles, great circles, 45\\(^{\\circ}\\) loxodromes around pole rotation two adjacent plates. According theory, principal axis maximum horizontal stress follows small circles inward-displaced boundaries, great circles outward-displaced boundaries, loxodromes tangential-displaced boundaries. theory assumes first-order intraplate deformation predominantly induced horizontal forces acting plate boundaries buoyancy forces arise lateral density variations mid-ocean ridges plate interiors (ridge push).","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/tectonicr.html","id":"inward-outward-and-tangential-displaced-boundaries","dir":"Articles","previous_headings":"Theory","what":"Inward, Outward and Tangential Displaced Boundaries","title":"Introduction to tectonicr","text":"Inward-moving plate boundaries induce compressional horizontal tractions plate boundary towards plate’s interior along direction relative plate motion. compressional tractions produced forces related subduction, collision, ridge-push. Thus, stresses across convergent plate boundaries characterized dominance thrusting strike-slip faulting (\\(\\sigma_1 \\approx \\sigma_{Hmax}\\)) \\(\\sigma_{Hmax}\\) (maximum horizontal stress) trending parallel plate convergence, .e. parallel small circles around Euler pole relative plate motion. Outward moving plate boundaries produce tensional tractions displacements directed away plate interior. Along spreading ridges intracontinental rifting stresses dominated normal faulting (\\(\\sigma_1 \\approx \\sigma_{vertical}\\), \\(\\sigma_2 \\approx \\sigma_{Hmax}\\)) \\(\\sigma_{Hmax}\\) trending perpendicular plate motion trajectories (.e. along great circles). case intracontinental setting, stresses displacements may associated slab-retreat, back-arc extension, release excess gravitational potential energy stored thickened crust , e.g., gravitational collapse. Along transform boundaries (tangential displaced boundaries), two neighboring plates exert shear tractions tangential orientation boundary (Forsyth Uyeda, 1975). Faulting displacement adjacent plate boundaries characterized strike-slip parallel plate motion, thus, principal axes maximum minimum stress orientated angle c. 45\\(^{\\circ}\\) plate motion trajectory. Geometrically, \\(\\sigma_{Hmax}\\) orientation follows along 45\\(^{\\circ}\\) loxodromes (lines constant bearing) diverge —depending sense transform boundary— clockwise counterclockwise relative Euler pole intersect small great circles angle 45\\(^{\\circ}\\).","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/tectonicr.html","id":"theoretical-direction-of-horizontal-stress-and-deviation-from-the-measured-stress","dir":"Articles","previous_headings":"Theory","what":"Theoretical direction of Horizontal Stress and Deviation From the Measured Stress","title":"Introduction to tectonicr","text":"tectonicr basically calculates bearing point interest given Euler pole relative plate motion formula: \\(\\psi_1\\), \\(\\lambda_1\\) longitude latitude point, \\(\\psi_2\\), \\(\\lambda_2\\) longitude latitude Euler pole (\\(\\Delta\\lambda\\) difference longitude). bearing \\(\\theta\\) orientation great circle passes point Euler pole. Thus, reflects theoretical direction \\(\\sigma_{Hmax}\\) follows great circles trajectories. Small circle directions \\(90^{\\circ}\\) loxodrome directions \\(\\pm45^{\\circ}\\) \\(\\theta\\). tectonicr, directions can modeled following steps: First, load package: Next, need specify coordinates Euler pole get directions great circles, small circles, loxodromes around Euler pole given point (e.g. 45\\(^{\\circ}\\)N/20\\(^{\\circ}\\)E). example, Euler pole coordinates: 90\\(^{\\circ}\\)N/0\\(^{\\circ}\\)E. \\(\\sigma_{Hmax}\\) following great small circles loxodromes geometries can modeled model_shmax(): observed stress orientation point, e.g. azimuth \\(\\sigma_{Hmax}\\) 90\\(^{\\circ}\\), deviation modeled stress orientations can achieved via misfit_shmax():","code":"library(tectonicr) library(ggplot2) # load ggplot library # Example: point <- data.frame(lat = 45, lon = 20) euler <- data.frame(lat = 90, lon = 0) model <- model_shmax(point, euler) print(model) #>   sc ld.ccw gc ld.cw #> 1 90    135  0    45 deviation <- misfit_shmax(model, 90) print(deviation) #>   dev.gc dev.sc dev.ld.cw dev.ld.ccw #> 1    -90      0       -45         45"},{"path":"https://tobiste.github.io/tectonicr/articles/tectonicr.html","id":"quantitative-comparison-between-predicted-and-observed-maximum-horizontal-stress","dir":"Articles","previous_headings":"Theory","what":"Quantitative Comparison Between Predicted and Observed Maximum Horizontal Stress","title":"Introduction to tectonicr","text":"normalized \\(\\chi^2\\) test quantitatively compares predicted (model_shmax()) observed \\(\\sigma_{Hmax}\\) azimuth relative reported \\(\\sigma\\) standard deviation (Wdowinski 1999). \\(\\alpha_i\\) \\(\\alpha_{predicted}\\) observed predicted directions \\(\\sigma_{Hmax}\\) respect pole rotation,respectively. \\(\\sigma_i\\) parameter reported uncertainty observed azimuth \\(M\\) number observations used test. normalized \\(\\chi^2\\) test yields number range 0-1 indicates quality fit. Low values normalized \\(\\chi^2\\) test (\\(\\leq\\) 0.15 indicate good agreement predicted observed directions. High values (\\(>\\) 0.7) indicate systematic misfit predicted observed directions 90\\(^{\\circ}\\). Random distribution \\(\\sigma_{Hmax}\\) directions results Norm \\(\\chi^2 = 0.33\\) test can run using norm_chisq(obs, prd, unc). obs numeric vector observed \\(\\sigma_{Hmax}\\); prd vector predicted \\(\\sigma_{Hmax}\\) (vector must length obs); unc uncertainty observed \\(\\sigma_{Hmax}\\) (either numeric vector length obs number). plate motions relative Pacific plate according NUVEL-1A model included package can imported :","code":"data(\"nuvel1\") # import example data set for Euler rotations euler <-   subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to Pacific plate point <- data.frame(lat = 45, lon = 20)  prd <- model_shmax(point, euler) norm_chisq(obs = 90, prd$sc, unc = 10) #> [1] 0.2790849 data(\"nuvel1\")"},{"path":"https://tobiste.github.io/tectonicr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tobias Stephan. Author, maintainer.","code":""},{"path":"https://tobiste.github.io/tectonicr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stephan T (2022). tectonicr: Modeling Direction Maximum Horizontal Stress using Relative Plate Motion. R package version 0.1, https://tobiste.github.io/tectonicr/.","code":"@Manual{,   title = {tectonicr: Modeling the Direction of the Maximum Horizontal Stress using Relative Plate Motion},   author = {Tobias Stephan},   year = {2022},   note = {R package version 0.1},   url = {https://tobiste.github.io/tectonicr/}, }"},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"tectonicr","dir":"","previous_headings":"","what":"Modeling the Direction of the Maximum Horizontal Stress using\n    Relative Plate Motion","title":"Modeling the Direction of the Maximum Horizontal Stress using\n    Relative Plate Motion","text":"tectonicr free open-source R package modeling analyzing direction maximum horizontal stress based empirical link orientation intraplate stress direction relative motion neighboring plates.","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Modeling the Direction of the Maximum Horizontal Stress using\n    Relative Plate Motion","text":"must R installed system (see http://r-project.org). Additionally, install tectonicr Github, also need remotes package. can installed typing following code R command line prompt:","code":"install.packages(\"remotes\")"},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Modeling the Direction of the Maximum Horizontal Stress using\n    Relative Plate Motion","text":"recent development version tectonicr available Github can installed system follows:","code":"remotes::install_github('tobiste/tectonicr') library('tectonicr')"},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Modeling the Direction of the Maximum Horizontal Stress using\n    Relative Plate Motion","text":"https://tobiste.github.io/tectonicr/articles/tectonicr.html","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"author","dir":"","previous_headings":"","what":"Author","title":"Modeling the Direction of the Maximum Horizontal Stress using\n    Relative Plate Motion","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"how-to-cite","dir":"","previous_headings":"","what":"How to cite","title":"Modeling the Direction of the Maximum Horizontal Stress using\n    Relative Plate Motion","text":"referencing package, please cite package DOI (10.5281/zenodo.6360893).","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"useful-references","dir":"","previous_headings":"","what":"Useful References","title":"Modeling the Direction of the Maximum Horizontal Stress using\n    Relative Plate Motion","text":"Wdowinski, S. (1998). theory intraplate tectonics. Journal Geophysical Research: Solid Earth, 103(3), 5037–5059. http://dx.doi.org/10.1029/97JB03390 Heidbach, O., Reinecker, J., Tingay, M., Müller, B., Sperner, B., Fuchs, K., & Wenzel, F. (2007). Plate boundary forces enough: Second- third-order stress patterns highlighted World Stress Map database. Tectonics, 26(6), n/-n/. https://doi.org/10.1029/2007TC002133 Heidbach, O., Rajabi, M., Reiter, K., Ziegler, M., & Team, W. (2016). World Stress Map Database Release 2016. V. 1.1. GFZ Data Services. https://doi.org/10.5880/WSM.2016.001 Zoback, M. Lou, Zoback, M. D., Adams, J., Assumpção, M., Bell, S., Bergman, E. ., Blümling, P., Brereton, N. R., Denham, D., Ding, J., Fuchs, K., Gay, N., Gregersen, S., Gupta, H. K., Gvishiani, ., Jacob, K., Klein, R., Knoll, P., Magee, M., … Zhizhin, M. (1989). Global patterns tectonic stress. Nature, 341(6240), 291–298. https://doi.org/10.1038/341291a0","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Modeling the Direction of the Maximum Horizontal Stress using\n    Relative Plate Motion","text":"GPL-3.0 License","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PB2002.html","id":null,"dir":"Reference","previous_headings":"","what":"Plate Boundaries on the Earth — PB2002","title":"Plate Boundaries on the Earth — PB2002","text":"Global set present plate boundaries Earth (PB2002) Bird 2003","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PB2002.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plate Boundaries on the Earth — PB2002","text":"","code":"data('PB2002')"},{"path":"https://tobiste.github.io/tectonicr/reference/PB2002.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Plate Boundaries on the Earth — PB2002","text":"object class \"sf\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PB2002.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plate Boundaries on the Earth — PB2002","text":"Bird, P. (2003), updated digital model plate boundaries, Geochem. Geophys. Geosyst., 4, 1027,doi:10.1029/2001GC000252 , 3.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PB2002.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plate Boundaries on the Earth — PB2002","text":"","code":"data(\"PB2002\") head(\"PB2002\") #> [1] \"PB2002\""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"PoR coordinate reference system — PoR_crs","title":"PoR coordinate reference system — PoR_crs","text":"Helper function create reference system transformed Euler pole coordinate","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PoR coordinate reference system — PoR_crs","text":"","code":"PoR_crs(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PoR coordinate reference system — PoR_crs","text":"x data.frame geographical coordinates Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PoR coordinate reference system — PoR_crs","text":"PoR coordinate reference system oblique transformation geographical coordinate system Euler pole coordinates translation factors.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Theoretical Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","title":"Theoretical Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","text":"Models direction maximum horizontal stress \\(\\sigma_{\\text{Hmax}}\\) Euler pole (Pole Rotation) cooridnate reference system. type plate boundary given, also gives deviation theoretically predicted azimuth \\(\\sigma_{\\text{Hmax}}\\), deviation, normalized \\(\\chi^2\\) statistics.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theoretical Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","text":"","code":"PoR_shmax(df, euler, type = c(\"in\", \"out\", \"right\", \"left\"))"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theoretical Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","text":"df data.frame containing coordinates point(s) (lat, lon), orientation \\(\\sigma_{\\text{Hmax}}\\) azi standard deviation unc (optional) euler data.frame containing coordinates Euler pole plate boundary  (lat, lon) type Character. Type plate boundary (optional). Can \"\", \"\", \"right\", \"left\" outward, inward, right-lateral, left-lateral moving plate boundaries, respectively.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theoretical Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","text":"Either numeric vector azimuths transformed coordinate system, \"data.frame\" \"azi.PoR\" transformed azimuths, \"prd\" predicted azimuths, \"dev\" deviation, \"nchisq\" normalized \\(\\chi^2\\) statistics.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Theoretical Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","text":"According theory, azimuth \\(\\sigma_{\\text{Hmax}}\\) pole rotation reference system approximate 0 (180), 45, 90, 135 degrees stress sourced outward, sinistral, inward, dextral moving plate boundary, respectively. directions \\(\\sigma_{\\text{Hmax}}\\) respect four plate boundary types.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theoretical Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","text":"","code":"data(\"nuvel1\") # North America relative to Pacific plate: euler <- subset(nuvel1, nuvel1$plate.rot == \"na\")  data(\"wsm2016\") stress <- subset(   wsm2016,   wsm2016$lat >= 23 & wsm2016$lat <= 40 &     wsm2016$lon >= -126 & wsm2016$lon <= -108 ) stress$unc <- stress$sd res <- PoR_shmax(stress, euler, type = \"right\") head(res) #>      azi.PoR prd        dev nchisq #> 1 173.240166 135   38.24017     NA #> 2   1.058195 135 -133.94180     NA #> 3 147.609558 135   12.60956     NA #> 4 163.607388 135   28.60739     NA #> 5 152.233017 135   17.23302     NA #> 6 150.611386 135   15.61139     NA"},{"path":"https://tobiste.github.io/tectonicr/reference/PositionCenterSpoke.html","id":null,"dir":"Reference","previous_headings":"","what":"Centrically aligned geom_spoke marker — PositionCenterSpoke","title":"Centrically aligned geom_spoke marker — PositionCenterSpoke","text":"\"position\" subclass \"center_spoke\" center ggplot::geom_spoke() marker origin","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PositionCenterSpoke.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Centrically aligned geom_spoke marker — PositionCenterSpoke","text":"","code":"PositionCenterSpoke"},{"path":"https://tobiste.github.io/tectonicr/reference/PositionCenterSpoke.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Centrically aligned geom_spoke marker — PositionCenterSpoke","text":"object class PositionCenterSpoke (inherits Position, ggproto, gg) length 2.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PositionCenterSpoke.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Centrically aligned geom_spoke marker — PositionCenterSpoke","text":"https://stackoverflow.com/questions/55474143/--center-geom-spoke-around--origin","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/abs_vel.html","id":null,"dir":"Reference","previous_headings":"","what":"Absolute Plate Velocity — abs_vel","title":"Absolute Plate Velocity — abs_vel","text":"Calculates absolute angular velocity plate motion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/abs_vel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Absolute Plate Velocity — abs_vel","text":"","code":"abs_vel(w, alpha, r = 6371.00887714)"},{"path":"https://tobiste.github.io/tectonicr/reference/abs_vel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Absolute Plate Velocity — abs_vel","text":"w Angular velocity rate angle rotation alpha Angular distance Euler pole small circle around Euler pole r Radius. Default Earth's radius (6371.00887714 km)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/abs_vel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Absolute Plate Velocity — abs_vel","text":"Number (km/Myr)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/abs_vel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Absolute Plate Velocity — abs_vel","text":"","code":"abs_vel(0.21, 0) #> [1] 0 abs_vel(0.21, 45) #> [1] 16.51163 abs_vel(0.21, 90) #> [1] 23.35097"},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Degrees to Radians — angle-conversion","title":"Degrees to Radians — angle-conversion","text":"Helper functions transform angles degrees radians.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Degrees to Radians — angle-conversion","text":"","code":"rad2deg(rad)  deg2rad(deg)"},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Degrees to Radians — angle-conversion","text":"pracma::deg2rad(), pracma::rad2deg() package \"pracma\".","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Degrees to Radians — angle-conversion","text":"rad (array ) angles radians. deg (array ) angles degrees.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Degrees to Radians — angle-conversion","text":"angle degrees radians.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Degrees to Radians — angle-conversion","text":"","code":"deg2rad(seq(-90, 90, 15)) #>  [1] -1.5707963 -1.3089969 -1.0471976 -0.7853982 -0.5235988 -0.2617994 #>  [7]  0.0000000  0.2617994  0.5235988  0.7853982  1.0471976  1.3089969 #> [13]  1.5707963 rad2deg(seq(-pi / 2, pi / 2, length = 13)) #>  [1] -90 -75 -60 -45 -30 -15   0  15  30  45  60  75  90"},{"path":"https://tobiste.github.io/tectonicr/reference/angle_vectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Angle Between Two Vectors — angle_vectors","title":"Angle Between Two Vectors — angle_vectors","text":"Calculates angle two vectors","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle_vectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Angle Between Two Vectors — angle_vectors","text":"","code":"angle_vectors(x, y)"},{"path":"https://tobiste.github.io/tectonicr/reference/angle_vectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Angle Between Two Vectors — angle_vectors","text":"x, y Vectors Cartesian coordinates. Can vectors three numbers matrix 3 columns (x, y, z)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle_vectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Angle Between Two Vectors — angle_vectors","text":"Numeric; angle degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle_vectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Angle Between Two Vectors — angle_vectors","text":"","code":"u <- c(1, -2, 3) v <- c(-2, 1, 1) angle_vectors(u, v) #> [1] 96.26395"},{"path":"https://tobiste.github.io/tectonicr/reference/circle_median.html","id":null,"dir":"Reference","previous_headings":"","what":"Median and statistics on Pi-periodic Data — circle_median","title":"Median and statistics on Pi-periodic Data — circle_median","text":"Calculate mean, median, quartile, interquartile range, variance, deviation, error orientation data.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_median.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Median and statistics on Pi-periodic Data — circle_median","text":"","code":"circular_quasi_median(x, quiet = TRUE)  circular_mean(x)  circular_quasi_quantile(x, quiet = TRUE)  circular_quasi_IQR(x, quiet = TRUE)  circular_var(x, quiet = TRUE)  circular_mean_deviation(x, quiet = TRUE)  circular_median_deviation(x, quiet = TRUE)  circular_mean_error(x, quiet = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/circle_median.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Median and statistics on Pi-periodic Data — circle_median","text":"median(), quantile(), IQR() equivalents non-periodic data.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_median.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Median and statistics on Pi-periodic Data — circle_median","text":"x Numeric vector degrees. quiet logical. false, warning message printed NA values.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_median.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Median and statistics on Pi-periodic Data — circle_median","text":"Numeric vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_median.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Median and statistics on Pi-periodic Data — circle_median","text":"Quasi median circle, quasi quartiles circle, quasi interquartile range circle.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_median.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Median and statistics on Pi-periodic Data — circle_median","text":"Ratanaruamkarn, S., Niewiadomska-Bugaj, M., Wang, J.-C. (2009). New Estimator Circular Median. Communications Statistics - Simulation Computation, 38(6), 1269--1291. doi:10.1080/03610910902899950 . Reiter, K., Heidbach, O., Schmitt, D., Haug, K., Ziegler, M., & Moeck, . (2014). revised crustal stress orientation database Canada. Tectonophysics, 636, 111-124. doi:10.1016/j.tecto.2014.08.006","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_median.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Median and statistics on Pi-periodic Data — circle_median","text":"","code":"x <- c(0, 45, 55, 40 + 180, 50 + 180) circular_mean(x) #> [1] 40.22302 circular_quasi_median(x) #> [1] 45 circular_quasi_quantile(x) #> [1]  0.000000  9.685895 45.000000 46.249405 55.000000 circular_quasi_IQR(x) #> [1] 36.56351 circular_var(x) #> [1] 0.8 circular_mean_deviation(x) #> [1] 145 circular_median_deviation(x) #> [1] 5 circular_mean_error(x) #> [1] 145"},{"path":"https://tobiste.github.io/tectonicr/reference/coordinate_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate Correction — coordinate_mod","title":"Coordinate Correction — coordinate_mod","text":"Corrects longitudes latitudes values -180 +180, -90 +90 degree","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinate_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate Correction — coordinate_mod","text":"","code":"longitude_modulo(x)  latitude_modulo(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/coordinate_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate Correction — coordinate_mod","text":"x Longitude(s) latitude(s) degree","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinate_mod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinate Correction — coordinate_mod","text":"numeric","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinate_mod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinate Correction — coordinate_mod","text":"","code":"longitude_modulo(-361) #> [1] -1 latitude_modulo(-91) #> [1] -89"},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate Transformations — coordinates","title":"Coordinate Transformations — coordinates","text":"Converts vector Cartesian geographical coordinate systems","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate Transformations — coordinates","text":"","code":"cartesian_to_geographical(n)  geographical_to_cartesian(p)"},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate Transformations — coordinates","text":"n Cartesian coordinates (x, y, z) vector p Geographical coordinates (latitude, longitude) vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinate Transformations — coordinates","text":"Functions return (2- 3-dimensional) vector representing point requested coordinate system.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinate Transformations — coordinates","text":"","code":"n <- c(1, -2, 3) cartesian_to_geographical(n) #> [1]  53.30077 -63.43495 p <- c(50, 10) geographical_to_cartesian(p) #> [1] 0.6330222 0.1116189 0.7660444"},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Angle Between Two Directions — deviation_norm","title":"Normalize Angle Between Two Directions — deviation_norm","text":"Normalizes angle two directions acute angle , .e. angles 0 90°","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Angle Between Two Directions — deviation_norm","text":"","code":"deviation_norm(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Angle Between Two Directions — deviation_norm","text":"x Numeric vector containing angles degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Angle Between Two Directions — deviation_norm","text":"Numeric vector, acute angles two directions, .e. values 0 90°","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Normalize Angle Between Two Directions — deviation_norm","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize Angle Between Two Directions — deviation_norm","text":"","code":"deviation_norm(91) #> [1] 89 deviation_norm(c(-91, NA, 23497349)) #> [1] 89 NA 31"},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance from plate boundary — distance_from_pb","title":"Distance from plate boundary — distance_from_pb","text":"Absolute distance data points nearest plate boundary degree","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance from plate boundary — distance_from_pb","text":"","code":"distance_from_pb(x, ep, pb, tangential = FALSE)"},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance from plate boundary — distance_from_pb","text":"x, pb sf objects data points plate boundary geometries geographical coordinate system ep data.frame geographical coordinates Euler pole (lat, lon) tangential Logical. TRUE tangential boundaries FALSE (default) inward outward boundaries.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance from plate boundary — distance_from_pb","text":"Numeric vector great circle distances degree","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distance from plate boundary — distance_from_pb","text":"distance plate boundary longitudinal latitudinal difference data point plate boundary (along closest latitude longitude) inward/outward tangential plate boundaries, respectively.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance from plate boundary — distance_from_pb","text":"","code":"data(\"nuvel1\") na_pa <- subset(nuvel1, nuvel1$plate.rot == \"na\")  data(\"PB2002\") san_andreas <- subset(PB2002, PB2002$PlateA %in% c(\"NA\", \"PA\") & PB2002$PlateB %in% c(\"NA\", \"PA\"))  data(\"wsm2016\") california <- subset(   wsm2016,   wsm2016$lat >= 23 & wsm2016$lat <= 40 &     wsm2016$lon >= -126 & wsm2016$lon <= -108 ) california <- sf::st_set_crs(sf::st_as_sf(california, coords = c(\"lon\", \"lat\")), \"WGS84\")  res <- distance_from_pb(x = california, ep = na_pa, pb = san_andreas, tangential = TRUE) head(res) #> [1] 2.502915 4.175856 2.728180 3.523382 5.998119 6.988708"},{"path":"https://tobiste.github.io/tectonicr/reference/distance_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize angular distance on a sphere distance — distance_mod","title":"Normalize angular distance on a sphere distance — distance_mod","text":"Helper function express angular distance sphere range -180 180 degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize angular distance on a sphere distance — distance_mod","text":"","code":"distance_mod(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/distance_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize angular distance on a sphere distance — distance_mod","text":"x numeric, angular distance (degrees)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_mod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize angular distance on a sphere distance — distance_mod","text":"numeric vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"Plate Stress Dummy Grid — dummy","title":"Plate Stress Dummy Grid — dummy","text":"Helper functions create dummy grid small circles, great circles, loxodromes Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plate Stress Dummy Grid — dummy","text":"","code":"smallcircle_dummy(n)  greatcircle_dummy(n)  loxodrome_dummy(n, angle, cw)"},{"path":"https://tobiste.github.io/tectonicr/reference/dummy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plate Stress Dummy Grid — dummy","text":"n Number curves angle Direction loxodromes (degree) cw logical. Sense loxodromes: TRUE clockwise loxodromes (right-lateral displaced plate boundaries). FALSE counterclockwise loxodromes (left-lateral displaced plate boundaries).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dummy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plate Stress Dummy Grid — dummy","text":"data.frame","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/equivalent_rotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Equivalent rotation — equivalent_rotation","title":"Equivalent rotation — equivalent_rotation","text":"Transforms sequence rotations new reference system","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/equivalent_rotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Equivalent rotation — equivalent_rotation","text":"","code":"equivalent_rotation(x, fixed)"},{"path":"https://tobiste.github.io/tectonicr/reference/equivalent_rotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Equivalent rotation — equivalent_rotation","text":"x Object class \"data.frame\" containing Euler poles plate rotations: plate.rot Moving plate lat, lon coordinates Euler pole angle Angle rotation plate.fix Fixed plate fixed plate regarded fixed. one x$plate.fix","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/equivalent_rotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Equivalent rotation — equivalent_rotation","text":"sequence plate rotations new reference system. object class x","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/equivalent_rotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Equivalent rotation — equivalent_rotation","text":"","code":"data(nuvel1) # load the NUVEL1 rotation parameters  # all nuvel1 rotation equivalent to fixed Africa: equivalent_rotation(nuvel1, fixed = \"af\") #>    plate.rot        lat        lon     angle plate.fix #> 1         af  90.000000    0.00000 0.0000000        af #> 2         an  -5.452231  140.35648 0.1330674        af #> 3         ar  23.865725   23.55718 0.4163188        af #> 4         au  12.158188   49.36126 0.6604014        af #> 5         ca -64.455121 -165.43989 0.1551761        af #> 6         co  18.079956 -121.80599 1.3658002        af #> 7         eu -20.829680  159.02982 0.1283940        af #> 8         in  23.314867   28.07406 0.4299189        af #> 9         nz  43.676689 -114.10270 0.4948982        af #> 10        na -78.577298 -142.59806 0.2489005        af #> 11        sa -62.344014  140.57957 0.3237372        af #> 12        jf -36.803097   69.43364 0.8851710        af #> 13        ph -54.590857  -26.06133 1.0236334        af #> 14        pa -59.160000  106.82600 0.9695000        af"},{"path":"https://tobiste.github.io/tectonicr/reference/euler_from_rot.html","id":null,"dir":"Reference","previous_headings":"","what":"Euler axis and angle from Euler matrix — euler_from_rot","title":"Euler axis and angle from Euler matrix — euler_from_rot","text":"Extracts coordinates Euler pole angle Euler matrix","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_from_rot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euler axis and angle from Euler matrix — euler_from_rot","text":"","code":"euler_from_rot(A)"},{"path":"https://tobiste.github.io/tectonicr/reference/euler_from_rot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Euler axis and angle from Euler matrix — euler_from_rot","text":"3x3 matrix","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_from_rot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Euler axis and angle from Euler matrix — euler_from_rot","text":"list following objects pole object class \"euler.pole\" psi numeric Euler angle degree","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_from_rot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Euler axis and angle from Euler matrix — euler_from_rot","text":"rotation (.e. angle zero), coordinates axis equal Earth's spin axis (according GPLATES convention).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_from_rot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Euler axis and angle from Euler matrix — euler_from_rot","text":"","code":"ep <- euler_pole(90, 0) er <- euler_rot(ep, psi = 45)  euler_from_rot(er) #> $pole #>   lat lon x y   z #> 1  90   0 0 0 0.5 #>  #> $psi #> [1] 45 #>"},{"path":"https://tobiste.github.io/tectonicr/reference/euler_pole.html","id":null,"dir":"Reference","previous_headings":"","what":"Euler pole object — euler_pole","title":"Euler pole object — euler_pole","text":"Creates object orientation Euler pole axis","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_pole.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euler pole object — euler_pole","text":"","code":"euler_pole(x, y, z = NA, geo = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/euler_pole.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Euler pole object — euler_pole","text":"x latitude x coordinate Euler pole axis y longitude y z z coordinate geo logical,TRUE (default) Euler pole axis given geographical coordinates (latitude, longitude). FALSE given cartesian coordinates (x, y, z)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_pole.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Euler pole object — euler_pole","text":"object class \"euler.pole\"containing Euler pole axis geographical cartesian coordinates.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_pole.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Euler pole object — euler_pole","text":"","code":"euler_pole(90, 0) #>   lat lon x y z #> 1  90   0 0 0 1 euler_pole(0, 0, 1, geo = FALSE) #>   lat lon x y z #> 1  90   0 0 0 1"},{"path":"https://tobiste.github.io/tectonicr/reference/euler_rot.html","id":null,"dir":"Reference","previous_headings":"","what":"Euler rotation matrix — euler_rot","title":"Euler rotation matrix — euler_rot","text":"Creates matrix given set values.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_rot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euler rotation matrix — euler_rot","text":"","code":"euler_rot(ep, psi)"},{"path":"https://tobiste.github.io/tectonicr/reference/euler_rot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Euler rotation matrix — euler_rot","text":"ep object class \"euler.pole\", data.frame (containing lon lat) psi Angle rotation degree","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_rot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Euler rotation matrix — euler_rot","text":"matrix","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_rot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Euler rotation matrix — euler_rot","text":"Greiner, B. (1999). Euler rotations plate-tectonic reconstructions. Computers Geosciences, 25(3), 209--216. doi:10.1016/S0098-3004(98)00160-5","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_rot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Euler rotation matrix — euler_rot","text":"","code":"ep <- euler_pole(90, 0) euler_rot(ep, psi = 45) #>           [,1]       [,2] [,3] #> [1,] 0.7071068 -0.7071068    0 #> [2,] 0.7071068  0.7071068    0 #> [3,] 0.0000000  0.0000000    1"},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":null,"dir":"Reference","previous_headings":"","what":"Azimuth Between two Points — get_azimuth","title":"Azimuth Between two Points — get_azimuth","text":"Calculate initial bearing (forward azimuth/direction) go point p1 point p2 following great circle arc sphere.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Azimuth Between two Points — get_azimuth","text":"","code":"get_azimuth(a, b)"},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Azimuth Between two Points — get_azimuth","text":", b Latitude/longitude start end point(s). Can vectors two numbers matrix 2 columns (latitude, longitude)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Azimuth Between two Points — get_azimuth","text":"Azimuth degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Azimuth Between two Points — get_azimuth","text":"formula initial bearing (sometimes referred forward azimuth) followed straight line along great circle arc take start point end point: $$\\theta = \\arctan2 (\\sin \\Delta\\lambda * \\cos\\psi_2, \\cos\\psi_1 \\sin\\psi_1-\\sin\\psi_1 \\cos\\psi_2 \\cos\\Delta\\lambda)$$  \\(\\psi_1, \\lambda_1\\) start point, \\(\\psi_2\\), \\(\\lambda_2\\) end point (\\(\\Delta\\lambda\\) difference longitude)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Azimuth Between two Points — get_azimuth","text":"http://www.movable-type.co.uk/scripts/latlong.html","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Azimuth Between two Points — get_azimuth","text":"","code":"berlin <- c(52.517, 13.4) # Berlin tokyo <- c(35.7, 139.767) # Tokyo get_azimuth(berlin, tokyo) #> [1] 41.57361"},{"path":"https://tobiste.github.io/tectonicr/reference/misfit_shmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — misfit_shmax","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — misfit_shmax","text":"Calculate angular difference observed modeled direction maximum horizontal stresses (\\(\\sigma_\\text{Hmax}\\)) along great circles, small circles, loxodromes relative plate motion's Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/misfit_shmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — misfit_shmax","text":"","code":"misfit_shmax(prd, obs)"},{"path":"https://tobiste.github.io/tectonicr/reference/misfit_shmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — misfit_shmax","text":"prd data.frame containing modeled azimuths \\(\\sigma_\\text{Hmax}\\), .e. return object model_shmax() obs Numeric vector containing observed azimuth \\(\\sigma_\\text{Hmax}\\), length prd","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/misfit_shmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — misfit_shmax","text":"object class data.frame dev.gc Deviation observed stress modeled \\(\\sigma_\\text{Hmax}\\) following great circles dev.sc Small circles dev.ld.cw Clockwise loxodromes dev.ld.ccw Counter-clockwise loxodromes","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/misfit_shmax.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — misfit_shmax","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/misfit_shmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — misfit_shmax","text":"","code":"data(\"nuvel1\") # North America relative to Pacific plate: euler <- subset(nuvel1, nuvel1$plate.rot == \"na\")  # the point where we want to model the SHmax direction: point <- data.frame(lat = 45, lon = 20)  prd <- model_shmax(point, euler) misfit_shmax(prd, obs = 90) #>     dev.gc    dev.sc dev.ld.cw dev.ld.ccw #> 1 42.45436 -47.54564  87.45436  -2.545636"},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Theoretical Direction of Maximum Horizontal Stress in the\ngeographical reference system. — model_shmax","title":"Theoretical Direction of Maximum Horizontal Stress in the\ngeographical reference system. — model_shmax","text":"Models direction maximum horizontal stress \\(\\sigma_\\text{Hmax}\\) along great circles, small circles, loxodromes given point points according relative plate motion geographical coordinate reference system.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theoretical Direction of Maximum Horizontal Stress in the\ngeographical reference system. — model_shmax","text":"","code":"model_shmax(df, euler)"},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theoretical Direction of Maximum Horizontal Stress in the\ngeographical reference system. — model_shmax","text":"df data.frame containing coordinates point(s) (lat, lon). euler data.frame containing coordinates Euler pole plate boundary (lat, lon).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theoretical Direction of Maximum Horizontal Stress in the\ngeographical reference system. — model_shmax","text":"data.frame gc Azimuth modeled \\(\\sigma_\\text{Hmax}\\) following great circles sc Small circles ld.cw Clockwise loxodromes ld.ccw Counter-clockwise loxodromes","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Theoretical Direction of Maximum Horizontal Stress in the\ngeographical reference system. — model_shmax","text":"\\(\\sigma_\\text{Hmax}\\) following great circles (initial) bearing given point pole relative plate motion. \\(\\sigma_\\text{Hmax}\\) along small circles, clockwise, counter-clockwise loxodromes 90\\(^{\\circ}\\), +45\\(^{\\circ}\\), 135\\(^{\\circ}\\) (-45\\(^{\\circ}\\)) great circle bearing, respectively.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Theoretical Direction of Maximum Horizontal Stress in the\ngeographical reference system. — model_shmax","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theoretical Direction of Maximum Horizontal Stress in the\ngeographical reference system. — model_shmax","text":"","code":"data(\"nuvel1\") # North America relative to Pacific plate: euler <- subset(nuvel1, nuvel1$plate.rot == \"na\")  # the point where we mant to model the SHmax direction: point <- data.frame(lat = 45, lon = 20)  model_shmax(point, euler) #>         sc   ld.ccw       gc    ld.cw #> 1 42.45436 87.45436 132.4544 177.4544"},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalized Chi-Squared Test — norm_chisq","title":"Normalized Chi-Squared Test — norm_chisq","text":"quantitative comparison predicted observed directions \\(\\sigma_\\text{Hmax}\\) obtained calculation average azimuth normalized \\(\\chi^2\\) test.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalized Chi-Squared Test — norm_chisq","text":"","code":"norm_chisq(obs, prd, unc)"},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalized Chi-Squared Test — norm_chisq","text":"obs Numeric vector containing observed azimuth \\(\\sigma_\\text{Hmax}\\), length prd prd data.frame containing modeled azimuths \\(\\sigma_\\text{Hmax}\\), .e. return object model_shmax() unc Uncertainty observed \\(\\sigma_\\text{Hmax}\\), either numeric vector number","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalized Chi-Squared Test — norm_chisq","text":"Numeric vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalized Chi-Squared Test — norm_chisq","text":"normalized \\(\\chi^2\\) test $$ \\text{Norm} \\chi^2_i =  = \\frac{    \\sum^M_{= 1} \\left( \\frac{\\alpha_i - \\alpha_{\\text{predict}}}{\\sigma_i} \\right) ^2}    {\\sum^M_{= 1} \\left( \\frac{90}{\\sigma_i} \\right) ^2 }$$ value chi-squared test statistic number 0 1 indicating quality predicted \\(\\sigma_\\text{Hmax}\\) directions. Low values (\\(\\le 0.15\\)) indicate good agreement, high values (\\(> 0.7\\)) indicate systematic misfit predicted observed \\(\\sigma_\\text{Hmax}\\) directions.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Normalized Chi-Squared Test — norm_chisq","text":"Wdowinski, S., 1998, theory intraplate tectonics. Journal Geophysical Research: Solid Earth, v. 103, p. 5037--5059, doi:10.1029/97JB03390 .","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalized Chi-Squared Test — norm_chisq","text":"","code":"data(\"nuvel1\") euler <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to # Pacific plate point <- data.frame(lat = 45, lon = 20) prd <- model_shmax(point, euler) norm_chisq(obs = c(50, 40, 42), prd$sc, unc = c(10, NA, 5)) #> [1] 0.001426232"},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1.html","id":null,"dir":"Reference","previous_headings":"","what":"Global model of current plate motions — nuvel1","title":"Global model of current plate motions — nuvel1","text":"Global model current plate motions (NUVEL-1) DeMets et al. 1990","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global model of current plate motions — nuvel1","text":"","code":"data('nuvel1')"},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Global model of current plate motions — nuvel1","text":"object class \"data.frame\" plate.name rotating plate plate.rot abbreviation plate's name lat,lon Coordinates Euler pole angle amount rotation (angle 1 Myr) plate.fix anchored plate, .e. plate.rot moves relative plate.fix source Reference underlying study","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global model of current plate motions — nuvel1","text":"DeMets, C., Gordon, R. G., Argus, D. F., & Stein, S. (1990). Current plate motions. Geophysical Journal International, 101(2), 425--478. doi:10.1111/j.1365-246X.1990.tb06579.x .","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global model of current plate motions — nuvel1","text":"","code":"data(\"nuvel1\") head(\"nuvel1\") #> [1] \"nuvel1\""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between PoR to geographical coordinate system — por_transformation","title":"Conversion between PoR to geographical coordinate system — por_transformation","text":"Transform spherical objects PoR geographical coordinate system vice versa.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between PoR to geographical coordinate system — por_transformation","text":"","code":"PoR_to_geographical(x, ep)  geographical_to_PoR(x, ep)"},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between PoR to geographical coordinate system — por_transformation","text":"x sf object data points geographical PoR coordinate system ep data.frame geographical coordinates Euler pole (lat, lon)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion between PoR to geographical coordinate system — por_transformation","text":"sf object data points transformed geographical PoR coordinate system","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conversion between PoR to geographical coordinate system — por_transformation","text":"PoR coordinate reference system oblique transformation geographical coordinate system Euler pole coordinates translation factors.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion between PoR to geographical coordinate system — por_transformation","text":"","code":"data(\"nuvel1\") euler <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to Pacific plate  data(\"wsm2016\") example.geo <- sf::st_set_crs(sf::st_as_sf(wsm2016[1:10, ], coords = c(\"lon\", \"lat\")), \"EPSG:4326\")  example.por <- geographical_to_PoR(example.geo, euler) PoR_to_geographical(example.por, euler) #> Simple feature collection with 10 features and 58 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 127.3626 ymin: 3.92544 xmax: 136.2982 ymax: 15.82978 #> CRS:           +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 #> # A tibble: 10 × 59 #>    id       site    azi type  depth quality regime locality   country date       #>  * <chr>    <chr> <dbl> <chr> <dbl> <fct>   <chr>  <chr>      <chr>   <date>     #>  1 wsm00001 TU31    100 FMS    14   C       NF     NA         Turkey  1964-10-06 #>  2 wsm00002 TU28    105 FMS     0   C       SS     NA         Turkey  1953-03-18 #>  3 wsm00003 TU25     87 FMS     0   C       NF     NA         Turkey  1939-09-22 #>  4 wsm00004 TU13     38 FMS    38   C       TS     NA         Turkey  1966-03-07 #>  5 wsm00005 TU12    101 FMS    16   C       NF     centralTu… Turkey  1965-06-13 #>  6 wsm00006 TU60     82 FMS    15   C       SS     NA         Turkey  1983-10-21 #>  7 wsm00007 TU54    109 FMS     6.6 C       NF     NA         Turkey  1971-05-25 #>  8 wsm00008 TU53    100 FMS     9.6 C       NF     NA         Turkey  1970-04-19 #>  9 wsm00009 TU50    123 FMS     9.9 C       NF     NA         Turkey  1969-03-25 #> 10 wsm00010 TU49    115 FMS     8.8 C       NF     NA         Turkey  1969-03-23 #> # … with 49 more variables: time <chr>, number <int>, sd <dbl>, method <chr>, #> #   s1az <dbl>, s1pl <dbl>, s2az <dbl>, s2pl <dbl>, s3az <dbl>, s3pl <dbl>, #> #   mag_int_s1 <dbl>, slopes1 <dbl>, mag_int_s2 <dbl>, slopes2 <dbl>, #> #   mag_int_s3 <dbl>, slopes3 <dbl>, pore_magin <dbl>, pore_slope <dbl>, #> #   mag_type <chr>, eq_mag <dbl>, mom <dbl>, mom_exp <dbl>, eq_avg <chr>, #> #   tot_len <dbl>, sd_weight <chr>, samp_int <dbl>, top <dbl>, bot <dbl>, #> #   no_mag_ven <int>, young <dbl>, poisson <dbl>, rock <chr>, age <chr>, …"},{"path":"https://tobiste.github.io/tectonicr/reference/quantise_wsm_quality.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantize World Stress Map Quality Ranking — quantise_wsm_quality","title":"Quantize World Stress Map Quality Ranking — quantise_wsm_quality","text":"Relates categorical quality ranking World Stress Map (, B, C, D) numeric values precision measurement.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/quantise_wsm_quality.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantize World Stress Map Quality Ranking — quantise_wsm_quality","text":"","code":"quantise_wsm_quality(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/quantise_wsm_quality.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantize World Stress Map Quality Ranking — quantise_wsm_quality","text":"x Either string character vector WSM quality ranking","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/quantise_wsm_quality.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantize World Stress Map Quality Ranking — quantise_wsm_quality","text":"\"integer\" vector type \"integer\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/quantise_wsm_quality.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quantize World Stress Map Quality Ranking — quantise_wsm_quality","text":"Heidbach, O.; Barth, .; Müller, B.; Reinecker, J.; Stephansson, O.; Tingay, M.; Zang, . (2016). WSM quality ranking scheme, database description analysis guidelines stress indicator. World Stress Map Technical Report 16-01, GFZ German Research Centre Geosciences. doi:10.2312/wsm.2016.001","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/quantise_wsm_quality.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantize World Stress Map Quality Ranking — quantise_wsm_quality","text":"","code":"quantise_wsm_quality(c(\"A\", \"B\", \"C\", \"D\", NA)) #> [1] 15 20 25 40 NA data(\"wsm2016\") quantise_wsm_quality(wsm2016$quality[1:20]) #>  [1] 25 25 25 25 25 25 25 25 25 25 25 NA 40 25 25 20 25 25 25 25"},{"path":"https://tobiste.github.io/tectonicr/reference/rotate_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate Lines — rotate_lines","title":"Rotate Lines — rotate_lines","text":"Rotates set straight lines around angle","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotate_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate Lines — rotate_lines","text":"","code":"rotate_lines(theta, p, centre)"},{"path":"https://tobiste.github.io/tectonicr/reference/rotate_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate Lines — rotate_lines","text":"theta Angle rotation (degree) p Coordinates lines end points centre Coordinates center point rotation","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotate_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate Lines — rotate_lines","text":"matrix","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_angle.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotation angle from rotation matrix — rotation_angle","title":"Rotation angle from rotation matrix — rotation_angle","text":"Extracts rotation angle rotation matrix","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_angle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotation angle from rotation matrix — rotation_angle","text":"","code":"rotation_angle(A)"},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_angle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotation angle from rotation matrix — rotation_angle","text":"3x3 matrix","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_angle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotation angle from rotation matrix — rotation_angle","text":"numeric angle degree","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_angle.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Rotation angle from rotation matrix — rotation_angle","text":"Infinitesimal small rotation (.e. small angles) cause Error due round-errors. order avoid error, rotations treated equal rotations. function print warning message case.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_angle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotation angle from rotation matrix — rotation_angle","text":"","code":"w <- c(0, 1, 0) rot <- rotation_matrix(w, 90)  rotation_angle(rot) #> [1] 90"},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_axis.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotation axis from rotation matrix — rotation_axis","title":"Rotation axis from rotation matrix — rotation_axis","text":"Extracts rotation axis rotation matrix","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_axis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotation axis from rotation matrix — rotation_axis","text":"","code":"rotation_axis(A)"},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_axis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotation axis from rotation matrix — rotation_axis","text":"3x3 matrix","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_axis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotation axis from rotation matrix — rotation_axis","text":"vector","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_axis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotation axis from rotation matrix — rotation_axis","text":"","code":"w <- c(0, 1, 0) rot <- rotation_matrix(w, 90)  rotation_axis(rot) #> [1] 0 1 0"},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotation Matrix — rotation_matrix","title":"Rotation Matrix — rotation_matrix","text":"Calculates rotation matrix using rotation axis angle rotation","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotation Matrix — rotation_matrix","text":"","code":"rotation_matrix(n, alpha)"},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotation Matrix — rotation_matrix","text":"n Rotation axis (Cartesian coordinates). Can vector three numbers matrix 3 columns (x, y, z) alpha Rotation angle degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotation Matrix — rotation_matrix","text":"matrix","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rotation Matrix — rotation_matrix","text":"","code":"w <- c(0, 1, 0) rotation_matrix(w, 90) #>      [,1] [,2] [,3] #> [1,]    0    0    1 #> [2,]    0    1    0 #> [3,]   -1    0    0"},{"path":"https://tobiste.github.io/tectonicr/reference/spec_atan.html","id":null,"dir":"Reference","previous_headings":"","what":"Quadrant-specific inverse of the tangent — spec_atan","title":"Quadrant-specific inverse of the tangent — spec_atan","text":"returns quadrant specific inverse tangent","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spec_atan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quadrant-specific inverse of the tangent — spec_atan","text":"","code":"atan2_spec(x, y)  atan2d_spec(x, y)"},{"path":"https://tobiste.github.io/tectonicr/reference/spec_atan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quadrant-specific inverse of the tangent — spec_atan","text":"x, y dividend divisor comprise sum sines cosines, respectively.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spec_atan.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quadrant-specific inverse of the tangent — spec_atan","text":"Jammalamadaka, S. Rao, Ambar Sengupta. Topics circular statistics. Vol. 5. world scientific, 2001.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Theoretical Plate Tectonic Stress Paths — stress_paths","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"Construct \\(\\sigma_\\text{Hmax}\\) lines following small circles, great circles, loxodromes Euler pole relative plate motion.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"","code":"eulerpole_paths(   x,   type = c(\"sc\", \"gc\", \"ld\"),   n = 10,   angle,   cw,   returnclass = c(\"sf\", \"sp\") )  eulerpole_smallcircles(x, n = 10, returnclass = c(\"sf\", \"sp\"))  eulerpole_greatcircles(x, n = 10, returnclass = c(\"sf\", \"sp\"))  eulerpole_loxodromes(x, n = 10, angle = 45, cw, returnclass = c(\"sf\", \"sp\"))"},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"x data.frame containing coordinates Euler pole lat, lon, rotation angle (optional) type Character string specifying type curves export. Either \"sm\" small circles (default), \"gc\" great circles, \"ld\" loxodromes. n Number equally spaced curves angle Direction loxodromes; default = 45 cw logical. Sense loxodromes: TRUE clockwise loxodromes (right-lateral displaced plate boundaries). FALSE counterclockwise loxodromes (left-lateral displaced plate boundaries). returnclass \"sf\" (default) simple features \"sp\" spatial objects","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"sf SpatialLinesDataFrame","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"Maximum horizontal stress can aligned three types curves related relative plate motion: Small circles Lines constant distance Euler pole. x contains angle, output additionally gives absolute velocity small circle (degree/Myr -> km/Myr). Great circles Paths shortest distance Euler pole antipodal position. Loxodromes Lines constant bearing, .e. curves cutting small circles constant angle.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"","code":"data(\"nuvel1\") euler <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to Pacific plate  eulerpole_smallcircles(euler) #> Simple feature collection with 11 features and 1 field #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 90 #> CRS:           +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 #> # A tibble: 11 × 2 #>    small_circle                                                         geometry #>  *        <dbl>                                                 <LINESTRING [°]> #>  1            0 (-180 -90, -178.2 -90, -176.4 -90, -174.6 -90, -172.8 -90, -171… #>  2          -18 (-180 -72, -178.2 -72, -176.4 -72, -174.6 -72, -172.8 -72, -171… #>  3          -36 (-180 -54, -178.2 -54, -176.4 -54, -174.6 -54, -172.8 -54, -171… #>  4          -54 (-180 -36, -178.2 -36, -176.4 -36, -174.6 -36, -172.8 -36, -171… #>  5          -72 (-180 -18, -178.2 -18, -176.4 -18, -174.6 -18, -172.8 -18, -171… #>  6          -90 (-180 0, -178.2 0, -176.4 0, -174.6 0, -172.8 0, -171 0, -169.2… #>  7           72 (-180 18, -178.2 18, -176.4 18, -174.6 18, -172.8 18, -171 18, … #>  8           54 (-180 36, -178.2 36, -176.4 36, -174.6 36, -172.8 36, -171 36, … #>  9           36 (-180 54, -178.2 54, -176.4 54, -174.6 54, -172.8 54, -171 54, … #> 10           18 (-180 72, -178.2 72, -176.4 72, -174.6 72, -172.8 72, -171 72, … #> 11            0 (-180 90, -178.2 90, -176.4 90, -174.6 90, -172.8 90, -171 90, … eulerpole_greatcircles(euler) #> Simple feature collection with 11 features and 1 field #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 90 #> CRS:           +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 #> # A tibble: 11 × 2 #>    loxodrome                                                            geometry #>  *     <dbl>                                                      <GEOMETRY [°]> #>  1         0 MULTILINESTRING ((180 -90, 180 -89.9, 180 -89.8, 180 -89.7, 180 -8… #>  2        36 LINESTRING (144 -90, 144 -89.9, 144 -89.8, 144 -89.7, 144 -89.6, 1… #>  3        72 LINESTRING (108 -90, 108 -89.9, 108 -89.8, 108 -89.7, 108 -89.6, 1… #>  4       108 LINESTRING (72 -90, 72 -89.9, 72 -89.8, 72 -89.7, 72 -89.6, 72 -89… #>  5       144 LINESTRING (36 -90, 36 -89.9, 36 -89.8, 36 -89.7, 36 -89.6, 36 -89… #>  6         0 LINESTRING (0 -90, 0 -89.9, 0 -89.8, 0 -89.7, 0 -89.6, 0 -89.5, 0 … #>  7        36 LINESTRING (-36 -90, -36 -89.9, -36 -89.8, -36 -89.7, -36 -89.6, -… #>  8        72 LINESTRING (-72 -90, -72 -89.9, -72 -89.8, -72 -89.7, -72 -89.6, -… #>  9       108 LINESTRING (-108 -90, -108 -89.9, -108 -89.8, -108 -89.7, -108 -89… #> 10       144 LINESTRING (-144 -90, -144 -89.9, -144 -89.8, -144 -89.7, -144 -89… #> 11         0 MULTILINESTRING ((-180 -90, -180 -89.9, -180 -89.8, -180 -89.7, -1… eulerpole_loxodromes(x = euler, angle = 45, n = 10, cw = FALSE) #> Simple feature collection with 15 features and 1 field #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -89.80256 xmax: 180 ymax: 89.80256 #> CRS:           +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 #> # A tibble: 15 × 2 #>    loxodrome                                                            geometry #>  *     <dbl>                                                    <LINESTRING [°]> #>  1       108 (162.1974 -89.80256, 162.2681 -89.73185, 162.3389 -89.66114, 162.4… #>  2       144 (126.1974 -89.80256, 126.2681 -89.73185, 126.3389 -89.66114, 126.4… #>  3         0 (90.19744 -89.80256, 90.26815 -89.73185, 90.33886 -89.66114, 90.40… #>  4        36 (54.19744 -89.80256, 54.26815 -89.73185, 54.33886 -89.66114, 54.40… #>  5        72 (18.19744 -89.80256, 18.26815 -89.73185, 18.33886 -89.66114, 18.40… #>  6       108 (-17.80256 -89.80256, -17.73185 -89.73185, -17.66114 -89.66114, -1… #>  7       144 (-53.80256 -89.80256, -53.73185 -89.73185, -53.66114 -89.66114, -5… #>  8         0 (-89.80256 -89.80256, -89.73185 -89.73185, -89.66114 -89.66114, -8… #>  9        36 (-125.8026 -89.80256, -125.7319 -89.73185, -125.6611 -89.66114, -1… #> 10        72 (-161.8026 -89.80256, -161.7319 -89.73185, -161.6611 -89.66114, -1… #> 11       108 (-179.4178 -71.41778, -179.3471 -71.34707, -179.2764 -71.27636, -1… #> 12       144 (-179.3553 -35.35534, -179.2846 -35.28463, -179.2139 -35.21392, -1… #> 13         0 (-180 0, -179.9293 0.07071068, -179.8586 0.1414214, -179.7879 0.21… #> 14        36 (-179.9376 36.06245, -179.8668 36.13316, -179.7961 36.20387, -179.… #> 15        72 (-179.8751 72.12489, -179.8044 72.1956, -179.7337 72.26631, -179.6… eulerpole_loxodromes(x = euler, angle = 30, cw = TRUE) #> Simple feature collection with 13 features and 1 field #> Geometry type: LINESTRING #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -89.20062 xmax: 180 ymax: 89.20062 #> CRS:           +proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0 #> # A tibble: 13 × 2 #>    loxodrome                                                            geometry #>  *     <dbl>                                                    <LINESTRING [°]> #>  1       144 (180 62.35383, 179.95 62.44043, 179.9 62.52703, 179.85 62.61364, 1… #>  2         0 (180 0, 179.95 0.08660254, 179.9 0.1732051, 179.85 0.2598076, 179.… #>  3        36 (180 -62.35383, 179.95 -62.26723, 179.9 -62.18062, 179.85 -62.0940… #>  4        72 (159.5 -89.20062, 159.45 -89.11401, 159.4 -89.02741, 159.35 -88.94… #>  5       108 (123.5 -89.20062, 123.45 -89.11401, 123.4 -89.02741, 123.35 -88.94… #>  6       144 (87.5 -89.20062, 87.45 -89.11401, 87.4 -89.02741, 87.35 -88.94081,… #>  7         0 (51.5 -89.20062, 51.45 -89.11401, 51.4 -89.02741, 51.35 -88.94081,… #>  8        36 (15.5 -89.20062, 15.45 -89.11401, 15.4 -89.02741, 15.35 -88.94081,… #>  9        72 (-20.5 -89.20062, -20.55 -89.11401, -20.6 -89.02741, -20.65 -88.94… #> 10       108 (-56.5 -89.20062, -56.55 -89.11401, -56.6 -89.02741, -56.65 -88.94… #> 11       144 (-92.5 -89.20062, -92.55 -89.11401, -92.6 -89.02741, -92.65 -88.94… #> 12         0 (-128.5 -89.20062, -128.55 -89.11401, -128.6 -89.02741, -128.65 -8… #> 13        36 (-164.5 -89.20062, -164.55 -89.11401, -164.6 -89.02741, -164.65 -8…"},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.html","id":null,"dir":"Reference","previous_headings":"","what":"library(tectonicr) — tectonicr","title":"library(tectonicr) — tectonicr","text":"list documented functions may viewed typing help(package=\"tectonicr\"). details theoretical background provided Wdowinski (1999).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"library(tectonicr) — tectonicr","text":"Wdowinski, S., 1998, theory intraplate tectonics: Journal Geophysical Research: Solid Earth, v. 103, p. 5037-5059, http://dx.doi.org/10.1029/97JB03390.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"library(tectonicr) — tectonicr","text":"Maintainer: Tobias Stephan tobias.stephan1@yahoo.com (ORCID)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/trigon.html","id":null,"dir":"Reference","previous_headings":"","what":"Trigonometric Functions in Degrees — trigon","title":"Trigonometric Functions in Degrees — trigon","text":"Trigonometric functions expecting input degrees, radians.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/trigon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trigonometric Functions in Degrees — trigon","text":"","code":"sind(x)  cosd(x)  tand(x)  asind(x)  acosd(x)  atand(x)  atan2d(x1, x2)"},{"path":"https://tobiste.github.io/tectonicr/reference/trigon.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Trigonometric Functions in Degrees — trigon","text":"pracma::sind(), pracma::cosd(), pracma::tand(), pracma::asind(), pracma::acosd(), pracma::atand(), pracma::atan2d() package \"pracma\".","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/trigon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trigonometric Functions in Degrees — trigon","text":"x, x1, x2 Numeric complex vectors.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/trigon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trigonometric Functions in Degrees — trigon","text":"Returns scalar vector numeric values.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/weighted_circle_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Mean and Statistics on Pi-periodic Data — weighted_circle_stats","title":"Weighted Mean and Statistics on Pi-periodic Data — weighted_circle_stats","text":"Calculate weighted median standard deviation orientation data. Weighting based reciprocal data uncertainties.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/weighted_circle_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Mean and Statistics on Pi-periodic Data — weighted_circle_stats","text":"","code":"circular_weighted_mean(x, w = NULL, na.rm = TRUE)  circular_weighted_var(x, w = NULL, na.rm = TRUE)  circular_weighted_sd(x, w = NULL, na.rm = TRUE)  circular_weighted_median(x, w = NULL, na.rm = TRUE)  circular_weighted_quantiles(x, w = NULL, na.rm = TRUE)  circular_weighted_IQR(x, w = NULL, na.rm = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/weighted_circle_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Mean and Statistics on Pi-periodic Data — weighted_circle_stats","text":"x Data values. vector numeric values degrees, mean, median standard deviation required. w Weights. vector nonnegative numbers, length x. na.rm logical value indicating whether NA values x stripped computation proceeds.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/weighted_circle_stats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Weighted Mean and Statistics on Pi-periodic Data — weighted_circle_stats","text":"Mardia, K.V. (1972). Statistics Directional Data: Probability Mathematical Statistics. London: Academic Press. Ziegler, M. O.; Heidbach O. (2019). Manual Matlab Script Stress2Grid v1.1. (WSM Technical Report; 19-02), GFZ German Research Centre Geosciences. doi:10.2312/wsm.2019.002 Heidbach, O., Tingay, M., Barth, ., Reinecker, J., Kurfeß, D., & Müller, B. (2010). Global crustal stress pattern based World Stress Map database release 2008. Tectonophysics 482, 3–-15, doi:10.1016/j.tecto.2009.07.023","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/weighted_circle_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted Mean and Statistics on Pi-periodic Data — weighted_circle_stats","text":"","code":"x <- c(175, 179, 0, 2, 4) + 90 unc <- c(5, 1, 0.1, 2, 4) circular_weighted_mean(x, 1 / unc) #> [1] 90.0001 circular_weighted_var(x, 1 / unc) #> [1] 1.002809 circular_weighted_sd(x, 1 / unc) #> [1] 1.001404 circular_weighted_median(x, 1 / unc) #> [1] 90 circular_weighted_quantiles(x, 1/unc) #> [1] 85.00000 87.50000 90.00000 90.03279 94.00000 circular_weighted_IQR(x, 1/unc) #> [1] 2.532787"},{"path":"https://tobiste.github.io/tectonicr/reference/wsm2016.html","id":null,"dir":"Reference","previous_headings":"","what":"World Stress Map — wsm2016","title":"World Stress Map — wsm2016","text":"World Stress Map (WSM) global compilation information crustal present-day stress field (Version 2016).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/wsm2016.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"World Stress Map — wsm2016","text":"","code":"data('wsm2016')"},{"path":"https://tobiste.github.io/tectonicr/reference/wsm2016.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"World Stress Map — wsm2016","text":"object class \"data.frame\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/wsm2016.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"World Stress Map — wsm2016","text":"Heidbach, O., M. Rajabi, X. Cui, K. Fuchs, B. Müller, J. Reinecker, K. Reiter, M. Tingay, F. Wenzel, F. Xie, M. O. Ziegler, M.-L. Zoback, M. D. Zoback (2018): World Stress Map database release 2016: Crustal stress pattern across scales. Tectonophysics, 744, 484--498, doi:10.1016/j.tecto.2018.07.007 .","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/wsm2016.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"World Stress Map — wsm2016","text":"","code":"data(\"wsm2016\") head(\"wsm2016\") #> [1] \"wsm2016\""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-01","dir":"Changelog","previous_headings":"","what":"tectonicr 0.1","title":"tectonicr 0.1","text":"new functions rotate stress directions data points PoR coordinate system calculate distance data point plate boundaries Added functions calculate relative plate motions set absolute plate motions different relative plate motions","code":""}]
