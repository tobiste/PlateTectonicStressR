[{"path":[]},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@rstudio.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://tobiste.github.io/tectonicr/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to tectonicr","title":"Contributing to tectonicr","text":"outlines propose change tectonicr. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://tobiste.github.io/tectonicr/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to tectonicr","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://tobiste.github.io/tectonicr/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to tectonicr","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://tobiste.github.io/tectonicr/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to tectonicr","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"tobiste/tectonicr\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://tobiste.github.io/tectonicr/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to tectonicr","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://tobiste.github.io/tectonicr/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to tectonicr","text":"Please note tectonicr project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://tobiste.github.io/tectonicr/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with tectonicr","title":"Getting help with tectonicr","text":"Thanks using tectonicr! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://tobiste.github.io/tectonicr/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with tectonicr","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://tobiste.github.io/tectonicr/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with tectonicr","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://tobiste.github.io/tectonicr/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with tectonicr","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/A_tectonicr.html","id":"theoretical-background","dir":"Articles","previous_headings":"","what":"Theoretical background","title":"1. Introduction to tectonicr","text":"theory intraplate tectonics (Wdowinski 1998) allows calculating first-order intraplate deformation induced horizontal displacement deformable plate boundaries (Stephan et al., 2023). based empirical link directions relative plate motion displacement deformation fields within plate interior adjacent three types deformable plate boundaries: inward-, outward-, tangential-displaced boundaries. model predicts direction intraplate displacement, displacement rate, strain, stress fields terms small circles, great circles, 45\\(^{\\circ}\\) loxodromes around pole rotation two adjacent plates. According theory, principal axis maximum horizontal stress follows small circles inward-displaced boundaries, great circles outward-displaced boundaries, loxodromes tangential-displaced boundaries. theory assumes first-order intraplate deformation predominantly induced horizontal forces acting plate boundaries buoyancy forces arise lateral density variations mid-ocean ridges plate interiors (ridge push).","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/A_tectonicr.html","id":"inward-outward-and-tangential-displaced-boundaries","dir":"Articles","previous_headings":"Theoretical background","what":"Inward, Outward and Tangential Displaced Boundaries","title":"1. Introduction to tectonicr","text":"Inward-moving plate boundaries induce compressional horizontal tractions plate boundary towards plate’s interior along direction relative plate motion. compressional tractions produced forces related subduction, collision, ridge-push. Thus, stresses across convergent plate boundaries characterized dominance thrusting strike-slip faulting (\\(\\sigma_1 \\approx \\sigma_{Hmax}\\)) \\(\\sigma_{Hmax}\\) (maximum horizontal stress) trending parallel plate convergence, .e. parallel small circles around pole relative plate motion (pole rotation, PoR). Outward moving plate boundaries produce tensional tractions displacements directed away plate interior. Along spreading ridges intracontinental rifting stresses dominated normal faulting (\\(\\sigma_1 \\approx \\sigma_{vertical}\\), \\(\\sigma_2 \\approx \\sigma_{Hmax}\\)) \\(\\sigma_{Hmax}\\) trending perpendicular plate motion trajectories (.e. along great circles). case intracontinental setting, stresses displacements may associated slab-retreat, back-arc extension, release excess gravitational potential energy stored thickened crust , e.g., gravitational collapse. Along transform boundaries (tangential displaced boundaries), two neighboring plates exert shear tractions tangential orientation boundary (Forsyth Uyeda, 1975). Faulting displacement adjacent plate boundaries characterized strike-slip parallel plate motion, thus, principal axes maximum minimum stress orientated angle c. 45\\(^{\\circ}\\) plate motion trajectory. Geometrically, \\(\\sigma_{Hmax}\\) direction follows along 45\\(^{\\circ}\\) loxodromes (lines constant bearing) diverge —depending sense transform boundary— clockwise counterclockwise relative PoR intersect small great circles angle 45\\(^{\\circ}\\).","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/A_tectonicr.html","id":"theoretical-direction-of-horizontal-stress-and-deviation-from-the-measured-stress","dir":"Articles","previous_headings":"","what":"Theoretical direction of Horizontal Stress and Deviation From the Measured Stress","title":"1. Introduction to tectonicr","text":"Trajectories theoretical directions can modeled following steps: First, load package: Next, need specify coordinates Pole Rotation (PoR) get directions great circles, small circles, loxodromes around PoR given point (e.g. 45\\(^{\\circ}\\)N/20\\(^{\\circ}\\)E). example, PoR coordinates: 90\\(^{\\circ}\\)N/0\\(^{\\circ}\\)E. \\(\\sigma_{Hmax}\\) following great small circles loxodromes geometries can modeled model_shmax(): observed stress direction point, e.g. azimuth \\(\\sigma_{Hmax}\\) 90\\(^{\\circ}\\), deviation modeled stress directions can calculated deviation_shmax():","code":"library(tectonicr) library(ggplot2) # load ggplot library # Example: point <- data.frame(lat = 45, lon = 20) por <- data.frame(lat = 90, lon = 0) model <- model_shmax(point, por) print(model) #>   sc ld.ccw gc ld.cw #> 1 90    135  0    45 deviation <- deviation_shmax(model, 90) print(deviation) #>   dev.gc dev.sc dev.ld.cw dev.ld.ccw #> 1    -90      0       -45         45"},{"path":"https://tobiste.github.io/tectonicr/articles/A_tectonicr.html","id":"quantitative-comparison-between-predicted-and-observed-maximum-horizontal-stress","dir":"Articles","previous_headings":"","what":"Quantitative Comparison Between Predicted and Observed Maximum Horizontal Stress","title":"1. Introduction to tectonicr","text":"normalized \\(\\chi^2\\) test quantitatively compares predicted (model_shmax()) observed \\(\\sigma_{Hmax}\\) azimuth relative reported \\(\\sigma\\) standard deviation (Wdowinski 1998). normalized \\(\\chi^2\\) test yields number range 0-1 indicates quality fit. Low values normalized \\(\\chi^2\\) test (\\(\\leq\\) 0.15 indicate good agreement predicted observed directions. High values (\\(>\\) 0.7) indicate systematic misfit predicted observed directions 90\\(^{\\circ}\\). Random distribution \\(\\sigma_{Hmax}\\) directions results Norm \\(\\chi^2 = 0.33\\) test can run using norm_chisq(obs, prd, unc). obs numeric vector observed \\(\\sigma_{Hmax}\\); prd vector predicted \\(\\sigma_{Hmax}\\) (vector must length obs); unc uncertainty observed \\(\\sigma_{Hmax}\\) (either numeric vector length obs number).","code":"data(\"nuvel1\") # import example data set for Euler rotations por <- subset(   nuvel1, nuvel1$plate.rot == \"na\" ) # North America relative to Pacific plate point <- data.frame(lat = 45, lon = 20)  prd <- model_shmax(point, por) norm_chisq(obs = 90, prd$sc, unc = 10) #> [1] 0.2790849"},{"path":"https://tobiste.github.io/tectonicr/articles/A_tectonicr.html","id":"models-of-current-plate-motion","dir":"Articles","previous_headings":"","what":"Models of current plate motion","title":"1. Introduction to tectonicr","text":"plate motions relative Pacific plate according NUVEL-1A model (DeMets et al. 1990) included package can imported : current plate motion models, particulars NNR-MORVEL-56, GSRM2.1, REVEL, PB2002, HS3-NUVEL1A, available desired relative plate motion can extracted via following:","code":"data(\"nuvel1\") head(nuvel1) data(\"cpm_models\") head(cpm_models) gsrm <- subset(cpm_models, model == \"GSRM2.1\") equivalent_rotation(gsrm, rot = \"na\", fixed = \"eu\")"},{"path":"https://tobiste.github.io/tectonicr/articles/A_tectonicr.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"1. Introduction to tectonicr","text":"DeMets, C., R. G. Gordon, D. F. Argus, S. Stein. 1990. “Current Plate Motions” Geophysical Journal International 101 (2): 425–78. doi: 10.1111/j.1365-246x.1990.tb06579.x Forsyth, D., S. Uyeda. 1975. “Relative Importance Driving Forces Plate Motion” Geophysical Journal International 43 (1): 163–200. doi: 10.1111/j.1365-246x.1975.tb00631.x Stephan, T., Enkelmann, E., Kroner, U. (2023). “Analyzing horizontal orientation crustal stress adjacent plate boundaries” Scientific Reports (13), 15590. doi:[10.1038/s41598-023-42433-2](https://doi.org/10.1038/s41598-023-42433-2) Wdowinski, Shimon. 1998. “Theory Intraplate Tectonics” Journal Geophysical Research: Solid Earth 103 (B3): 5037–59. doi: 10.1029/97jb03390.","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/B_datasets.html","id":"larger-data-sets","dir":"Articles","previous_headings":"","what":"Larger Data Sets","title":"2. Handling large datasets","text":"tectonicr also handles larger data sets. subset World Stress Map data compilation (Heidbach et al. 2016) included example data set can imported : Modeling stress directions (wrt. geographic North pole) using Pole Oration (PoR) motion North America relative Pacific Pate. test dataset right-laterally tangential displacement type. Combine model results coordinates observed data","code":"data(\"san_andreas\") head(san_andreas) #> Simple feature collection with 6 features and 9 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -119.966 ymin: 32.94 xmax: -115.627 ymax: 35.714 #> Geodetic CRS:  WGS 84 #> # A tibble: 6 × 10 #>   id         lat   lon   azi   unc type  depth quality regime #>   <chr>    <dbl> <dbl> <dbl> <dbl> <chr> <dbl> <fct>   <chr>  #> 1 wsm07786  35.7 -120.    36     1 HF      1.3 A       S      #> 2 wsm11750  32.9 -116.     7     1 FMF     7   A       S      #> 3 wsm11759  33.0 -116.   169     1 FMF     5   A       S      #> 4 wsm11782  33.2 -116.     1     1 FMF     8   A       S      #> 5 wsm11801  33.9 -116.    23     1 FMF     6   A       S      #> 6 wsm11830  33.5 -116.   160     1 FMF     9   A       S      #> # ℹ 1 more variable: geometry <POINT [°]> data(\"nuvel1\") por <- subset(nuvel1, nuvel1$plate.rot == \"na\") san_andreas.prd <- PoR_shmax(san_andreas, por, type = \"right\") san_andreas.res <- data.frame(   sf::st_drop_geometry(san_andreas),   san_andreas.prd )"},{"path":"https://tobiste.github.io/tectonicr/articles/B_datasets.html","id":"stress-map","dir":"Articles","previous_headings":"","what":"Stress map","title":"2. Handling large datasets","text":"ggplot2::ggplot() can used visualize results. orientation axis can displayed function geom_spoke(). position argument position = \"center_spoke\" aligns marker symbol center point. deviation can color coded. deviation_norm() yields normalized value deviation, .e. absolute values 0 90\\(^{\\circ}\\). Also included plate boundary geometries Bird (2003): Alternatively, also NUVEL1 plate boundary model DeMets et al. (1990) stored data(\"nuvel1_plates\"). First create predicted trajectories \\(\\sigma_{Hmax}\\) (details Article 3.): initialize plot map… …add \\(\\sigma_{Hmax}\\) trajectories data points:  map shows generally low deviation observed \\(\\sigma_{Hmax}\\) directions modeled stress direction using counter-clockwise 45\\(^{\\circ}\\) loxodromes. normalized \\(\\chi^2\\) test quantifies fit modeled \\(\\sigma_{Hmax}\\) direction observed stress direction considering reported uncertainties measurement. value \\(\\leq\\) 0.15, indicating significantly good fit model. Thus, traction transform plate boundary explain stress direction area.","code":"data(\"plates\") # load plate boundary data set trajectories <- eulerpole_loxodromes(por, 40, cw = FALSE) map <- ggplot() +   geom_sf(     data = plates,     color = \"red\",     lwd = 2,     alpha = .5   ) +   scale_color_continuous(     type = \"viridis\",     limits = c(0, 90),     name = \"|Deviation| in (\\u00B0)\",     breaks = seq(0, 90, 22.5)   ) +   scale_alpha_discrete(name = \"Quality rank\", range = c(1, 0.4)) map +   geom_sf(     data = trajectories,     lty = 2   ) +   geom_spoke(     data = san_andreas.res,     aes(       x = lon,       y = lat,       angle = deg2rad(90 - azi),       color = deviation_norm(dev),       alpha = quality     ),     radius = 1,     position = \"center_spoke\",     na.rm = TRUE   ) +   coord_sf(     xlim = range(san_andreas$lon),     ylim = range(san_andreas$lat)   ) norm_chisq(   obs = san_andreas.res$azi.PoR,   prd = 135,   unc = san_andreas.res$unc ) #> [1] 0.03296388"},{"path":"https://tobiste.github.io/tectonicr/articles/B_datasets.html","id":"variation-of-the-direction-of-the-maximum-horizontal-stress-wrt--to-the-distance-to-the-plate-boundary","dir":"Articles","previous_headings":"","what":"Variation of the Direction of the Maximum Horizontal Stress wrt. to the Distance to the Plate Boundary","title":"2. Handling large datasets","text":"direction maximum horizontal stress correlates plate motion direction plate boundary zone. Towards plate interior, plate boundary forces become weaker stress sources probably dominate. visualize variation \\(\\sigma_{Hmax}\\) wrt. distance plate boundary, need transfer direction \\(\\sigma_{Hmax}\\) geographic reference system (.e. azimuth deviation direction geographic North pole) Pole Rotation (PoR) reference system (.e. azimuth deviation PoR). PoR coordinate reference system oblique transformation geographical coordinate system PoR coordinates translation factors. azimuth PoR reference system \\(\\alpha_{PoR}\\) angular difference azimuth geographic reference system \\(\\alpha_{geo}\\) (initial) bearing great circle passes data point PoR \\(\\theta\\). calculate distance plate boundary, plate boundary geometries data points (geographical coordinates) transformed PoR reference system. PoR system, distance latitudinal longitudinal difference data points inward/outward tangential moving plate boundaries, respectively. done function distance_from_pb(), returns angular distances. Finally, visualize \\(\\sigma_{Hmax}\\) direction wrt. distance plate boundary:  Adding rolling statistics (e.g. weighted mean 95% confidence interval) transformed azimuth:  Close dextral plate boundary, majority stress data strike-slip fault regime oriented around 135\\(^{\\circ}\\) wrt. PoR. Thus, date parallel predicted stress sourced right-lateral displaced plate boundary. Away plate boundary, data becomes noisy. azimuth (PoR) vs. distance plot also allows identify whether less known plate boundary represents inward, outward, tangential displaced boundary. relationship azimuth distance can better visualized using deviation (normalized data precision) predicted stress direction, .e. normalized \\(\\chi^2\\):  can see data fact starts scatter notably beyond distance 3.8\\(^{\\circ}\\) becomes random 7\\(^{\\circ}\\) away plate boundary. Thus, North American-Pacific plate boundary zone San Andreas Fault approx. 4–7\\(^{\\circ}\\) (ca. 380–750 km) wide. normalized \\(\\chi^2\\) vs. distance plot allows specify width plate boundary zone.","code":"plate_boundary <- subset(plates, plates$pair == \"na-pa\") san_andreas.res$distance <-   distance_from_pb(     x = san_andreas,     PoR = por,     pb = plate_boundary,     tangential = TRUE   ) azi_plot <- ggplot(san_andreas.res, aes(x = distance, y = azi.PoR)) +   coord_cartesian(ylim = c(0, 180)) +   labs(x = \"Distance from plate boundary (\\u00B0)\", y = \"Azimuth in PoR (\\u00B0)\") +   geom_hline(yintercept = c(0, 45, 90, 135, 180), lty = 3) +   geom_pointrange(     aes(       ymin = azi.PoR - unc, ymax = azi.PoR + unc,       color = san_andreas$regime, alpha = san_andreas$quality     ),     size = .25   ) +   scale_y_continuous(     breaks = seq(-180, 360, 45),     sec.axis = sec_axis(       ~.,       name = NULL,       breaks = c(0, 45, 90, 135, 180),       labels = c(\"Outward\", \"Tan (L)\", \"Inward\", \"Tan (R)\", \"Outward\")     )   ) +   scale_alpha_discrete(name = \"Quality rank\", range = c(1, 0.1)) +   scale_color_manual(name = \"Tectonic regime\", values = stress_colors(), breaks = names(stress_colors())) print(azi_plot) san_andreas.res_roll <- san_andreas.res[order(san_andreas.res$distance), ]  san_andreas.res_roll$r_mean <- roll_circstats(   san_andreas.res_roll$azi.PoR,   w = 1 / san_andreas.res_roll$unc,   FUN = circular_mean, width = 51 )  san_andreas.res_roll$r_conf95 <- roll_confidence(   san_andreas.res_roll$azi.PoR,   w = 1 / san_andreas.res_roll$unc,   width = 51 )  azi_plot +   geom_step(     data = san_andreas.res_roll,     aes(distance, r_mean - r_conf95),     lty = 2   ) +   geom_step(     data = san_andreas.res_roll,     aes(distance, r_mean + r_conf95),     lty = 2   ) +   geom_step(     data = san_andreas.res_roll,     aes(distance, r_mean)   ) # Rolling norm chisq: san_andreas.res_roll$roll_nchisq <- roll_normchisq(   san_andreas.res_roll$azi.PoR,   san_andreas.res_roll$prd,   san_andreas.res_roll$unc,   width = 51 )  # plotting: ggplot(san_andreas.res, aes(x = distance, y = nchisq)) +   coord_cartesian(ylim = c(0, 1)) +   labs(x = \"Distance from plate boundary (\\u00B0)\", y = expression(Norm ~ chi^2)) +   geom_hline(yintercept = c(0.15, .33, .7), lty = 3) +   geom_point(aes(color = san_andreas$regime)) +   scale_y_continuous(sec.axis = sec_axis(     ~.,     name = NULL,     breaks = c(.15 / 2, .33, .7 + 0.15),     labels = c(\"Good fit\", \"Random\", \"Systematic\\nmisfit\")   )) +   scale_color_manual(name = \"Tectonic regime\", values = stress_colors(), breaks = names(stress_colors())) +   geom_step(     data = san_andreas.res_roll,     aes(distance, roll_nchisq)   )"},{"path":"https://tobiste.github.io/tectonicr/articles/B_datasets.html","id":"r-base-plots-for-quick-analysis","dir":"Articles","previous_headings":"","what":"R base plots for quick analysis","title":"2. Handling large datasets","text":"data deviation map can also build using base R’s plotting engine:  quick analysis results can obtained stress_analysis() returns list. transformed coordinates azimuths well deviations can viewed : Statistical parameters describing distribution transformed azimuths can displayed Statistical test results shown … associated plots can displayed setting plot = TRUE:","code":"# Setup the colors for the deviation cols <- tectonicr.colors(   deviation_norm(san_andreas.res$dev),   categorical = FALSE )  # Setup the legend col.legend <- data.frame(col = cols, val = names(cols)) |>   dplyr::mutate(val2 = gsub(\"\\\\(\", \"\", val), val2 = gsub(\"\\\\[\", \"\", val2)) |>   unique() |>   dplyr::arrange(val2)  # Initialize the plot plot(   san_andreas$lon, san_andreas$lat,   cex = 0,   xlab = \"PoR longitude\", ylab = \"PoR latitude\",   asp = 1 )  # Plot the axis and colors axes(   san_andreas$lon, san_andreas$lat, san_andreas$azi,   col = cols, add = TRUE )  # Plot the plate boundary plot(sf::st_geometry(plates), col = \"red\", lwd = 2, add = TRUE)  # Plot the trajectories plot(sf::st_geometry(trajectories), add = TRUE, lty = 2)  # Create the legend graphics::legend(   \"bottomleft\",   title = \"|Deviation| in (\\u00B0)\",   inset = .05, cex = .75,   legend = col.legend$val, fill = col.legend$col ) results <- stress_analysis(san_andreas, por, \"right\", plate_boundary, plot = FALSE) #> Reject Null Hypothesis head(results$result) #>    azi.PoR prd        dev       nchisq       cdist  lat.PoR   lon.PoR #> 1 162.2848 135  27.284805 0.0919087122 0.210143277 56.93219 -82.67182 #> 2 137.7446 135   2.744584 0.0009299678 0.002292849 58.01202 -74.48278 #> 3 119.5840 135 -15.416011 0.0293399256 0.070663207 57.93239 -74.80319 #> 4 131.1908 135  -3.809243 0.0017913992 0.004413592 57.83707 -75.51138 #> 5 152.3277 135  17.327717 0.0370678728 0.088706703 58.17336 -76.62093 #> 6 109.7786 135 -25.221400 0.0785332091 0.181575875 57.84485 -76.16849 #>      distance #> 1 -0.15965337 #> 2  0.08688785 #> 3  0.14986772 #> 4  0.38296977 #> 5 -0.04424539 #> 6  0.33684309 results$stats #>                    [,1] #> mean       138.89370624 #> sd          37.12227404 #> var          0.18932742 #> dispersion   0.09840187 #> conf95       4.97276197 #> norm_chisq   0.03296388 results$test #> $statistic #> [1] 0.8031963 #>  #> $p.value #> [1] 3.607527e-47 stress_analysis(san_andreas, por, \"right\", plate_boundary, plot = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/articles/B_datasets.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"2. Handling large datasets","text":"Bird, Peter. 2003. “Updated Digital Model Plate Boundaries” Geochemistry, Geophysics, Geosystems 4 (3). doi: 10.1029/2001gc000252. DeMets, C., R. G. Gordon, D. F. Argus, S. Stein. 1990. “Current Plate Motions” Geophysical Journal International 101 (2): 425–78. doi: 10.1111/j.1365-246x.1990.tb06579.x. Heidbach, Oliver, Mojtaba Rajabi, Karsten Reiter, Moritz Ziegler, WSM Team. 2016. “World Stress Map Database Release 2016. V. 1.1.” GFZ Data Services. doi: 10.5880/WSM.2016.001.","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/C_stress_trajectories.html","id":"equivalent-rotations","dir":"Articles","previous_headings":"","what":"Equivalent rotations","title":"3. Plotting trajectories of theoretic stress directions","text":"Relative plate motions set (global) plate motions can retrieved transforming set Euler rotations parameters equivalent rotations. NUVEL1 data set offers global plate motions relative Pacific plate (DeMets et al. 1990). order extract plate motions two plates (e.g. plates relative Eurasia), one transform rotations new, equivalent reference system (.e. rotation respect (wrt.) Eurasia). tectonicr can done equivalent_rotation(): Alternatively, PB2002 model Bird (2003) also provided ready-use example dataset global plate motions.","code":"data(\"nuvel1\") nuvel1.eu <- equivalent_rotation(nuvel1, fixed = \"eu\") head(nuvel1.eu) #>    plate.rot       lat        lon      angle plate.fix #> af        af  21.22431  -20.25390 0.12839397        eu #> an        an  37.85378   77.54263 0.05402503        eu #> ar        ar  24.77897   14.14654 0.51993229        eu #> au        au  15.28437   40.87794 0.71935116        eu #> ca        ca -50.85213  -50.33611 0.12128773        eu #> co        co  19.84642 -115.85295 1.36455727        eu data(\"pb2002\") pb2002.eu <- equivalent_rotation(pb2002, fixed = \"eu\") head(pb2002.eu) #>    plate.rot       lat       lon      angle plate.fix #> af        af  21.21561 -20.26957 0.12277039        eu #> am        am  22.31703 -73.10293 0.09095410        eu #> an        an  37.88026  77.51306 0.05166503        eu #> ap        ap -34.90145 -75.14215 0.42687654        eu #> ar        ar  28.26668  11.83784 0.53270842        eu #> as        as -27.83397  95.48900 0.27101254        eu"},{"path":"https://tobiste.github.io/tectonicr/articles/C_stress_trajectories.html","id":"plotting-pole-of-rotation-grids","dir":"Articles","previous_headings":"","what":"Plotting Pole of Rotation Grids","title":"3. Plotting trajectories of theoretic stress directions","text":"visualize theoretical trajectories direction \\(\\sigma_{Hmax}\\) (great circles, small circles, loxodomes), need transform locations geographical coordinate system PoR coordinate system. transformations done function functions geographical_to_PoR() PoR_to_geographical(). base functions eulerpole_smallcircles(), eulerpole_greatcircles(), eulerpole_loxodromes() allow draw theoretical trajectories geographical coordinates.","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/C_stress_trajectories.html","id":"small-circles","dir":"Articles","previous_headings":"Plotting Pole of Rotation Grids","what":"Small Circles","title":"3. Plotting trajectories of theoretic stress directions","text":"Function eulerpole_smallcircles(x, gridsize) returns small circles simple feature(sf) giving data.frame PoR coordinates lat lon (x) number small circles (n). example small circles around pole relative motion Indian plate relative Eurasian plate (transformed NUVEL1 model). returnclass option eulerpole_smallcircles() provides output types \"sf\" (simple feature) \"sp\" (Spatial* object) small circles. eventually plot small circles ggplot, recommend extract sf feature plot geom_sf():","code":"por <-   subset(nuvel1.eu, nuvel1$plate.rot == \"in\") # India relative to Eurasia por.sm <- eulerpole_smallcircles(por) data(\"plates\") # load plate boundary data set # world <- rnaturalearth::ne_countries(scale = \"small\", returnclass = \"sf\")  ggplot() +   # geom_sf(data = world, alpha = .5) +   geom_sf(     data = plates,     color = \"red\",     alpha = .5   ) +   labs(title = \"India relative to Eurasia\", subtitle = \"source: NUVEL1\") +   geom_sf(     data = por.sm,     aes(lty = \"small circles\"),     color = \"darkblue\", fill = NA,     alpha = .5   ) +   geom_point(     data = por,     aes(lon, lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   geom_point(     data = euler,     aes(lon + 180, -lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   coord_sf(default_crs = \"WGS84\", crs = sf::st_crs(\"ESRI:54030\"))"},{"path":"https://tobiste.github.io/tectonicr/articles/C_stress_trajectories.html","id":"great-circles","dir":"Articles","previous_headings":"Plotting Pole of Rotation Grids","what":"Great Circles","title":"3. Plotting trajectories of theoretic stress directions","text":"Great circles lines cut small circles 90\\(^{\\circ}\\) PoR. Function eulerpole_greatcircles(x, n) returns great circles sf object giving data.frame Pole Rotation (PoR) coordinates lat lon (x) number great circles n, great circle angles (360/d).","code":"por.gm <- eulerpole_greatcircles(por)  ggplot() +   # geom_sf(data = world, alpha = .5) +   geom_sf(     data = plates,     color = \"red\",     alpha = .5   ) +   labs(title = \"India relative to Eurasia\", subtitle = \"source: NUVEL1\") +   geom_sf(     data = por.sm,     aes(lty = \"small circles\"),     color = \"darkblue\",     alpha = .5   ) +   geom_sf(     data = por.gm,     aes(lty = \"great circles\"),     color = \"darkblue\"   ) +   geom_point(     data = por,     aes(lon, lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   geom_point(     data = por,     aes(lon + 180, -lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   coord_sf(default_crs = \"WGS84\", crs = sf::st_crs(\"ESRI:54030\"))"},{"path":"https://tobiste.github.io/tectonicr/articles/C_stress_trajectories.html","id":"loxodromes","dir":"Articles","previous_headings":"Plotting Pole of Rotation Grids","what":"Loxodromes","title":"3. Plotting trajectories of theoretic stress directions","text":"Loxodrome (also called Rhumb Line) curve cutting small circles constant angle. Thus, small great circles 0\\(^{\\circ}\\) 90\\(^{\\circ}\\) loxodromes, respectively. Function eulerpole_loxodromes(x, n) returns loxodromes sf object giving data.frame PoR coordinates lat lon (x) angle loxodromes, direction, sense.","code":"por.ld <- eulerpole_loxodromes(x = por, angle = 45, n = 10, cw = TRUE)  ggplot() +   labs(title = \"India relative to Eurasia\", subtitle = \"source: NUVEL1\") +   # geom_sf(data = world, alpha = .5) +   geom_sf(     data = plates,     color = \"red\",     alpha = .5   ) +   geom_sf(     data = por.sm,     aes(lty = \"small circles\"),     color = \"darkblue\",     alpha = .5   ) +   geom_sf(     data = por.ld,     aes(lty = \"clockwise loxodromes\"),     color = \"darkblue\"   ) +   geom_point(     data = por,     aes(lon, lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   geom_point(     data = por,     aes(lon + 180, -lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   coord_sf(default_crs = \"WGS84\", crs = sf::st_crs(\"ESRI:54030\"))"},{"path":"https://tobiste.github.io/tectonicr/articles/C_stress_trajectories.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"3. Plotting trajectories of theoretic stress directions","text":"Bird, Peter. 2003. “Updated Digital Model Plate Boundaries” Geochemistry, Geophysics, Geosystems 4 (3). doi: 10.1029/2001gc000252. DeMets, C., R. G. Gordon, D. F. Argus, S. Stein. 1990. “Current Plate Motions” Geophysical Journal International 101 (2): 425–78. doi: 10.1111/j.1365-246x.1990.tb06579.x.","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/D_statistics.html","id":"mean-direction","dir":"Articles","previous_headings":"","what":"Mean direction","title":"4. Circular statistics","text":"Directional data \\(\\pi\\)-periodical. Thus, calculation mean, average 35 355\\(^{\\circ}\\) 15 instead 195\\(^{\\circ}\\). tectonicr provides circular mean (circular_mean()) quasi-median (circular_median()) metrics describe average direction:","code":"data(\"san_andreas\") circular_mean(san_andreas$azi) #> [1] 10.66086 circular_median(san_andreas$azi) #> [1] 36"},{"path":"https://tobiste.github.io/tectonicr/articles/D_statistics.html","id":"quality-weighted-mean-direction","dir":"Articles","previous_headings":"","what":"Quality weighted mean direction","title":"4. Circular statistics","text":"stress data heteroscedastic, data less precise direction less impact final mean direction weighted mean quasi-median uses reported measurements weighted inverse uncertainties: spread directional data can expressed standard deviation (mean) quasi-interquartile range (median):","code":"circular_mean(san_andreas$azi, 1 / san_andreas$unc) #> [1] 9.971235 circular_median(san_andreas$azi, 1 / san_andreas$unc) #> [1] 36 circular_sd(san_andreas$azi, 1 / san_andreas$unc) # standard deviation #> [1] 38.43917 circular_IQR(san_andreas$azi, 1 / san_andreas$unc) # interquartile range #> [1] 33.10713"},{"path":"https://tobiste.github.io/tectonicr/articles/D_statistics.html","id":"statistics-in-the-pole-of-rotation-por-reference-frame","dir":"Articles","previous_headings":"","what":"Statistics in the Pole of Rotation (PoR) reference frame","title":"4. Circular statistics","text":"\\(\\sigma_{SHmax}\\) orientations subjected angular distortions geographical coordinate system, recommended express statistical parameters using transformed orientations PoR reference frame.","code":"data(\"cpm_models\") por <- subset(cpm_models, model == \"NNR-MORVEL56\") |>   equivalent_rotation(\"na\", \"pa\") san_andreas.por <- PoR_shmax(san_andreas, por, type = \"right\") circular_mean(san_andreas.por$azi.PoR, 1 / san_andreas$unc) #> [1] 137.9861 circular_sd(san_andreas.por$azi.PoR, 1 / san_andreas$unc) #> [1] 37.30334  circular_median(san_andreas.por$azi.PoR, 1 / san_andreas$unc) #> [1] 135.5753 circular_IQR(san_andreas.por$azi.PoR, 1 / san_andreas$unc) #> [1] 25.82388"},{"path":"https://tobiste.github.io/tectonicr/articles/D_statistics.html","id":"rose-diagram","dir":"Articles","previous_headings":"","what":"Rose diagram","title":"4. Circular statistics","text":"tectonicr provides rose diagram, .e. histogram angular data.","code":"rose(san_andreas$azi, weights = 1 / san_andreas$unc, col = \"grey\", main = \"North pole\") rose(san_andreas.por$azi, weights = 1 / san_andreas$unc, col = \"grey\", main = \"PoR\") rose_line(135, radius = 1.1, col = \"#009E73\") # show the predicted direction"},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/articles/D_statistics.html","id":"test-for-random-distribution","dir":"Articles","previous_headings":"Statistical tests","what":"Test for random distribution","title":"4. Circular statistics","text":"Uniformly distributed orientation can described von Mises distribution (Mardia Jupp, 1999). directions distributed randomly can tested Rayleigh Test: , test rejects Null Hypothesis (statistic > p.value). Thus \\(\\sigma_{SHmax}\\) directions preferred orientation. Alternative statistical tests circular uniformity kuiper_test() watson_test(). Read help() details…","code":"rayleigh_test(san_andreas.por$azi.PoR) #> Reject Null Hypothesis #> $statistic #> [1] 0.7165417 #>  #> $p.value #> [1] 5.430805e-242 #>  #> $p.value2 #> [1] 7.551614e-273"},{"path":"https://tobiste.github.io/tectonicr/articles/D_statistics.html","id":"test-for-goodness-of-fit","dir":"Articles","previous_headings":"","what":"Test for goodness-of-fit","title":"4. Circular statistics","text":"Assuming von Mises Distribution (circular normal distribution) orientation data, \\((1-\\alpha \\%)/100\\) confidence interval can calculated (Mardia Jupp, 1999): prediction \\(\\sigma_{SHmax}\\) orientation \\(135^{\\circ}\\). Since prediction lies within confidence interval, can concluded 95% confidence orientations follow predicted trend \\(\\sigma_{SHmax}\\). (weighted) circular dispersion orientation angles around prediction can measured : value dispersion ranges 0 2. standard error confidence interval calculated circular dispersion can estimated bootstrapping via: statistical test goodness--fit (weighted) Rayleigh Test: Null Hypothesis rejected, alternative, distribution around prediction, excluded.","code":"confidence_interval(san_andreas.por$azi.PoR, conf.level = 0.95, w = 1 / san_andreas$unc) #> $mu #> [1] 137.9861 #>  #> $conf.angle #> [1] 4.940328 #>  #> $conf.interval #> [1] 133.0458 142.9264 circular_dispersion(san_andreas.por$azi.PoR, y = 135, w = 1 / san_andreas$unc) #> [1] 0.09769022 circular_dispersion_boot(san_andreas.por$azi.PoR, y = 135, w = 1 / san_andreas$unc, R = 1000) #> $MLE #> [1] 0.1912592 #>  #> $sde #> [1] 0.009814642 #>  #> $CI #> [1] 0.1720416 0.2099062 weighted_rayleigh(san_andreas.por$azi.PoR, prd = 135, unc = san_andreas$unc) #> Reject Null Hypothesis #> $statistic #> [1] 0.8046196 #>  #> $p.value #> [1] 2.491718e-47"},{"path":"https://tobiste.github.io/tectonicr/articles/D_statistics.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"4. Circular statistics","text":"Mardia, K. V., Jupp, P. E. (Eds.). (1999). “Directional Statistics” Hoboken, NJ, USA: John Wiley & Sons, Inc.  doi: 10.1002/9780470316979. Ziegler, Moritz O., Oliver Heidbach. 2017. “Manual Matlab Script Stress2Grid” GFZ German Research Centre Geosciences; World Stress Map Technical Report 17-02. doi: 10.5880/wsm.2017.002.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/articles/E_interpolation.html","id":"geographic-coordinate-system","dir":"Articles","previous_headings":"Interpolation","what":"Geographic coordinate system","title":"5. Spatial interpolation","text":"Spatial interpolation stress data based aforementioned metrics (algorithm modified version MATLAB script ‘stress2grid’ Ziegler Heidbach (2017). default settings apply quality inverse distance weighting mean, well 25% cut-standard deviation. data can now visualized:","code":"mean_SH <- stress2grid(san_andreas, gridsize = 1, R_range = seq(50, 350, 100)) trajectories <- eulerpole_loxodromes(x = por, n = 40, cw = FALSE)  ggplot(mean_SH) +   geom_sf(data = trajectories, lty = 2) +   geom_spoke(data = san_andreas, aes(lon, lat, angle = deg2rad(90 - azi)), radius = .5, color = \"grey30\", position = \"center_spoke\") +   geom_spoke(aes(lon, lat, angle = deg2rad(90 - azi), alpha = sd, color = mdr), radius = 1, position = \"center_spoke\", lwd = 1) +   coord_sf(xlim = range(san_andreas$lon), ylim = range(san_andreas$lat)) +   scale_alpha(name = \"Standard deviation\", range = c(1, .25)) +   scale_color_viridis_c(     \"Wavelength\\n(R-normalized mean distance)\",     limits = c(0, 1),     breaks = seq(0, 1, .25)   ) +   facet_wrap(~R)"},{"path":"https://tobiste.github.io/tectonicr/articles/E_interpolation.html","id":"por-coordinate-system","dir":"Articles","previous_headings":"Interpolation","what":"PoR coordinate system","title":"5. Spatial interpolation","text":"interpolated direction far apart data points suffer distortions due underlying projection. order prevent effects, interpolation can done PoR reference frame direction stays constant matter distance data points. Assuming stress field sourced plate boundary force, model-based interpolation allows reliable results areas close plate boundaries.","code":"mean_SH_PoR <- PoR_stress2grid(san_andreas, PoR = por, gridsize = 1, R_range = seq(50, 350, 100)) ggplot(mean_SH_PoR) +   geom_sf(data = trajectories, lty = 2) +   geom_spoke(data = san_andreas, aes(lon, lat, angle = deg2rad(90 - azi)), radius = .5, color = \"grey30\", position = \"center_spoke\") +   geom_spoke(aes(lon, lat, angle = deg2rad(90 - azi), alpha = sd, color = mdr), radius = 1, position = \"center_spoke\", lwd = 1) +   coord_sf(xlim = range(san_andreas$lon), ylim = range(san_andreas$lat)) +   scale_alpha(name = \"Standard deviation\", range = c(1, .25)) +   scale_color_viridis_c(     \"Wavelength\\n(R-normalized mean distance)\",     limits = c(0, 1),     breaks = seq(0, 1, .25)   ) +   facet_wrap(~R)"},{"path":"https://tobiste.github.io/tectonicr/articles/E_interpolation.html","id":"rasterize-the-interpolation","dir":"Articles","previous_headings":"","what":"Rasterize the interpolation","title":"5. Spatial interpolation","text":"function compact_grid() selects data minimum search radius interpolated layers different search radii. Since interpolation performed PoR CRS, interpolated azimuths additionally given transformed azimuths. allows easily calculate misfits predicted directions: Using circular_distance() example , can display spatial patterns misfits stress direction predicted direction plate boundary force. Since interpolation performed PoR CRS, grid composed equally spaced grid cells geographic CRS. rasterize grids, can, e.g., use Voronoi cells ggforce package.  map highlights stress anomalies show misfits direction tested plate boundary force.","code":"mean_SH_PoR_reduced <- mean_SH_PoR |>   compact_grid() |>   dplyr::mutate(cdist = circular_distance(azi.PoR, 135)) ggplot(mean_SH_PoR_reduced) +   ggforce::geom_voronoi_tile(     aes(lon, lat, fill = cdist),     max.radius = .7, normalize = FALSE   ) +   scale_fill_viridis_c(\"Angular distance\", limits = c(0, 1)) +   geom_sf(data = trajectories, lty = 2) +   geom_spoke(     aes(lon, lat, angle = deg2rad(90 - azi), alpha = sd),     radius = .5, position = \"center_spoke\", lwd = .2, colour = \"white\"   ) +   scale_alpha(\"Standard deviation\", range = c(1, .25)) +   coord_sf(xlim = range(san_andreas$lon), ylim = range(san_andreas$lat))"},{"path":"https://tobiste.github.io/tectonicr/articles/E_interpolation.html","id":"kernel-dispersion","dir":"Articles","previous_headings":"","what":"Kernel dispersion","title":"5. Spatial interpolation","text":"Another way analyse spatial misfits kernel dispersion, .e. local dispersion within user-defined window (kernel). kernel´s half width can single number (km) range widths. latter requires compact grid result (x) find smallest kernel size containing least dispersion (compact_grid(x, 'dispersion')). recommended calculate kernel dispersion PoR transformed data avoid angle distortions due projections.","code":"san_andreas_por <- san_andreas san_andreas_por$azi <- PoR_shmax(san_andreas, por, \"right\")$azi.PoR # transform to PoR azimuth san_andreas_por$prd <- 135 # test direction san_andreas_kdisp <- kernel_dispersion(san_andreas_por, gridsize = 1, R_range = seq(50, 350, 100)) san_andreas_kdisp <- compact_grid(san_andreas_kdisp, \"dispersion\")  ggplot(san_andreas_kdisp) +   ggforce::geom_voronoi_tile(     aes(lon, lat, fill = stat),     max.radius = .7, normalize = FALSE   ) +   scale_fill_viridis_c(\"Dispersion\", limits = c(0, 1)) +   geom_sf(data = trajectories, lty = 2) +   geom_spoke(     data = san_andreas,     aes(lon, lat, angle = deg2rad(90 - azi), alpha = unc),     radius = .5, position = \"center_spoke\", lwd = .2, colour = \"white\"   ) +   scale_alpha(\"Standard deviation\", range = c(1, .25)) +   coord_sf(xlim = range(san_andreas$lon), ylim = range(san_andreas$lat))"},{"path":"https://tobiste.github.io/tectonicr/articles/E_interpolation.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"5. Spatial interpolation","text":"Mardia, K. V., Jupp, P. E. (Eds.). (1999). “Directional Statistics” Hoboken, NJ, USA: John Wiley & Sons, Inc.  doi: 10.1002/9780470316979. Ziegler, Moritz O., Oliver Heidbach. 2017. “Manual Matlab Script Stress2Grid” GFZ German Research Centre Geosciences; World Stress Map Technical Report 17-02. doi: 10.5880/wsm.2017.002.","code":""},{"path":"https://tobiste.github.io/tectonicr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tobias Stephan. Author, maintainer.","code":""},{"path":"https://tobiste.github.io/tectonicr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stephan et al. (2023). Analyzing horizontal orientation crustal stress adjacent plate boundaries. Sci Rep, 13(1), 15590. https://doi.org/10.1038/s41598-023-42433-2","code":"@Article{,   title = {Analyzing the horizontal orientation of the crustal stress adjacent to plate boundaries},   author = {Tobias Stephan and Eva Enkelmann and Uwe Kroner},   journal = {Scientific Reports},   year = {2023},   volume = {13},   number = {1},   pages = {15590},   doi = {10.1038/s41598-023-42433-2}, }"},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"tectonicr","dir":"","previous_headings":"","what":"Analyzing the Orientation of Maximum Horizontal Stress","title":"Analyzing the Orientation of Maximum Horizontal Stress","text":"tectonicr free open-source R package modeling analyzing direction maximum horizontal stress (SHmax) based empirical link direction intraplate stress direction relative motion neighboring plates (Wdowinski, 1998; Stephan et al., 2023). following methods available: Direction plate boundary forces: PoR_shmax() gives predicted stress field adjacent plate boundary, calculated using relative plate motion neighboring plates using function model_shmax(). goodness--fit can statistically tested e.g. norm_chisq(), circular_dispersion() ,rayleigh_test(), confidence_interval(). Distance plate boundary: distance_from_pb() gives distance stress data point plate boundary measured along stress trajectories. Trajectories theoretical stress field eulerpole_paths() generates sf object containing spatial information suitable plot , instance, ggplot(). Relative rotations given set plate motion parameters: equivalent_rotation() transfers set plate motion parameters relative plate motions among given plates. Average direction variance set SHmax data using (weighted) statistics parameters statistically estimate distribution parameters pi-directional data. Spatial interpolation SHmax: PoR_stress2grid() uses distance, method, quality-weighted mean direction stress data without affected angular distortions. Rose plot rose() shows frequencies orientations polar coordinates Stress anomaly map: spatial distribution dispersion observed stress field directions plate boundary forces","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Analyzing the Orientation of Maximum Horizontal Stress","text":"must R installed system (see http://r-project.org). install tectonicr CRAN, type following code R command line prompt:","code":"install.packages(\"tectonicr\")"},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyzing the Orientation of Maximum Horizontal Stress","text":"recent development version tectonicr available Github can installed system follows: Using stress measurements San Andreas Fault - Gulf California example, quick analysis test right-lateral transform plate boundary can achieved : code produces underlying results Fig. 7 Stephan et al. (2023)","code":"# install.packages(\"remotes\") # install if needed remotes::install_github('tobiste/tectonicr') library('tectonicr') # load example data data(san_andreas) data(nuvel1) data(plates)  stress_analysis( san_andreas,  PoR = equivalent_rotation(nuvel1, \"na\", \"pa\"),  type = \"right\",  pb = subset(plates, pair == \"na-pa\") )"},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Analyzing the Orientation of Maximum Horizontal Stress","text":"detailed documentation can found https://tobiste.github.io/tectonicr/articles/tectonicr.html","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"gui","dir":"","previous_headings":"","what":"GUI","title":"Analyzing the Orientation of Maximum Horizontal Stress","text":"graphical user interface provides (limited) tectonicr functionalities. need install, just click link can run tectonicr browser: https://tobiste.shinyapps.io/tectonicr-app/","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"author","dir":"","previous_headings":"","what":"Author","title":"Analyzing the Orientation of Maximum Horizontal Stress","text":"Tobias Stephan (tstephan@lakeheadu.ca)","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"feedback-issues-and-contributions","dir":"","previous_headings":"","what":"Feedback, issues, and contributions","title":"Analyzing the Orientation of Maximum Horizontal Stress","text":"welcome feedback, suggestions, issues, contributions! found bug, please file minimal code reproduce issue.","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"how-to-cite-tectonicr","dir":"","previous_headings":"","what":"How to cite tectonicr","title":"Analyzing the Orientation of Maximum Horizontal Stress","text":"referencing package, please cite Stephan, T., Enkelmann, E., Kroner, U. (2023). Analyzing horizontal orientation crustal stress adjacent plate boundaries. Scientific Reports, 13(1). DOI: 10.1038/s41598-023-42433-2. package DOI: 10.5281/zenodo.10062231.","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Analyzing the Orientation of Maximum Horizontal Stress","text":"GPL-3.0 License","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR2Geo_azimuth.html","id":null,"dir":"Reference","previous_headings":"","what":"Azimuth conversion from PoR to geographical coordinate reference system — PoR2Geo_azimuth","title":"Azimuth conversion from PoR to geographical coordinate reference system — PoR2Geo_azimuth","text":"Conversion PoR azimuths geographical azimuths","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR2Geo_azimuth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Azimuth conversion from PoR to geographical coordinate reference system — PoR2Geo_azimuth","text":"","code":"PoR2Geo_azimuth(x, PoR)"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR2Geo_azimuth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Azimuth conversion from PoR to geographical coordinate reference system — PoR2Geo_azimuth","text":"x data.frame containing PoR equivalent azimuths (azi.PoR), either geographical coordinates point(s) PoR-equivalent coordinates. PoR data.frame containing geographical location Euler pole (lat, lon)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR2Geo_azimuth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Azimuth conversion from PoR to geographical coordinate reference system — PoR2Geo_azimuth","text":"numeric vector transformed azimuths (degrees)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR2Geo_azimuth.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Azimuth conversion from PoR to geographical coordinate reference system — PoR2Geo_azimuth","text":"Stephan, T., Enkelmann, E., Kroner, U. \"Analyzing horizontal orientation crustal stress adjacent plate boundaries\". Sci Rep 13. 15590 (2023). doi:10.1038/s41598-023-42433-2 .","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/PoR2Geo_azimuth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Azimuth conversion from PoR to geographical coordinate reference system — PoR2Geo_azimuth","text":"","code":"data(\"nuvel1\") # North America relative to Pacific plate: PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") data(\"san_andreas\") head(san_andreas$azi) #> [1]  36   7 169   1  23 160 san_andreas$azi.PoR <- PoR_shmax(san_andreas, PoR) res.geo <- PoR2Geo_azimuth(san_andreas, PoR) head(res.geo) #> [1]  36   7 169   1  23 160"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"PoR coordinates — PoR_coordinates","title":"PoR coordinates — PoR_coordinates","text":"Retrieve PoR equivalent coordinates object","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PoR coordinates — PoR_coordinates","text":"","code":"PoR_coordinates(x, PoR)"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PoR coordinates — PoR_coordinates","text":"x sf data.frame containing lat lon coordinates (lat, lon) PoR Pole Rotation. \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PoR coordinates — PoR_coordinates","text":"data.frame PoR coordinates (lat.PoR, lon.PoR)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PoR coordinates — PoR_coordinates","text":"","code":"data(\"nuvel1\") por <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to Pacific plate data(\"san_andreas\") san_andreas.por_sf <- PoR_coordinates(san_andreas, por) head(san_andreas.por_sf) #>    lat.PoR   lon.PoR #> 1 56.93219 -82.67182 #> 2 58.01202 -74.48278 #> 3 57.93239 -74.80319 #> 4 57.83707 -75.51138 #> 5 58.17336 -76.62093 #> 6 57.84485 -76.16849 san_andreas.por_df <- PoR_coordinates(sf::st_drop_geometry(san_andreas), por) head(san_andreas.por_df) #>    lat.PoR   lon.PoR #> 1 56.93219 -82.67182 #> 2 58.01202 -74.48278 #> 3 57.93239 -74.80319 #> 4 57.83707 -75.51138 #> 5 58.17336 -76.62093 #> 6 57.84485 -76.16849"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"PoR coordinate reference system — PoR_crs","title":"PoR coordinate reference system — PoR_crs","text":"Create reference system transformed Euler pole coordinate","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PoR coordinate reference system — PoR_crs","text":"","code":"PoR_crs(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PoR coordinate reference system — PoR_crs","text":"x \"data.frame\" \"euler.pole\" object containing geographical coordinates Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PoR coordinate reference system — PoR_crs","text":"Object class crs","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PoR coordinate reference system — PoR_crs","text":"PoR coordinate reference system oblique transformation geographical coordinate system Euler pole coordinates translation factors.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PoR coordinate reference system — PoR_crs","text":"","code":"data(\"nuvel1\") por <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to Pacific plate PoR_crs(por) #> Coordinate Reference System: #>   User input: +proj=ob_tran +o_proj=longlat +datum=WGS84 +o_lat_p=48.709 +o_lon_p=-78.167  #>   wkt: #> GEOGCRS[\"unnamed\", #>     BASEGEOGCRS[\"unknown\", #>         DATUM[\"World Geodetic System 1984\", #>             ELLIPSOID[\"WGS 84\",6378137,298.257223563, #>                 LENGTHUNIT[\"metre\",1]], #>             ID[\"EPSG\",6326]], #>         PRIMEM[\"Greenwich\",0, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8901]]], #>     DERIVINGCONVERSION[\"unknown\", #>         METHOD[\"PROJ ob_tran o_proj=longlat\"], #>         PARAMETER[\"o_lat_p\",48.709, #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]], #>         PARAMETER[\"o_lon_p\",-78.167, #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]]], #>     CS[ellipsoidal,2], #>         AXIS[\"longitude\",east, #>             ORDER[1], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]], #>         AXIS[\"latitude\",north, #>             ORDER[2], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]]]"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot data in PoR map — PoR_map","title":"Plot data in PoR map — PoR_map","text":"Plot data PoR map","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot data in PoR map — PoR_map","text":"","code":"PoR_map(   x,   PoR,   pb = NULL,   type = c(\"none\", \"in\", \"out\", \"right\", \"left\"),   deviation = FALSE,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot data in PoR map — PoR_map","text":"x, pb sf objects data points plate boundary geometries geographical coordinate system PoR Pole Rotation. \"data.frame\" object class \"euler.pole\" containing geographical coordinates Pole Rotation type Character. Type plate boundary (optional). Can \"\", \"\", \"right\", \"left\" outward, inward, right-lateral, left-lateral moving plate boundaries, respectively. \"none\" (default), PoR-equivalent azimuth returned. deviation logical. Whether data color-coded according deviation prediction, according stress regime? ... optional arguments passed tectonicr.colors()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot data in PoR map — PoR_map","text":"plot","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot data in PoR map — PoR_map","text":"","code":"data(\"nuvel1\") na_pa <- subset(nuvel1, nuvel1$plate.rot == \"na\")  data(\"plates\") plate_boundary <- subset(plates, plates$pair == \"na-pa\")  data(\"san_andreas\") PoR_map(san_andreas, PoR = na_pa, pb = plate_boundary, type = \"right\", deviation = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","title":"Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","text":"Models direction maximum horizontal stress \\(\\sigma_{Hmax}\\) Euler pole (Pole Rotation) coordinate reference system. type plate boundary given, also gives deviation theoretically predicted azimuth \\(\\sigma_{Hmax}\\), deviation, normalized \\(\\chi^2\\) statistics.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","text":"","code":"PoR_shmax(df, PoR, type = c(\"none\", \"in\", \"out\", \"right\", \"left\"))"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","text":"df data.frame containing coordinates point(s) (lat, lon), direction \\(\\sigma_{Hmax}\\) azi standard deviation unc (optional) PoR \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler  pole type Character. Type plate boundary (optional). Can \"\", \"\", \"right\", \"left\" outward, inward, right-lateral, left-lateral moving plate boundaries, respectively. \"none\" (default), PoR-equivalent azimuth returned.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","text":"Either numeric vector azimuths transformed coordinate system (degrees), \"data.frame\" azi.PoR transformed azimuths (degrees), prd predicted azimuths (degrees), dev deviation transformed predicted azimuth (degrees), nchisq Norm \\(\\chi^2\\) test statistic, cdist angular distance transformed predicted azimuth.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","text":"azimuth \\(\\sigma_{Hmax}\\) pole rotation reference system approximate 0 (180), 45, 90, 135 degrees stress sourced outward, sinistral, inward, dextral moving plate boundary, respectively. directions \\(\\sigma_{Hmax}\\) respect four plate boundary types.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","text":"Stephan, T., Enkelmann, E., Kroner, U. \"Analyzing horizontal orientation crustal stress adjacent plate boundaries\". Sci Rep 13. 15590 (2023). doi:10.1038/s41598-023-42433-2 .","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","text":"","code":"data(\"nuvel1\") # North America relative to Pacific plate: PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\")  data(\"san_andreas\") res <- PoR_shmax(san_andreas, PoR, type = \"right\") head(res) #>    azi.PoR prd        dev       nchisq       cdist #> 1 162.2848 135  27.284805 0.0919087122 0.210143277 #> 2 137.7446 135   2.744584 0.0009299678 0.002292849 #> 3 119.5840 135 -15.416011 0.0293399256 0.070663207 #> 4 131.1908 135  -3.809243 0.0017913992 0.004413592 #> 5 152.3277 135  17.327717 0.0370678728 0.088706703 #> 6 109.7786 135 -25.221400 0.0785332091 0.181575875"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_stress2grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial interpolation of SHmax in PoR coordinate reference system — PoR_stress2grid","title":"Spatial interpolation of SHmax in PoR coordinate reference system — PoR_stress2grid","text":"data transformed PoR system interpolation. interpolation grid returned geographical coordinates azimuths.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_stress2grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial interpolation of SHmax in PoR coordinate reference system — PoR_stress2grid","text":"","code":"PoR_stress2grid(   x,   PoR,   grid = NULL,   PoR_grid = TRUE,   lon_range = NULL,   lat_range = NULL,   gridsize = 2.5,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_stress2grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial interpolation of SHmax in PoR coordinate reference system — PoR_stress2grid","text":"x sf object containing azi SHmax degree unc Uncertainties SHmax degree type Methods used determination orientation SHmax PoR Pole Rotation. \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler  pole grid (optional) Point object class sf. PoR_grid logical. Whether grid generated based coordinate range PoR (\"TRUE, default) CRS geographical CRS (\"FALSE). ignored \"grid\" specified. lon_range, lat_range (optional) numeric vector specifying minimum maximum longitudes latitudes (ignored \"grid\" specified). gridsize Numeric. Target spacing regular grid decimal degree. Default 2.5 (ignored \"grid\" specified) ... Arguments passed stress2grid()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_stress2grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial interpolation of SHmax in PoR coordinate reference system — PoR_stress2grid","text":"sf object containing lon,lat longitude latitude geographical CRS (degrees) lon.PoR,lat.PoR longitude latitude PoR CRS (degrees) azi geographical mean SHmax degree azi.PoR PoR mean SHmax degree sd Standard deviation SHmax degrees R Search radius km mdr Mean distance datapoints per search radius N Number data points search radius","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_stress2grid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial interpolation of SHmax in PoR coordinate reference system — PoR_stress2grid","text":"Stress field wavelength analysis PoR system back-transformed","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_stress2grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial interpolation of SHmax in PoR coordinate reference system — PoR_stress2grid","text":"","code":"data(\"san_andreas\") data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") PoR_stress2grid(san_andreas, PoR) #> Simple feature collection with 1119 features and 10 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -125.0802 ymin: 21.44743 xmax: -106.3859 ymax: 41.36318 #> Geodetic CRS:  WGS 84 #> # A tibble: 1,119 × 11 #> # Groups:   R [20] #>    lon.PoR lat.PoR azi.PoR    sd     R    mdr     N             geometry #>  *   <dbl>   <dbl>   <dbl> <dbl> <dbl>  <dbl> <int>          <POINT [°]> #>  1   -84.8    52.6     NA    0      50 NA         0 (-125.0802 34.07892) #>  2   -84.8    52.6     NA    0     100 NA         0 (-125.0802 34.07892) #>  3   -84.8    52.6     NA    0     150 NA         0 (-125.0802 34.07892) #>  4   -84.8    52.6     NA    0     200 NA         1 (-125.0802 34.07892) #>  5   -84.8    52.6     NA    0     250 NA         1 (-125.0802 34.07892) #>  6   -84.8    52.6     NA    0     300 NA         2 (-125.0802 34.07892) #>  7   -84.8    52.6     NA    0     350 NA         2 (-125.0802 34.07892) #>  8   -84.8    52.6    160.  24.5   450  0.922    46 (-125.0802 34.07892) #>  9   -84.8    52.6    156.  22.8   500  0.887    85 (-125.0802 34.07892) #> 10   -84.8    52.6    157.  21.1   550  0.890   185 (-125.0802 34.07892) #> # ℹ 1,109 more rows #> # ℹ 3 more variables: lat <dbl>, lon <dbl>, azi <dbl>"},{"path":"https://tobiste.github.io/tectonicr/reference/PositionCenterSpoke.html","id":null,"dir":"Reference","previous_headings":"","what":"Centrically aligned geom_spoke marker — PositionCenterSpoke","title":"Centrically aligned geom_spoke marker — PositionCenterSpoke","text":"\"position\" subclass \"center_spoke\" center ggplot::geom_spoke() marker origin","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PositionCenterSpoke.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Centrically aligned geom_spoke marker — PositionCenterSpoke","text":"","code":"PositionCenterSpoke"},{"path":"https://tobiste.github.io/tectonicr/reference/PositionCenterSpoke.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Centrically aligned geom_spoke marker — PositionCenterSpoke","text":"object class PositionCenterSpoke (inherits Position, ggproto, gg) length 2.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PositionCenterSpoke.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Centrically aligned geom_spoke marker — PositionCenterSpoke","text":"https://stackoverflow.com/questions/55474143/--center-geom-spoke-around--origin","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/Q4_to_euler.html","id":null,"dir":"Reference","previous_headings":"","what":"Euler angle/axis from quaternion — Q4_to_euler","title":"Euler angle/axis from quaternion — Q4_to_euler","text":"Euler angle/axis quaternion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/Q4_to_euler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euler angle/axis from quaternion — Q4_to_euler","text":"","code":"Q4_to_euler(q)"},{"path":"https://tobiste.github.io/tectonicr/reference/Q4_to_euler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Euler angle/axis from quaternion — Q4_to_euler","text":"q object class \"quaternion\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/Q4_to_euler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Euler angle/axis from quaternion — Q4_to_euler","text":"\"euler.pole\" object","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/abs_vel.html","id":null,"dir":"Reference","previous_headings":"","what":"Absolute Plate Velocity — abs_vel","title":"Absolute Plate Velocity — abs_vel","text":"Calculates absolute angular velocity plate motion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/abs_vel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Absolute Plate Velocity — abs_vel","text":"","code":"abs_vel(w, alpha, r = earth_radius())"},{"path":"https://tobiste.github.io/tectonicr/reference/abs_vel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Absolute Plate Velocity — abs_vel","text":"w Angular velocity rate angle rotation alpha Angular distance Euler pole small circle around Euler pole r Radius. Default WGS84 Earth's radius (6371.009 km)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/abs_vel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Absolute Plate Velocity — abs_vel","text":"numeric (unit velocity: km/Myr)","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/abs_vel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Absolute Plate Velocity — abs_vel","text":"","code":"abs_vel(0.21, 0) #> [1] 0 abs_vel(0.21, 45) #> [1] 16.51163 abs_vel(0.21, 90) #> [1] 23.35097"},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Degrees to Radians — angle-conversion","title":"Degrees to Radians — angle-conversion","text":"Helper functions transform angles degrees radians.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Degrees to Radians — angle-conversion","text":"","code":"rad2deg(rad)  deg2rad(deg)"},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Degrees to Radians — angle-conversion","text":"rad (array ) angles radians. deg (array ) angles degrees.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Degrees to Radians — angle-conversion","text":"numeric. angle degrees radians.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Degrees to Radians — angle-conversion","text":"","code":"deg2rad(seq(-90, 90, 15)) #>  [1] -1.5707963 -1.3089969 -1.0471976 -0.7853982 -0.5235988 -0.2617994 #>  [7]  0.0000000  0.2617994  0.5235988  0.7853982  1.0471976  1.3089969 #> [13]  1.5707963 rad2deg(seq(-pi / 2, pi / 2, length = 13)) #>  [1] -90 -75 -60 -45 -30 -15   0  15  30  45  60  75  90"},{"path":"https://tobiste.github.io/tectonicr/reference/angle_vectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Angle Between Two Vectors — angle_vectors","title":"Angle Between Two Vectors — angle_vectors","text":"Calculates angle two vectors","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle_vectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Angle Between Two Vectors — angle_vectors","text":"","code":"angle_vectors(x, y)"},{"path":"https://tobiste.github.io/tectonicr/reference/angle_vectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Angle Between Two Vectors — angle_vectors","text":"x, y Vectors Cartesian coordinates. Can vectors three numbers matrix 3 columns (x, y, z)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle_vectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Angle Between Two Vectors — angle_vectors","text":"numeric. angle degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle_vectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Angle Between Two Vectors — angle_vectors","text":"","code":"u <- c(1, -2, 3) v <- c(-2, 1, 1) angle_vectors(u, v) #> [1] 96.26395"},{"path":"https://tobiste.github.io/tectonicr/reference/axes.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot axes — axes","title":"Plot axes — axes","text":"Plot axes","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/axes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot axes — axes","text":"","code":"axes(   x,   y,   angle,   radius = 0.5,   arrow.code = 1,   arrow.length = 0,   add = FALSE,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/axes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot axes — axes","text":"x, y coordinates points angle Azimuth degrees radius length axis arrow.code integer. Kind arrow head. default 1, .e. arrow head. See graphics::arrows() details arrow.length numeric Length edges arrow head (inches). (Ignored arrow.code = 1) add logical. add existing plot? ... optional arguments passed graphics::arrows()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/axes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot axes — axes","text":"return value, called side effects","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/axes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot axes — axes","text":"","code":"data(\"san_andreas\") axes(san_andreas$lon, san_andreas$lat, san_andreas$azi, add = FALSE)"},{"path":"https://tobiste.github.io/tectonicr/reference/circle_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Statistics of Circular Data — circle_stats","title":"Summary Statistics of Circular Data — circle_stats","text":"Calculate (weighted median) standard deviation orientation data.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Statistics of Circular Data — circle_stats","text":"","code":"circular_mean(x, w = NULL, axial = TRUE, na.rm = TRUE)  circular_var(x, w = NULL, axial = TRUE, na.rm = TRUE)  circular_sd(x, w = NULL, axial = TRUE, na.rm = TRUE)  circular_median(x, w = NULL, axial = TRUE, na.rm = TRUE)  circular_quantiles(x, w = NULL, axial = TRUE, na.rm = TRUE)  circular_IQR(x, w = NULL, axial = TRUE, na.rm = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/circle_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Statistics of Circular Data — circle_stats","text":"x numeric vector. Values degrees. w (optional) Weights. vector positive numbers length x. axial logical. Whether data axial, .e. pi-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). na.rm logical value indicating whether NA values x stripped computation proceeds.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Statistics of Circular Data — circle_stats","text":"numeric vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_stats.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Summary Statistics of Circular Data — circle_stats","text":"Weighting may reciprocal data uncertainties. Weightings effect quasi-median quasi-quantiles length(x) %% 2 != 1 length(x) %% 4 == 0, respectively.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_stats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Summary Statistics of Circular Data — circle_stats","text":"Mardia, K.V. (1972). Statistics Directional Data: Probability Mathematical Statistics. London: Academic Press. Ziegler, M. O.; Heidbach O. (2019). Manual Matlab Script Stress2Grid v1.1. WSM Technical Report 19-02, GFZ German Research Centre Geosciences. doi:10.2312/wsm.2019.002 Heidbach, O., Tingay, M., Barth, ., Reinecker, J., Kurfess, D., & Mueller, B. (2010). Global crustal stress pattern based World Stress Map database release 2008. Tectonophysics 482, 3<U+2013>15, doi:10.1016/j.tecto.2009.07.023","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Statistics of Circular Data — circle_stats","text":"","code":"x <- rvm(10, 0, 100) %% 180 unc <- stats::runif(100, 0, 10) circular_mean(x, 1 / unc) #> [1] 0.6221128 circular_var(x, 1 / unc) #> [1] 0.01727118 circular_sd(x, 1 / unc) #> [1] 10.69516 circular_median(x, 1 / unc) #> [1] 172.0181 circular_quantiles(x, 1 / unc) #>        25%        50%        75%  #>   5.704103 172.018116 178.181497  circular_IQR(x, 1 / unc) #> [1] 7.522606  data(\"san_andreas\") circular_mean(san_andreas$azi) #> [1] 10.66086 circular_mean(san_andreas$azi, 1 / san_andreas$unc) #> [1] 9.971235 circular_median(san_andreas$azi) #> [1] 36 circular_median(san_andreas$azi, 1 / san_andreas$unc) #> [1] 36 circular_quantiles(san_andreas$azi) #>   25%   50%   75%  #>  15.0  36.0 161.5  circular_quantiles(san_andreas$azi, 1 / san_andreas$unc) #>      25%      50%      75%  #>  15.0000  36.0000 161.8929  circular_var(san_andreas$azi) #> [1] 0.3134367 circular_var(san_andreas$azi, 1 / san_andreas$unc) #> [1] 0.2015211  data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") circular_mean(sa.por$azi.PoR, 1 / san_andreas$unc) #> [1] 138.8937 circular_median(sa.por$azi.PoR, 1 / san_andreas$unc) #> [1] 137.0094 circular_var(sa.por$azi.PoR, 1 / san_andreas$unc) #> [1] 0.1893274 circular_quantiles(sa.por$azi.PoR, 1 / san_andreas$unc) #>      25%      50%      75%  #> 124.9081 137.0094 150.2300"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_dispersion_boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrapped estimates for circular dispersion — circular_dispersion_boot","title":"Bootstrapped estimates for circular dispersion — circular_dispersion_boot","text":"Calculates bootstrapped estimates circular dispersion, standard error confidence interval.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_dispersion_boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrapped estimates for circular dispersion — circular_dispersion_boot","text":"","code":"circular_dispersion_boot(   x,   y = NULL,   w = NULL,   w.y = NULL,   R = 1000,   conf.level = 0.95,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_dispersion_boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrapped estimates for circular dispersion — circular_dispersion_boot","text":"x numeric values degrees. y numeric. angle(s) angles x disperse (degrees). w, w.y (optional) Weights x y, respectively. vector positive numbers length x. R number bootstrap replicates. positive integer (1000 default). conf.level Level confidence: \\((1 - \\alpha \\%)/100\\). (0.95 default). ... optional arguments passed boot::boot()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_dispersion_boot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrapped estimates for circular dispersion — circular_dispersion_boot","text":"list containing: MLE maximum likelihood estimate circular dispersion sde standard error MLE CI lower upper limit confidence interval MLE","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/circular_dispersion_boot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrapped estimates for circular dispersion — circular_dispersion_boot","text":"","code":"data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") circular_dispersion(sa.por$azi.PoR, y = 135, w = 1 / san_andreas$unc) #> [1] 0.09840187 circular_dispersion_boot(sa.por$azi.PoR, y = 135, w = 1 / san_andreas$unc, R = 1000) #> $MLE #> [1] 0.1895855 #>  #> $sde #> [1] 0.009751652 #>  #> $CI #> [1] 0.1706117 0.2085488 #>"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_sd_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard Error of Mean Direction of Circular Data — circular_sd_error","title":"Standard Error of Mean Direction of Circular Data — circular_sd_error","text":"Measure chance variation expected sample sample estimates mean direction. approximated standard error mean direction computed mean resultant length MLE concentration parameter \\(\\kappa\\).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_sd_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard Error of Mean Direction of Circular Data — circular_sd_error","text":"","code":"circular_sd_error(x, w = NULL, axial = TRUE, na.rm = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_sd_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard Error of Mean Direction of Circular Data — circular_sd_error","text":"x numeric vector. Values degrees. w (optional) Weights. vector positive numbers length x. axial logical. Whether data axial, .e. pi-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). na.rm logical value indicating whether NA values x stripped computation proceeds.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_sd_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard Error of Mean Direction of Circular Data — circular_sd_error","text":"Angle degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_sd_error.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Standard Error of Mean Direction of Circular Data — circular_sd_error","text":"Davis (1986) Statistics data analysis geology. 2nd ed., John Wiley & Sons.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/circular_sd_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard Error of Mean Direction of Circular Data — circular_sd_error","text":"","code":"# Example data from Davis (1986), pp. 316 finland_stria <- c(   23, 27, 53, 58, 64, 83, 85, 88, 93, 99, 100, 105, 113,   113, 114, 117, 121, 123, 125, 126, 126, 126, 127, 127, 128, 128, 129, 132,   132, 132, 134, 135, 137, 144, 145, 145, 146, 153, 155, 155, 155, 157, 163,   165, 171, 172, 179, 181, 186, 190, 212 ) circular_sd_error(finland_stria, axial = FALSE) #> [1] 5.296841  data(san_andreas) data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") circular_sd_error(sa.por$azi.PoR, w = 1 / san_andreas$unc) #> [1] 2.53717"},{"path":"https://tobiste.github.io/tectonicr/reference/compact_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Compact smoothed stress field — compact_grid","title":"Compact smoothed stress field — compact_grid","text":"Filter smoothed stress field containing range search radii kernel half widths find smallest wavelength (R) least circular sd. dispersion coordinate, respectively.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/compact_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compact smoothed stress field — compact_grid","text":"","code":"compact_grid(x, type = c(\"stress\", \"dispersion\"))"},{"path":"https://tobiste.github.io/tectonicr/reference/compact_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compact smoothed stress field — compact_grid","text":"x output stress2grid(), PoR_stress2grid(), kernel_dispersion() type character. Type grid x. Either \"stress\" (input stress2grid() PoR_stress2grid()) \"dispersion\" (input kernel_dispersion()).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/compact_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compact smoothed stress field — compact_grid","text":"sf object","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/compact_grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compact smoothed stress field — compact_grid","text":"","code":"data(\"san_andreas\") res <- stress2grid(san_andreas) compact_grid(res) #> Simple feature collection with 40 features and 7 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -124.57 ymin: 24.33 xmax: -107.07 ymax: 39.33 #> Geodetic CRS:  WGS 84 #> First 10 features: #>      R     lon   lat        azi        sd       mdr   N              geometry #> 1  200 -107.07 24.33 177.589942 11.206266 0.8997897  28 POINT (-107.07 24.33) #> 2  150 -107.07 34.33  23.617647  3.838594 0.7388223   3 POINT (-107.07 34.33) #> 3  900 -107.07 36.83  22.539619 21.314742 0.8125780 157 POINT (-107.07 36.83) #> 4  300 -107.07 39.33 109.014489  9.402220 0.7586065   5 POINT (-107.07 39.33) #> 5   50 -109.57 24.33 162.095475 15.752508 0.8796419   6 POINT (-109.57 24.33) #> 6  100 -109.57 26.83 177.478341  6.197443 0.8414019   4 POINT (-109.57 26.83) #> 7  250 -109.57 29.33  26.287607  7.653565 0.8070561   3 POINT (-109.57 29.33) #> 8  150 -109.57 31.83  24.081554  8.001669 0.6061889   4 POINT (-109.57 31.83) #> 9  600 -109.57 34.33   9.441005 22.251442 0.7945751 115 POINT (-109.57 34.33) #> 10 200 -109.57 36.83 124.358340 18.161864 0.8157291   5 POINT (-109.57 36.83)"},{"path":"https://tobiste.github.io/tectonicr/reference/confidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval around the Mean Direction of Circular Data — confidence","title":"Confidence Interval around the Mean Direction of Circular Data — confidence","text":"Probabilistic limit location true population mean direction, assuming estimation errors normally distributed.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/confidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval around the Mean Direction of Circular Data — confidence","text":"","code":"confidence_angle(x, conf.level = 0.95, w = NULL, axial = TRUE, na.rm = TRUE)  confidence_interval(x, conf.level = 0.95, w = NULL, axial = TRUE, na.rm = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/confidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval around the Mean Direction of Circular Data — confidence","text":"x numeric vector. Values degrees. conf.level Level confidence: \\((1 - \\alpha \\%)/100\\). (0.95 default). w (optional) Weights. vector positive numbers length x. axial logical. Whether data axial, .e. pi-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). na.rm logical value indicating whether NA values x stripped computation proceeds.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/confidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval around the Mean Direction of Circular Data — confidence","text":"Angle degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/confidence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Interval around the Mean Direction of Circular Data — confidence","text":"confidence angle gives interval, .e. plus minus confidence angle, around mean direction particular sample, contains true mean direction given level confidence.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/confidence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Interval around the Mean Direction of Circular Data — confidence","text":"Davis (1986) Statistics data analysis geology. 2nd ed., John Wiley & Sons. Jammalamadaka, S. Rao Sengupta, . (2001). Topics Circular Statistics, Sections 3.3.3 3.4.1, World Scientific Press, Singapore.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/confidence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval around the Mean Direction of Circular Data — confidence","text":"","code":"# Example data from Davis (1986), pp. 316 finland_stria <- c(   23, 27, 53, 58, 64, 83, 85, 88, 93, 99, 100, 105, 113,   113, 114, 117, 121, 123, 125, 126, 126, 126, 127, 127, 128, 128, 129, 132,   132, 132, 134, 135, 137, 144, 145, 145, 146, 153, 155, 155, 155, 157, 163,   165, 171, 172, 179, 181, 186, 190, 212 ) confidence_angle(finland_stria, axial = FALSE) #> [1] 10.38162  data(san_andreas) data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") confidence_angle(sa.por$azi.PoR, w = 1 / san_andreas$unc) #> [1] 4.972762 confidence_interval(sa.por$azi.PoR, w = 1 / san_andreas$unc) #> $mu #> [1] 138.8937 #>  #> $conf.angle #> [1] 4.972762 #>  #> $conf.interval #> [1] 133.9209 143.8665 #>"},{"path":"https://tobiste.github.io/tectonicr/reference/conjugate_Q4.html","id":null,"dir":"Reference","previous_headings":"","what":"Conjugation of a Quaternion — conjugate_Q4","title":"Conjugation of a Quaternion — conjugate_Q4","text":"Inverse rotation given conjugated quaternion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/conjugate_Q4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conjugation of a Quaternion — conjugate_Q4","text":"","code":"conjugate_Q4(q, normalize = FALSE)"},{"path":"https://tobiste.github.io/tectonicr/reference/conjugate_Q4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conjugation of a Quaternion — conjugate_Q4","text":"q object class \"quaternion\" normalize logical. Whether quaternion normalization applied (TRUE) (FALSE, default).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/conjugate_Q4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conjugation of a Quaternion — conjugate_Q4","text":"object class \"quaternion\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinate_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate Correction — coordinate_mod","title":"Coordinate Correction — coordinate_mod","text":"Corrects longitudes latitudes value -180.0 180.0 -90 90 degree","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinate_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate Correction — coordinate_mod","text":"","code":"longitude_modulo(x)  latitude_modulo(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/coordinate_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate Correction — coordinate_mod","text":"x Longitude(s) latitude(s) degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinate_mod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinate Correction — coordinate_mod","text":"numeric","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinate_mod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinate Correction — coordinate_mod","text":"","code":"longitude_modulo(-361 + 5 * 360) #> [1] -1 latitude_modulo(-91 + 5 * 180) #> [1] 89"},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate Transformations — coordinates","title":"Coordinate Transformations — coordinates","text":"Converts vector Cartesian geographical coordinate systems","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate Transformations — coordinates","text":"","code":"cartesian_to_geographical(n)  geographical_to_cartesian(p)  geographical_to_spherical(p)"},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate Transformations — coordinates","text":"n Cartesian coordinates (x, y, z) vector p Geographical coordinates (latitude, longitude) vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinate Transformations — coordinates","text":"Functions return (2- 3-dimensional) vector representing point requested coordinate system.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinate Transformations — coordinates","text":"","code":"n <- c(1, -2, 3) cartesian_to_geographical(n) #> [1]  53.30077 -63.43495 p <- c(50, 10) geographical_to_cartesian(p) #> [1] 0.6330222 0.1116189 0.7660444"},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates2.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate Transformations — coordinates2","title":"Coordinate Transformations — coordinates2","text":"Converts vector Cartesian spherical coordinate systems","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate Transformations — coordinates2","text":"","code":"cartesian_to_spherical(n)  spherical_to_cartesian(p)  spherical_to_geographical(p)"},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate Transformations — coordinates2","text":"n Cartesian coordinates (x, y, z) three-column vector p Spherical coordinates (colatitude, azimuth) two-column vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinate Transformations — coordinates2","text":"Functions return (2- 3-dimensional) vector representing point requested coordinate system.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinate Transformations — coordinates2","text":"","code":"n <- c(1, -2, 3) cartesian_to_spherical(n) #> [1]  36.69923 -63.43495 p <- c(50, 10) spherical_to_cartesian(p) #> [1] 0.7544065 0.1330222 0.6427876"},{"path":"https://tobiste.github.io/tectonicr/reference/cpm_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Global model of current plate motions — cpm_models","title":"Global model of current plate motions — cpm_models","text":"Compilation global models current plate motions, including NNR-NUVEL1A (DeMets et al., 1990), NNR-MORVEL56 (Argus et al., 2011), REVEL (Sella et al., 2002), GSRM2.1 (Kreemer et al., 2014) HS-NUVEL1A (Gripp Gordon, 2002), PB2002 (Bird, 2003)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/cpm_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global model of current plate motions — cpm_models","text":"","code":"data('cpm_models')"},{"path":"https://tobiste.github.io/tectonicr/reference/cpm_models.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Global model of current plate motions — cpm_models","text":"object class data.frame plate.name rotating plate plate.rot abbreviation plate's name lat,lon Coordinates Pole Rotation angle amount rotation (angle 1 Myr) plate.fix anchored plate, .e. plate.rot moves relative  plate.fix model Model current global plate motion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/cpm_models.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global model of current plate motions — cpm_models","text":"Argus, D. F., Gordon, R. G., & DeMets, C. (2011). Geologically current motion 56 plates relative -net-rotation reference frame. Geochemistry, Geophysics, Geosystems, 12(11). doi: 10.1029/2011GC003751. Bird, P. (2003), updated digital model plate boundaries, Geochem. Geophys. Geosyst., 4, 1027, doi: 10.1029/2001GC000252, 3. DeMets, C., Gordon, R. G., Argus, D. F., & Stein, S. (1990). Current plate motions. Geophysical Journal International, 101(2), 425-478. doi:10.1111/j.1365-246X.1990.tb06579.x . Gripp, . E., & Gordon, R. G. (2002). Young tracks hotspots current plate velocities. Geophysical Journal International, 150(2), 321<U+2013>361. doi:10.1046/j.1365-246X.2002.01627.x . Kreemer, C., Blewitt, G., & Klein, E. C. (2014). geodetic plate motion Global Strain Rate Model. Geochemistry, Geophysics, Geosystems, 15(10), 3849<U+2013>3889. doi: 10.1002/2014GC005407. Sella, G. F., Dixon, T. H., & Mao, . (2002). REVEL: model Recent plate velocities space geodesy. Journal Geophysical Research: Solid Earth, 107(B4). doi: 10.1029/2000jb000033.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/cpm_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global model of current plate motions — cpm_models","text":"","code":"data(\"cpm_models\") head(\"cpm_models\") #> [1] \"cpm_models\""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Angle Between Two Directions — deviation_norm","title":"Normalize Angle Between Two Directions — deviation_norm","text":"Normalizes angle two directions acute angle , .e. angles 0 90<U+00B0>","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Angle Between Two Directions — deviation_norm","text":"","code":"deviation_norm(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Angle Between Two Directions — deviation_norm","text":"x numeric vector containing angles degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Angle Between Two Directions — deviation_norm","text":"numeric vector, acute angles two directions, .e. values 0 90<U+00B0>","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Normalize Angle Between Two Directions — deviation_norm","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize Angle Between Two Directions — deviation_norm","text":"","code":"deviation_norm(91) #> [1] 89 deviation_norm(c(-91, NA, 23497349)) #> [1] 89 NA 31"},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_shmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — deviation_shmax","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — deviation_shmax","text":"Calculate angular difference observed modeled direction maximum horizontal stresses (\\(\\sigma_{Hmax}\\)) along great circles, small circles, loxodromes relative plate motion's Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_shmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — deviation_shmax","text":"","code":"deviation_shmax(prd, obs)"},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_shmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — deviation_shmax","text":"prd data.frame containing modeled azimuths \\(\\sigma_{Hmax}\\), .e. return object model_shmax() obs Numeric vector containing observed azimuth \\(\\sigma_{Hmax}\\), length prd","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_shmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — deviation_shmax","text":"object class data.frame dev.gc Deviation observed stress modeled \\(\\sigma_{Hmax}\\) following great circles dev.sc Small circles dev.ld.cw Clockwise loxodromes dev.ld.ccw Counter-clockwise loxodromes","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_shmax.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — deviation_shmax","text":"Stephan, T., Enkelmann, E., Kroner, U. \"Analyzing horizontal orientation crustal stress adjacent plate boundaries\". Sci Rep 13. 15590 (2023). doi:10.1038/s41598-023-42433-2 .","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_shmax.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — deviation_shmax","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_shmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — deviation_shmax","text":"","code":"data(\"nuvel1\") # North America relative to Pacific plate: PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\")  # the point where we want to model the SHmax direction: point <- data.frame(lat = 45, lon = 20)  prd <- model_shmax(point, PoR) deviation_shmax(prd, obs = 90) #>     dev.gc    dev.sc dev.ld.cw dev.ld.ccw #> 1 42.45436 -47.54564  87.45436  -2.545636"},{"path":"https://tobiste.github.io/tectonicr/reference/dispersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Circular distance and dispersion — dispersion","title":"Circular distance and dispersion — dispersion","text":"Circular distance two angles circular dispersion angles specified angle.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dispersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Circular distance and dispersion — dispersion","text":"","code":"circular_distance(x, y, axial = TRUE, na.rm = TRUE)  circular_dispersion(   x,   y = NULL,   w = NULL,   w.y = NULL,   norm = FALSE,   axial = TRUE,   na.rm = TRUE )"},{"path":"https://tobiste.github.io/tectonicr/reference/dispersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Circular distance and dispersion — dispersion","text":"x, y vectors numeric values degrees. length(y) either 1 length(x) axial logical. Whether data axial, .e. pi-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). na.rm logical. Whether NA values x stripped computation proceeds. w, w.y (optional) Weights. vector positive numbers length x. w.y (optional) weight y. norm logical. Whether dispersion normalized maximum possible angular difference.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dispersion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Circular distance and dispersion — dispersion","text":"circular_distancereturns numeric vector positive numbers, circular_dispersionreturns positive number.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dispersion.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Circular distance and dispersion — dispersion","text":"NULL, circular variance returned.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dispersion.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Circular distance and dispersion — dispersion","text":"Mardia, K.V. (1972). Statistics Directional Data: Probability Mathematical Statistics. London: Academic Press.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/dispersion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Circular distance and dispersion — dispersion","text":"","code":"a <- c(0, 2, 359, 6, 354) circular_distance(a, 10) # distance to single value #> [1] 0.030153690 0.019369152 0.036408073 0.004865966 0.075975952  b <- a + 90 circular_distance(a, b) # distance to multiple values #> [1] 1 1 1 1 1  data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") circular_dispersion(sa.por$azi.PoR, y = 135) #> [1] 0.1474684 circular_dispersion(sa.por$azi.PoR, y = 135, w = 1 / san_andreas$unc) #> [1] 0.09840187"},{"path":"https://tobiste.github.io/tectonicr/reference/dist_greatcircle.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance between points — dist_greatcircle","title":"Distance between points — dist_greatcircle","text":"Returns great circle distance location grid point km","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dist_greatcircle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance between points — dist_greatcircle","text":"","code":"dist_greatcircle(   lat1,   lon1,   lat2,   lon2,   r = earth_radius(),   method = c(\"haversine\", \"orthodrome\", \"vincenty\", \"euclidean\") )"},{"path":"https://tobiste.github.io/tectonicr/reference/dist_greatcircle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance between points — dist_greatcircle","text":"lat1, lon1 numeric vector. coordinate point(s) 1 (degrees). lat2, lon2 numeric vector. coordinates point(s) 2 (degrees). r numeric. radius sphere (default = 6371.0087714 km, .e. radius Earth) method Character. Formula calculating great circle distance, one : \"haversine\" great circle distance based haversine formula optimized 64-bit floating-point numbers (default) \"orthodrome\" great circle distance based spherical law cosines \"vincenty\" distance based Vincenty formula ellipsoid equal major minor axes \"euclidean\" Euclidean distance (great circle distance!)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dist_greatcircle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance between points — dist_greatcircle","text":"numeric vector length equal length(lat1)","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/dist_greatcircle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance between points — dist_greatcircle","text":"","code":"dist_greatcircle(lat1 = 20, lon1 = 12, lat2 = c(50, 30), lon2 = c(40, 32)) #> [1] 4149.157 2296.583 dist_greatcircle(   lat1 = 20, lon1 = 12, lat2 = c(50, 30), lon2 = c(40, 32),   method = \"orthodrome\" ) #> [1] 4149.157 2296.583 dist_greatcircle(   lat1 = 20, lon1 = 12, lat2 = c(50, 30), lon2 = c(40, 32),   method = \"vincenty\" ) #> [1] 4149.157 2296.583 dist_greatcircle(   lat1 = 20, lon1 = 12, lat2 = c(50, 30), lon2 = c(40, 32),   method = \"euclidean\" ) #> [1] 4076.220 2284.169"},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance from plate boundary — distance_from_pb","title":"Distance from plate boundary — distance_from_pb","text":"Absolute distance data points nearest plate boundary degree","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance from plate boundary — distance_from_pb","text":"","code":"distance_from_pb(x, PoR, pb, tangential = FALSE, km = FALSE, ...)"},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance from plate boundary — distance_from_pb","text":"x, pb sf objects data points plate boundary geometries geographical coordinate system PoR Pole Rotation. \"data.frame\" object class \"euler.pole\" containing geographical coordinates Pole Rotation tangential Logical. Whether plate boundary tangential boundary (TRUE) inward outward boundary (FALSE, default). km Logical. Whether distance expressed kilometers (TRUE) degrees (FALSE, default). ... optional arguments passed smoothr::densify()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance from plate boundary — distance_from_pb","text":"Numeric vector great circle distances","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distance from plate boundary — distance_from_pb","text":"distance plate boundary longitudinal latitudinal difference data point plate boundary (along closest latitude longitude) inward/outward tangential plate boundaries, respectively.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Distance from plate boundary — distance_from_pb","text":"Wdowinski, S. (1998). theory intraplate tectonics. Journal Geophysical Research: Solid Earth, 103(3), 5037<U+2013>5059. http://dx.doi.org/10.1029/97JB03390","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance from plate boundary — distance_from_pb","text":"","code":"data(\"nuvel1\") na_pa <- subset(nuvel1, nuvel1$plate.rot == \"na\")  data(\"plates\") plate_boundary <- subset(plates, plates$pair == \"na-pa\")  data(\"san_andreas\") res <- distance_from_pb(   x = san_andreas, PoR = na_pa, pb = plate_boundary, tangential = TRUE ) head(res) #> [1] -0.15965337  0.08688785  0.14986772  0.38296977 -0.04424539  0.33684309  res.km <- distance_from_pb(   x = san_andreas, PoR = na_pa, pb = plate_boundary, tangential = TRUE, km = TRUE ) range(res.km) #> [1] -1025.9419   597.3071"},{"path":"https://tobiste.github.io/tectonicr/reference/distance_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize angular distance on a sphere distance — distance_mod","title":"Normalize angular distance on a sphere distance — distance_mod","text":"Helper function express angular distance sphere range 0 180 degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize angular distance on a sphere distance — distance_mod","text":"","code":"distance_mod(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/distance_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize angular distance on a sphere distance — distance_mod","text":"x numeric, angular distance (degrees)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_mod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize angular distance on a sphere distance — distance_mod","text":"numeric vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"Plate Stress Dummy Grid — dummy","title":"Plate Stress Dummy Grid — dummy","text":"Helper functions create dummy grid small circles, great circles, loxodromes Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plate Stress Dummy Grid — dummy","text":"","code":"smallcircle_dummy(n)  greatcircle_dummy(n)  loxodrome_dummy(n, angle, cw)"},{"path":"https://tobiste.github.io/tectonicr/reference/dummy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plate Stress Dummy Grid — dummy","text":"n Number curves angle Direction loxodromes (degree) cw logical. Sense loxodromes: TRUE clockwise loxodromes (right-lateral displaced plate boundaries). FALSE counterclockwise loxodromes (left-lateral displaced plate boundaries).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dummy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plate Stress Dummy Grid — dummy","text":"data.frame","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/earth_radius.html","id":null,"dir":"Reference","previous_headings":"","what":"Earth's radius in km — earth_radius","title":"Earth's radius in km — earth_radius","text":"IERS mean radius Earth km (based WGS 84)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/earth_radius.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Earth's radius in km — earth_radius","text":"","code":"earth_radius()"},{"path":"https://tobiste.github.io/tectonicr/reference/earth_radius.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Earth's radius in km — earth_radius","text":"numeric value","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/equivalent_rotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Equivalent rotation — equivalent_rotation","title":"Equivalent rotation — equivalent_rotation","text":"Transforms sequence rotations new reference system","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/equivalent_rotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Equivalent rotation — equivalent_rotation","text":"","code":"equivalent_rotation(x, fixed, rot)"},{"path":"https://tobiste.github.io/tectonicr/reference/equivalent_rotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Equivalent rotation — equivalent_rotation","text":"x Object class \"data.frame\" containing Euler poles plate rotations: plate.rot Moving plate lat, lon coordinates Euler pole angle Angle rotation plate.fix Fixed plate fixed plate regarded fixed. one x$plate.fix rot (optional) plate regarded rotating. one x$plate.rot.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/equivalent_rotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Equivalent rotation — equivalent_rotation","text":"sequence plate rotations new reference system. object class x","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/equivalent_rotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Equivalent rotation — equivalent_rotation","text":"","code":"data(nuvel1) # load the NUVEL1 rotation parameters  # all nuvel1 rotation equivalent to fixed Africa: equivalent_rotation(nuvel1, fixed = \"af\") #>    plate.rot        lat        lon     angle plate.fix #> af        af  90.000000    0.00000 0.0000000        af #> an        an  -5.729623  141.14853 0.1330674        af #> ar        ar  24.358850   24.41733 0.4163188        af #> au        au  12.575099   50.25300 0.6604014        af #> ca        ca -64.951860 -164.64172 0.1551761        af #> co        co  17.709052 -121.08039 1.3658002        af #> eu        eu -21.224307  159.74610 0.1283940        af #> in        in  23.801567   28.95037 0.4299189        af #> nz        nz  43.352648 -113.62807 0.4948982        af #> na        na -79.039887 -140.84695 0.2489005        af #> sa        sa -62.620310  140.61897 0.3237372        af #> jf        jf -36.503136   69.97118 0.8851710        af #> ph        ph -54.222891  -24.76214 1.0236334        af #> pa        pa -59.160000  106.82600 0.9695000        af # relative plate motion between Eurasia and India: equivalent_rotation(nuvel1, \"eu\", \"in\") #>    plate.rot      lat      lon     angle plate.fix #> in        in 24.57682 18.07207 0.5281698        eu"},{"path":"https://tobiste.github.io/tectonicr/reference/est.kappa.html","id":null,"dir":"Reference","previous_headings":"","what":"Concentration parameter of von Mises distribution — est.kappa","title":"Concentration parameter of von Mises distribution — est.kappa","text":"Computes maximum likelihood estimate \\(\\kappa\\), concentration parameter von Mises distribution, given set angular measurements.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/est.kappa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concentration parameter of von Mises distribution — est.kappa","text":"","code":"est.kappa(x, w = NULL, bias = FALSE, ...)"},{"path":"https://tobiste.github.io/tectonicr/reference/est.kappa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concentration parameter of von Mises distribution — est.kappa","text":"x numeric. angles degrees w numeric. weightings bias logical parameter determining whether bias correction used computation MLE. Default bias FALSE bias correction. ... optional paramters passed circular_mean()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/est.kappa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concentration parameter of von Mises distribution — est.kappa","text":"numeric.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/est.kappa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concentration parameter of von Mises distribution — est.kappa","text":"","code":"est.kappa(rvm(100, 90, 10), w = 1 / runif(100, 0, 10)) #> [1] 5.37677"},{"path":"https://tobiste.github.io/tectonicr/reference/euler_pole.html","id":null,"dir":"Reference","previous_headings":"","what":"Euler pole object — euler_pole","title":"Euler pole object — euler_pole","text":"Creates object orientation Euler pole axis","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_pole.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euler pole object — euler_pole","text":"","code":"euler_pole(x, y, z = NA, geo = TRUE, angle = NA)"},{"path":"https://tobiste.github.io/tectonicr/reference/euler_pole.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Euler pole object — euler_pole","text":"x latitude x coordinate Euler pole axis y longitude y z z coordinate geo logical, TRUE (default) Euler pole axis given geographical coordinates (latitude, longitude). FALSE given Cartesian coordinates (x, y, z) angle (optional) Angle rotation degrees (CCW rotation angle positive)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_pole.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Euler pole object — euler_pole","text":"object class \"euler.pole\" containing Euler pole axis geographical Cartesian coordinates angle rotation radians.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_pole.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Euler pole object — euler_pole","text":"","code":"euler_pole(90, 0, angle = 45) #>   lat lon x y z     angle #> 1  90   0 0 0 1 0.7853982 euler_pole(0, 0, 1, geo = FALSE) #>   lat lon x y z angle #> 1  90   0 0 0 1    NA"},{"path":"https://tobiste.github.io/tectonicr/reference/euler_to_Q4.html","id":null,"dir":"Reference","previous_headings":"","what":"Quaternion from Euler angle-axis representation for rotations — euler_to_Q4","title":"Quaternion from Euler angle-axis representation for rotations — euler_to_Q4","text":"Quaternion Euler angle-axis representation rotations","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_to_Q4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quaternion from Euler angle-axis representation for rotations — euler_to_Q4","text":"","code":"euler_to_Q4(x, normalize = FALSE)"},{"path":"https://tobiste.github.io/tectonicr/reference/euler_to_Q4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quaternion from Euler angle-axis representation for rotations — euler_to_Q4","text":"x \"euler.pole\" object normalize logical. Whether quaternion normalization applied (TRUE) (FALSE, default).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_to_Q4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quaternion from Euler angle-axis representation for rotations — euler_to_Q4","text":"object class \"quaternion\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":null,"dir":"Reference","previous_headings":"","what":"Azimuth Between two Points — get_azimuth","title":"Azimuth Between two Points — get_azimuth","text":"Calculate initial bearing (forward azimuth/direction) go point point b following great circle arc sphere.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Azimuth Between two Points — get_azimuth","text":"","code":"get_azimuth(lat_a, lon_a, lat_b, lon_b)"},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Azimuth Between two Points — get_azimuth","text":"lat_a, lat_b Numeric. Latitudes b (degrees). lon_a, lon_b Numeric. Longitudes b (degrees).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Azimuth Between two Points — get_azimuth","text":"numeric. Azimuth degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Azimuth Between two Points — get_azimuth","text":"get_azimuth() based spherical law tangents. formula initial bearing (sometimes referred forward azimuth) followed straight line along great circle arc lead start point end point b. $$\\theta = \\arctan2 (\\sin \\Delta\\lambda \\cos\\psi_2, \\cos\\psi_1 \\sin\\psi_1-\\sin\\psi_1 \\cos\\psi_2 \\cos\\Delta\\lambda)$$  \\(\\psi_1, \\lambda_1\\) start point, \\(\\psi_2\\), \\(\\lambda_2\\) end point (\\(\\Delta\\lambda\\) difference longitude).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Azimuth Between two Points — get_azimuth","text":"http://www.movable-type.co.uk/scripts/latlong.html","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Azimuth Between two Points — get_azimuth","text":"","code":"berlin <- c(52.517, 13.4) # Berlin tokyo <- c(35.7, 139.767) # Tokyo get_azimuth(berlin[1], berlin[2], tokyo[1], tokyo[2]) #> [1] 41.57361"},{"path":"https://tobiste.github.io/tectonicr/reference/get_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to Distance from plate boundary — get_distance","title":"Helper function to Distance from plate boundary — get_distance","text":"Helper function Distance plate boundary","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to Distance from plate boundary — get_distance","text":"","code":"get_distance(lon, lat, pb.coords, tangential, km)"},{"path":"https://tobiste.github.io/tectonicr/reference/get_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to Distance from plate boundary — get_distance","text":"lon, lat numeric vectors pb.coords matrix tangential, km logical","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/get_projected_pb_strike.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get Distance from plate boundary — get_projected_pb_strike","title":"Helper function to get Distance from plate boundary — get_projected_pb_strike","text":"Helper function get Distance plate boundary","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_projected_pb_strike.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get Distance from plate boundary — get_projected_pb_strike","text":"","code":"get_projected_pb_strike(lon, lat, pb.coords, pb.bearing, tangential)"},{"path":"https://tobiste.github.io/tectonicr/reference/get_projected_pb_strike.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get Distance from plate boundary — get_projected_pb_strike","text":"lon, lat, pb.bearing numeric vectors pb.coords matrix tangential logical","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/get_relrot.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to Equivalent rotation — get_relrot","title":"Helper function to Equivalent rotation — get_relrot","text":"Helper function Equivalent rotation","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_relrot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to Equivalent rotation — get_relrot","text":"","code":"get_relrot(plate.rot, lat, lon, angle, fixed, fixed.ep)"},{"path":"https://tobiste.github.io/tectonicr/reference/get_relrot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to Equivalent rotation — get_relrot","text":"plate.rot, fixed character numeric lat, lon, angle numeric fixed.ep data.frame","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/iceland.html","id":null,"dir":"Reference","previous_headings":"","what":"Example stress data for outward-moving displaced plate boundary — iceland","title":"Example stress data for outward-moving displaced plate boundary — iceland","text":"Subset World Stress Map (WSM) compilation information crustal present-day stress field (Version 1.1. 2019). Subset contains stress data Iceland.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/iceland.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example stress data for outward-moving displaced plate boundary — iceland","text":"","code":"data('iceland')"},{"path":"https://tobiste.github.io/tectonicr/reference/iceland.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example stress data for outward-moving displaced plate boundary — iceland","text":"object class \"sf\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/iceland.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example stress data for outward-moving displaced plate boundary — iceland","text":"https://www.world-stress-map.org/","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/iceland.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example stress data for outward-moving displaced plate boundary — iceland","text":"Heidbach, O., M. Rajabi, X. Cui, K. Fuchs, B. M<U+00FC>ller, J. Reinecker, K. Reiter, M. Tingay, F. Wenzel, F. Xie, M. O. Ziegler, M.-L. Zoback, M. D. Zoback (2018): World Stress Map database release 2016: Crustal stress pattern across scales. Tectonophysics, 744, 484-498, doi:10.1016/j.tecto.2018.07.007 .","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/iceland.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example stress data for outward-moving displaced plate boundary — iceland","text":"","code":"data(\"iceland\") head(iceland) #> Simple feature collection with 6 features and 11 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -22.09 ymin: 63.9 xmax: -20.29 ymax: 63.93 #> Geodetic CRS:  WGS 84 #> # A tibble: 6 × 12 #>   id         lat   lon   azi   unc type  depth quality regime Name   Description #>   <chr>    <dbl> <dbl> <dbl> <dbl> <chr> <dbl> <fct>   <chr>  <chr>  <chr>       #> 1 wsm22375  63.9 -20.3    30     3 FMF       6 A       S      frame… \"\"          #> 2 wsm22272  63.9 -22.1    38     4 FMF       3 A       T      frame… \"\"          #> 3 wsm22275  63.9 -22.1    35     4 FMF       3 A       NS     frame… \"\"          #> 4 wsm22276  63.9 -22.0    38     4 FMF       3 A       TS     frame… \"\"          #> 5 wsm22277  63.9 -22.0    20     4 FMF       3 A       S      frame… \"\"          #> 6 wsm22278  63.9 -22.0     0     4 FMF       3 A       S      frame… \"\"          #> # ℹ 1 more variable: geometry <POINT [°]>"},{"path":"https://tobiste.github.io/tectonicr/reference/is.Q4.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is quaternion — is.Q4","title":"Check if object is quaternion — is.Q4","text":"Check object quaternion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/is.Q4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is quaternion — is.Q4","text":"","code":"is.Q4(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/is.Q4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is quaternion — is.Q4","text":"x object class \"quaternion\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/is.Q4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if object is quaternion — is.Q4","text":"logical","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/is.euler.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is euler.pole — is.euler","title":"Check if object is euler.pole — is.euler","text":"Check object euler.pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/is.euler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is euler.pole — is.euler","text":"","code":"is.euler(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/is.euler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is euler.pole — is.euler","text":"x object class \"euler.pole\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/is.euler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if object is euler.pole — is.euler","text":"logical","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/kernel_dispersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Adaptive Kernel Dispersion — kernel_dispersion","title":"Adaptive Kernel Dispersion — kernel_dispersion","text":"Stress field wavelength analysis using circular dispersion (statistical estimators dispersion)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/kernel_dispersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adaptive Kernel Dispersion — kernel_dispersion","text":"","code":"kernel_dispersion(   x,   stat = c(\"dispersion\", \"nchisq\", \"rayleigh\"),   grid = NULL,   lon_range = NULL,   lat_range = NULL,   gridsize = 2.5,   min_data = 3,   threshold = 1,   arte_thres = 200,   dist_threshold = 0.1,   R_range = seq(100, 2000, 100),   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/kernel_dispersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adaptive Kernel Dispersion — kernel_dispersion","text":"x sf object containing azi Azimuth degree unc Uncertainties azimuth degree prd Predicted value azimuth stat measurement dispersion calculated. Either \"dispersion\" (default), \"nchisq\", \"rayleigh\" circular dispersion, normalized Chi-squared test statistic, Rayleigh test statistic. grid (optional) Point object class sf. lon_range, lat_range (optional) numeric vector specifying minimum maximum longitudes latitudes (ignored \"grid\" specified). gridsize Numeric. Target spacing regular grid decimal degree. Default 2.5. (ignored \"grid\" specified) min_data Integer. Minimum number data per bin. Default 3 threshold Numeric. Threshold stat value (default 1) arte_thres Numeric. Maximum distance (km) grid point next data point. Default 200 dist_threshold Numeric. Distance weight prevent overweight data nearby (0 1). Default 0.1 R_range Numeric value vector specifying (adaptive) kernel half-width(s) search radius (km). Default seq(50, 1000, 50) ... optional arguments dist_greatcircle()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/kernel_dispersion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adaptive Kernel Dispersion — kernel_dispersion","text":"sf object containing lon,lat longitude latitude degree stat output function defined stat R rearch radius km. mdr Mean distance datapoints per search radius N Number data points search radius","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/kernel_dispersion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adaptive Kernel Dispersion — kernel_dispersion","text":"","code":"data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") san_andreas_por <- san_andreas san_andreas_por$azi <- PoR_shmax(san_andreas, PoR, \"right\")$azi.PoR san_andreas_por$prd <- 135 kernel_dispersion(san_andreas_por) #> Simple feature collection with 800 features and 6 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -124.57 ymin: 24.33 xmax: -107.07 ymax: 39.33 #> Geodetic CRS:  WGS 84 #> # A tibble: 800 × 7 #> # Groups:   R [20] #>      lon   lat    stat     R    mdr     N        geometry #>    <dbl> <dbl>   <dbl> <dbl>  <dbl> <int>     <POINT [°]> #>  1 -115.  24.3 NA        100 NA         0 (-114.57 24.33) #>  2 -115.  24.3 NA        200 NA         1 (-114.57 24.33) #>  3 -115.  24.3  0.230    300  0.743     4 (-114.57 24.33) #>  4 -115.  24.3  0.111    400  0.816    18 (-114.57 24.33) #>  5 -115.  24.3  0.0759   500  0.876   107 (-114.57 24.33) #>  6 -115.  24.3  0.0706   600  0.800   172 (-114.57 24.33) #>  7 -115.  24.3  0.0712   700  0.721   202 (-114.57 24.33) #>  8 -115.  24.3  0.0718   800  0.640   208 (-114.57 24.33) #>  9 -115.  24.3  0.0736   900  0.607   231 (-114.57 24.33) #> 10 -115.  24.3  0.0633  1000  0.639   298 (-114.57 24.33) #> # ℹ 790 more rows"},{"path":"https://tobiste.github.io/tectonicr/reference/kuiper_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Kuiper Test of Circular Uniformity — kuiper_test","title":"Kuiper Test of Circular Uniformity — kuiper_test","text":"Kuiper test circular random distribution.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/kuiper_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kuiper Test of Circular Uniformity — kuiper_test","text":"","code":"kuiper_test(x, alpha = 0, axial = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/kuiper_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kuiper Test of Circular Uniformity — kuiper_test","text":"x numeric vector containing circular data expressed degrees alpha Significance level test. Valid levels 0.01, 0.05, 0.1. argument may omitted (NULL, default), case, range p-value returned. axial logical. Whether data axial, .e. \\(\\pi\\)-periodical (TRUE, default) circular, .e. \\(2 \\pi\\)-periodical (FALSE).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/kuiper_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kuiper Test of Circular Uniformity — kuiper_test","text":"list containing test statistic statistic significance level p.value.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/kuiper_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kuiper Test of Circular Uniformity — kuiper_test","text":"Kuiper's test statistic rotation-invariant Kolmogorov-type test statistic. critical values modified Kuiper's test statistic used according tabulation given Stephens (1970). statistic > p.value, null hypothesis rejected. , randomness (uniform distribution) excluded.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/kuiper_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kuiper Test of Circular Uniformity — kuiper_test","text":"","code":"# Example data from Mardia and Jupp (2001), pp. 93 pidgeon_homing <- c(55, 60, 65, 95, 100, 110, 260, 275, 285, 295) kuiper_test(pidgeon_homing, alpha = .05) #> Reject Null Hypothesis #> $statistic #> [1] 2.262115 #>  #> $p.value #> [1] 1.747 #>   # San Andreas Fault Data: data(san_andreas) data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") kuiper_test(sa.por$azi.PoR, alpha = .05) #> Reject Null Hypothesis #> $statistic #> [1] 16.36159 #>  #> $p.value #> [1] 1.747 #>"},{"path":"https://tobiste.github.io/tectonicr/reference/line_azimuth.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract azimuths of line segments — line_azimuth","title":"Extract azimuths of line segments — line_azimuth","text":"Extract azimuths line segments","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/line_azimuth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract azimuths of line segments — line_azimuth","text":"","code":"line_azimuth(x)  lines_azimuths(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/line_azimuth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract azimuths of line segments — line_azimuth","text":"x sf object type \"LINESTRING\" \"MULTILINESTRING\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/line_azimuth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract azimuths of line segments — line_azimuth","text":"sf object type \"POINT\" columns entries first row x","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/line_azimuth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract azimuths of line segments — line_azimuth","text":"recommended perform line_azimuth() single line objects, .e. type \"LINESTRING\", instead \"MULTILINESTRING\". azimuth last point line calculated first point next line otherwise. cause warning message. MULTILINESTRING objects, use lines_azimuths().","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/line_azimuth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract azimuths of line segments — line_azimuth","text":"","code":"data(\"plates\") subset(plates, pair == \"af-eu\") |>   smoothr::densify() |>   line_azimuth() #> Warning: It is recommended to only use single line objects #> Warning: repeating attributes for all sub-geometries for which they may not be constant #> Simple feature collection with 1861 features and 9 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -29.7698 ymin: 33.985 xmax: 20.3001 ymax: 39.412 #> Geodetic CRS:  WGS 84 #> First 10 features: #>         azi  pair plateA plateB       type displacement             name  nameA #> 1  275.6993 af-eu     af     eu convergent           in af-eu_convergent Africa #> 2  275.6991 af-eu     af     eu convergent           in af-eu_convergent Africa #> 3  275.6988 af-eu     af     eu convergent           in af-eu_convergent Africa #> 4  275.6986 af-eu     af     eu convergent           in af-eu_convergent Africa #> 5  275.6984 af-eu     af     eu convergent           in af-eu_convergent Africa #> 6  275.6982 af-eu     af     eu convergent           in af-eu_convergent Africa #> 7  275.6979 af-eu     af     eu convergent           in af-eu_convergent Africa #> 8  275.6977 af-eu     af     eu convergent           in af-eu_convergent Africa #> 9  275.6975 af-eu     af     eu convergent           in af-eu_convergent Africa #> 10 275.6972 af-eu     af     eu convergent           in af-eu_convergent Africa #>      nameB                   geometry #> 1  Eurasia   POINT (-5.80797 34.0191) #> 2  Eurasia POINT (-5.766831 34.01569) #> 3  Eurasia POINT (-5.725692 34.01228) #> 4  Eurasia POINT (-5.684553 34.00887) #> 5  Eurasia POINT (-5.643414 34.00546) #> 6  Eurasia POINT (-5.602275 34.00205) #> 7  Eurasia POINT (-5.561136 33.99864) #> 8  Eurasia POINT (-5.519997 33.99523) #> 9  Eurasia POINT (-5.478858 33.99182) #> 10 Eurasia POINT (-5.437719 33.98841)  if (FALSE) { lines_azimuths(plates) }"},{"path":"https://tobiste.github.io/tectonicr/reference/mean_resultant_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Resultant Length — mean_resultant_length","title":"Mean Resultant Length — mean_resultant_length","text":"Measure spread around circle. noted : R=0, data completely spread around circle. R=1, data completely concentrated one point.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/mean_resultant_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Resultant Length — mean_resultant_length","text":"","code":"mean_resultant_length(x, w = NULL, na.rm = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/mean_resultant_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Resultant Length — mean_resultant_length","text":"x numeric vector. Values degrees, mean, median standard deviation required. w (optional) Weights. vector positive numbers, length x. na.rm logical value indicating whether NA values x stripped computation proceeds.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/mean_resultant_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean Resultant Length — mean_resultant_length","text":"numeric.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/mean_resultant_length.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mean Resultant Length — mean_resultant_length","text":"Mardia, K.V. (1972). Statistics Directional Data: Probability Mathematical Statistics. London: Academic Press.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/mean_resultant_length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean Resultant Length — mean_resultant_length","text":"","code":"# Example data from Davis (1986), pp. 316 finland_stria <- c(   23, 27, 53, 58, 64, 83, 85, 88, 93, 99, 100, 105, 113,   113, 114, 117, 121, 123, 125, 126, 126, 126, 127, 127, 128, 128, 129, 132,   132, 132, 134, 135, 137, 144, 145, 145, 146, 153, 155, 155, 155, 157, 163,   165, 171, 172, 179, 181, 186, 190, 212 ) mean_resultant_length(finland_stria, w = NULL, na.rm = FALSE) # 0.800 #> [1] 0.8003694"},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Theoretical Direction of Maximum Horizontal Stress in the geographical reference system. — model_shmax","title":"Theoretical Direction of Maximum Horizontal Stress in the geographical reference system. — model_shmax","text":"Models direction maximum horizontal stress \\(\\sigma_{Hmax}\\) along great circles, small circles, loxodromes given point points according relative plate motion geographical coordinate reference system.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theoretical Direction of Maximum Horizontal Stress in the geographical reference system. — model_shmax","text":"","code":"model_shmax(df, euler)"},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theoretical Direction of Maximum Horizontal Stress in the geographical reference system. — model_shmax","text":"df data.frame containing coordinates point(s) (lat, lon). euler \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theoretical Direction of Maximum Horizontal Stress in the geographical reference system. — model_shmax","text":"data.frame gc Azimuth modeled \\(\\sigma_{Hmax}\\) following great circles sc Small circles ld.cw Clockwise loxodromes ld.ccw Counter-clockwise loxodromes","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Theoretical Direction of Maximum Horizontal Stress in the geographical reference system. — model_shmax","text":"\\(\\sigma_{Hmax}\\) following great circles (initial) bearing given point pole relative plate motion. \\(\\sigma_{Hmax}\\) along small circles, clockwise, counter-clockwise loxodromes 90\\(^{\\circ}\\), +45\\(^{\\circ}\\), 135\\(^{\\circ}\\) (-45\\(^{\\circ}\\)) great circle bearing, respectively.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Theoretical Direction of Maximum Horizontal Stress in the geographical reference system. — model_shmax","text":"Stephan, T., Enkelmann, E., Kroner, U. \"Analyzing horizontal orientation crustal stress adjacent plate boundaries\". Sci Rep 13. 15590 (2023). doi:10.1038/s41598-023-42433-2 .","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Theoretical Direction of Maximum Horizontal Stress in the geographical reference system. — model_shmax","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theoretical Direction of Maximum Horizontal Stress in the geographical reference system. — model_shmax","text":"","code":"data(\"nuvel1\") # North America relative to Pacific plate: euler <- subset(nuvel1, nuvel1$plate.rot == \"na\")  # the point where we mant to model the SHmax direction: point <- data.frame(lat = 45, lon = 20)  model_shmax(point, euler) #>         sc   ld.ccw       gc    ld.cw #> 1 42.45436 87.45436 132.4544 177.4544"},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalized Chi-Squared Test for Circular Data — norm_chisq","title":"Normalized Chi-Squared Test for Circular Data — norm_chisq","text":"quantitative comparison predicted observed directions \\(\\sigma_{Hmax}\\) obtained calculation average azimuth normalized \\(\\chi^2\\) test.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalized Chi-Squared Test for Circular Data — norm_chisq","text":"","code":"norm_chisq(obs, prd, unc)"},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalized Chi-Squared Test for Circular Data — norm_chisq","text":"obs Numeric vector containing observed azimuth \\(\\sigma_{Hmax}\\), length prd prd Numeric vector containing modeled azimuths \\(\\sigma_{Hmax}\\), .e. return object model_shmax() unc Uncertainty observed \\(\\sigma_{Hmax}\\), either numeric vector number","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalized Chi-Squared Test for Circular Data — norm_chisq","text":"Numeric vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalized Chi-Squared Test for Circular Data — norm_chisq","text":"normalized \\(\\chi^2\\) test $$ {Norm} \\chi^2_i =  = \\frac{    \\sum^M_{= 1} \\left( \\frac{\\alpha_i - \\alpha_{{predict}}}{\\sigma_i}    \\right) ^2}    {\\sum^M_{= 1} \\left( \\frac{90}{\\sigma_i} \\right) ^2 }$$ value chi-squared test statistic number 0 1 indicating quality predicted \\(\\sigma_{Hmax}\\) directions. Low values (\\(\\le 0.15\\)) indicate good agreement, high values (\\(> 0.7\\)) indicate systematic misfit predicted observed \\(\\sigma_{Hmax}\\) directions.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Normalized Chi-Squared Test for Circular Data — norm_chisq","text":"Wdowinski, S., 1998, theory intraplate tectonics. Journal Geophysical Research: Solid Earth, 103, 5037-5059, doi: 10.1029/97JB03390.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalized Chi-Squared Test for Circular Data — norm_chisq","text":"","code":"data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to # Pacific plate data(san_andreas) point <- data.frame(lat = 45, lon = 20) prd <- model_shmax(point, PoR) norm_chisq(obs = c(50, 40, 42), prd$sc, unc = c(10, NA, 5)) #> [1] 0.0007761934  data(san_andreas) prd2 <- PoR_shmax(san_andreas, PoR, type = \"right\") norm_chisq(obs = prd2$azi.PoR, 135, unc = san_andreas$unc) #> [1] 0.03296388"},{"path":"https://tobiste.github.io/tectonicr/reference/normalize_Q4.html","id":null,"dir":"Reference","previous_headings":"","what":"Quaternion normalization — normalize_Q4","title":"Quaternion normalization — normalize_Q4","text":"Quaternion normalization","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/normalize_Q4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quaternion normalization — normalize_Q4","text":"","code":"normalize_Q4(q)"},{"path":"https://tobiste.github.io/tectonicr/reference/normalize_Q4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quaternion normalization — normalize_Q4","text":"q quaternion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/normalize_Q4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quaternion normalization — normalize_Q4","text":"object class \"quaternion\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1.html","id":null,"dir":"Reference","previous_headings":"","what":"NUVEL-1 Global model of current plate motions — nuvel1","title":"NUVEL-1 Global model of current plate motions — nuvel1","text":"NNR-NUVEL-1 global model current plate motions DeMets et al. 1990","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NUVEL-1 Global model of current plate motions — nuvel1","text":"","code":"data('nuvel1')"},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NUVEL-1 Global model of current plate motions — nuvel1","text":"object class data.frame plate.name rotating plate plate.rot abbreviation plate's name lat,lon Coordinates Pole Rotation angle amount rotation (angle 1 Myr) plate.fix anchored plate, .e. plate.rot moves relative  plate.fix source Reference underlying study","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"NUVEL-1 Global model of current plate motions — nuvel1","text":"DeMets, C., Gordon, R. G., Argus, D. F., & Stein, S. (1990). Current plate motions. Geophysical Journal International, 101(2), 425-478. doi:10.1111/j.1365-246X.1990.tb06579.x .","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NUVEL-1 Global model of current plate motions — nuvel1","text":"","code":"data(\"nuvel1\") head(\"nuvel1\") #> [1] \"nuvel1\""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1_plates.html","id":null,"dir":"Reference","previous_headings":"","what":"Plate Boundaries on the Earth — nuvel1_plates","title":"Plate Boundaries on the Earth — nuvel1_plates","text":"Global set present plate boundaries Earth based NUVEL-1 model DeMets et al. 1990","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1_plates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plate Boundaries on the Earth — nuvel1_plates","text":"","code":"data('nuvel1_plates')"},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1_plates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Plate Boundaries on the Earth — nuvel1_plates","text":"object class sf","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1_plates.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plate Boundaries on the Earth — nuvel1_plates","text":"DeMets, C., Gordon, R. G., Argus, D. F., & Stein, S. (1990). Current plate motions. Geophysical Journal International, 101(2), 425-478. doi:10.1111/j.1365-246X.1990.tb06579.x .","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1_plates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plate Boundaries on the Earth — nuvel1_plates","text":"","code":"data(\"nuvel1_plates\") head(\"nuvel1_plates\") #> [1] \"nuvel1_plates\""},{"path":"https://tobiste.github.io/tectonicr/reference/parse_wsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Numerical values to World Stress Map Quality Ranking — parse_wsm","title":"Numerical values to World Stress Map Quality Ranking — parse_wsm","text":"Assigns numeric values precision measurement categorical quality ranking World Stress Map (, B, C, D).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/parse_wsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Numerical values to World Stress Map Quality Ranking — parse_wsm","text":"","code":"parse_wsm_quality(x)  quantise_wsm_quality(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/parse_wsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numerical values to World Stress Map Quality Ranking — parse_wsm","text":"x Either string character vector WSM quality ranking","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/parse_wsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Numerical values to World Stress Map Quality Ranking — parse_wsm","text":"\"integer\" vector type \"integer\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/parse_wsm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Numerical values to World Stress Map Quality Ranking — parse_wsm","text":"Heidbach, O., Barth, ., M<U+00FC>ller, B., Reinecker, J., Stephansson, O., Tingay, M., Zang, . (2016). WSM quality ranking scheme, database description analysis guidelines stress indicator. World Stress Map Technical Report 16-01, GFZ German Research Centre Geosciences. doi:10.2312/wsm.2016.001","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/parse_wsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Numerical values to World Stress Map Quality Ranking — parse_wsm","text":"","code":"parse_wsm_quality(c(\"A\", \"B\", \"C\", \"D\", NA)) #> Error in parse_wsm_quality(c(\"A\", \"B\", \"C\", \"D\", NA)): could not find function \"parse_wsm_quality\" data(\"san_andreas\") parse_wsm_quality(san_andreas$quality) #> Error in parse_wsm_quality(san_andreas$quality): could not find function \"parse_wsm_quality\""},{"path":"https://tobiste.github.io/tectonicr/reference/pb2002.html","id":null,"dir":"Reference","previous_headings":"","what":"Global model of current plate motions — pb2002","title":"Global model of current plate motions — pb2002","text":"PB2002 global model current plate motions Bird 2003","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/pb2002.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global model of current plate motions — pb2002","text":"","code":"data('pb2002')"},{"path":"https://tobiste.github.io/tectonicr/reference/pb2002.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Global model of current plate motions — pb2002","text":"object class data.frame plate.name rotating plate plate.rot abbreviation plate's name lat,lon Coordinates Pole Rotation angle amount rotation (angle 1 Myr) plate.fix anchored plate, .e. plate.rot moves relative plate.fix source Reference underlying study","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/pb2002.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global model of current plate motions — pb2002","text":"Bird, P. (2003), updated digital model plate boundaries, Geochem. Geophys. Geosyst., 4, 1027, doi: 10.1029/2001GC000252, 3.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/pb2002.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global model of current plate motions — pb2002","text":"","code":"data(\"pb2002\") head(\"pb2002\") #> [1] \"pb2002\""},{"path":"https://tobiste.github.io/tectonicr/reference/plates.html","id":null,"dir":"Reference","previous_headings":"","what":"Plate Boundaries on the Earth — plates","title":"Plate Boundaries on the Earth — plates","text":"Global set present plate boundaries Earth based PB2002 model Bird (2003). Contains plate boundary displacement types inward, outward, tangentially displacement.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/plates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plate Boundaries on the Earth — plates","text":"","code":"data('plates')"},{"path":"https://tobiste.github.io/tectonicr/reference/plates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Plate Boundaries on the Earth — plates","text":"object class sf","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/plates.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plate Boundaries on the Earth — plates","text":"Bird, P. (2003), updated digital model plate boundaries, Geochem. Geophys. Geosyst., 4, 1027, doi: 10.1029/2001GC000252, 3.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/plates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plate Boundaries on the Earth — plates","text":"","code":"data(\"plates\") head(\"plates\") #> [1] \"plates\""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between spherical PoR to geographical coordinate system — por_transformation_df","title":"Conversion between spherical PoR to geographical coordinate system — por_transformation_df","text":"Transformation spherical PoR geographical coordinate system vice versa","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between spherical PoR to geographical coordinate system — por_transformation_df","text":"","code":"geographical_to_PoR(x, PoR)  PoR_to_geographical(x, PoR)"},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between spherical PoR to geographical coordinate system — por_transformation_df","text":"x \"data.frame\" containing lat lon coordinates point geographical CRS lat.PoR, lon.PoR) point PoR CRS. PoR Pole Rotation. \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion between spherical PoR to geographical coordinate system — por_transformation_df","text":"\"data.frame\" transformed coordinates (lat.PoR lon.PoR PoR CRS, lat lon geographical CRS).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion between spherical PoR to geographical coordinate system — por_transformation_df","text":"","code":"data(\"nuvel1\") por <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to Pacific plate data(\"san_andreas\") san_andreas.por <- geographical_to_PoR(san_andreas, por) head(san_andreas.por) #>    lat.PoR   lon.PoR #> 1 56.93219 -82.67182 #> 2 58.01202 -74.48278 #> 3 57.93239 -74.80319 #> 4 57.83707 -75.51138 #> 5 58.17336 -76.62093 #> 6 57.84485 -76.16849 head(PoR_to_geographical(san_andreas.por, por)) #>      lat      lon #> 1 35.714 -119.966 #> 2 32.940 -115.627 #> 3 33.017 -115.831 #> 4 33.242 -116.209 #> 5 33.909 -116.350 #> 6 33.515 -116.471"},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_quat.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between PoR to geographical coordinate system using quaternions — por_transformation_quat","title":"Conversion between PoR to geographical coordinate system using quaternions — por_transformation_quat","text":"Helper function transformation PoR geographical coordinate system vice versa","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_quat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between PoR to geographical coordinate system using quaternions — por_transformation_quat","text":"","code":"geographical_to_PoR_quat(x, PoR)  PoR_to_geographical_quat(x, PoR)"},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_quat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between PoR to geographical coordinate system using quaternions — por_transformation_quat","text":"x, PoR two-column vectors containing lat lon coordinates","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_quat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion between PoR to geographical coordinate system using quaternions — por_transformation_quat","text":"two-element numeric vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_quat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion between PoR to geographical coordinate system using quaternions — por_transformation_quat","text":"","code":"ep.geo <- c(20, 33) q.geo <- c(10, 45) q.por <- geographical_to_PoR_quat(q.geo, ep.geo) q.por #> [1] 74.70603 50.91863 PoR_to_geographical_quat(q.por, ep.geo) #> [1] 10 45"},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","title":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","text":"Transform spatial objects PoR geographical coordinate reference system vice versa.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","text":"","code":"PoR_to_geographical_sf(x, PoR)  geographical_to_PoR_sf(x, PoR)"},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","text":"x sf, SpatRast, Raster* object data points geographical PoR coordinate system PoR Pole Rotation. \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","text":"sf SpatRast object data points transformed geographical PoR coordinate system","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_sf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","text":"PoR coordinate reference system oblique transformation geographical coordinate system Euler pole coordinates translation factors.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","text":"","code":"data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to Pacific plate data(\"san_andreas\") san_andreas.por <- geographical_to_PoR_sf(san_andreas, PoR) PoR_to_geographical_sf(san_andreas.por, PoR) #> Simple feature collection with 1082 features and 9 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -125.82 ymin: 23.08 xmax: -108 ymax: 39.94 #> Geodetic CRS:  WGS 84 #> # A tibble: 1,082 × 10 #>    id         lat   lon   azi   unc type  depth quality regime #>  * <chr>    <dbl> <dbl> <dbl> <dbl> <chr> <dbl> <fct>   <chr>  #>  1 wsm07786  35.7 -120.    36     1 HF      1.3 A       S      #>  2 wsm11750  32.9 -116.     7     1 FMF     7   A       S      #>  3 wsm11759  33.0 -116.   169     1 FMF     5   A       S      #>  4 wsm11782  33.2 -116.     1     1 FMF     8   A       S      #>  5 wsm11801  33.9 -116.    23     1 FMF     6   A       S      #>  6 wsm11830  33.5 -116.   160     1 FMF     9   A       S      #>  7 wsm11842  34.1 -117.     4     1 FMF     6   A       S      #>  8 wsm11854  34.1 -117.   180     1 FMF     7   A       S      #>  9 wsm11863  34.2 -117.   176     1 FMF    10   A       S      #> 10 wsm11892  33.9 -117.   178     1 FMF    13   A       S      #> # ℹ 1,072 more rows #> # ℹ 1 more variable: geometry <POINT [°]>"},{"path":"https://tobiste.github.io/tectonicr/reference/prd_err.html","id":null,"dir":"Reference","previous_headings":"","what":"Error of Model's Prediction — prd_err","title":"Error of Model's Prediction — prd_err","text":"maximum error model's predicted azimuth given Pole rotations uncertainty distance data point pole.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/prd_err.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error of Model's Prediction — prd_err","text":"","code":"prd_err(dist_PoR, sigma_PoR = 1)"},{"path":"https://tobiste.github.io/tectonicr/reference/prd_err.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error of Model's Prediction — prd_err","text":"dist_PoR Distance Euler pole (great circle distance, degree) sigma_PoR uncertainty position Pole rotation (degree).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/prd_err.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Error of Model's Prediction — prd_err","text":"numeric vector. maximum error azimuths prediction (degree)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/prd_err.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Error of Model's Prediction — prd_err","text":"Ramsay, J.. Folding fracturing rocks. McGraw-Hill, New York, 1967.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/prd_err.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Error of Model's Prediction — prd_err","text":"","code":"prd_err(67, 1) #> [1] 0.9060055"},{"path":"https://tobiste.github.io/tectonicr/reference/product_Q4.html","id":null,"dir":"Reference","previous_headings":"","what":"Product of quaternions — product_Q4","title":"Product of quaternions — product_Q4","text":"Helper function multiplication two quaternions. Concatenation two rotations R1 followed R2","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/product_Q4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Product of quaternions — product_Q4","text":"","code":"product_Q4(q1, q2, normalize = FALSE)"},{"path":"https://tobiste.github.io/tectonicr/reference/product_Q4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Product of quaternions — product_Q4","text":"q1, q2 two objects class \"quaternion\". first rotation R1 expressed q1 followed second rotation R2 expressed q2 normalize logical. Whether quaternion normalization applied (TRUE) (FALSE, default).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/product_Q4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Product of quaternions — product_Q4","text":"object class \"quaternion\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/product_Q4.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Product of quaternions — product_Q4","text":"Multiplication commutative.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":null,"dir":"Reference","previous_headings":"","what":"Strike of the plate boundary projected on data point — projected_pb_strike","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"fault's strike PoR CRS projected data point along predicted stress trajectories.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"","code":"projected_pb_strike(x, PoR, pb, tangential = FALSE, ...)"},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"x, pb sf objects data points plate boundary geometries geographical coordinate system PoR Pole rotation. \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole tangential Logical. Whether plate boundary tangential boundary (TRUE) inward outward boundary (FALSE, default). ... optional arguments passed smoothr::densify()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"Numeric vector strike direction plate boundary (degree)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"Useful calculate beta angle, .e. angle SHmax direction (PoR CRS!) fault's strike (PoR CRS). beta angle geographical PoR coordinates.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"algorithm calculates great circle bearing line vertices. Since transform plate boundaries represent small circle lines PoR system, great-circle azimuth approximation true (small-circle) azimuth.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"","code":"data(\"nuvel1\") na_pa <- subset(nuvel1, nuvel1$plate.rot == \"na\")  data(\"plates\") plate_boundary <- subset(plates, plates$pair == \"na-pa\")  data(\"san_andreas\") res <- projected_pb_strike(   x = san_andreas, PoR = na_pa, pb = plate_boundary, tangential = TRUE ) head(res) #> [1] 84.78438 89.40693 81.54405 83.80421 75.27521 83.81087 head(san_andreas$azi - res) # beta angle #> [1] -48.78438 -82.40693  87.45595 -82.80421 -52.27521  76.18913"},{"path":"https://tobiste.github.io/tectonicr/reference/quick_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting stress analysis results — quick_plot","title":"Plotting stress analysis results — quick_plot","text":"Creates set plots including azimuth function distance plate boundary, Norm Chi-squared function distance plate boundary, circular distance (dispersion) function distance plate boundary, rose diagram frequency distribution azimuths.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/quick_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting stress analysis results — quick_plot","text":"","code":"quick_plot(azi, distance, prd, unc = NULL, regime, width = 51)"},{"path":"https://tobiste.github.io/tectonicr/reference/quick_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting stress analysis results — quick_plot","text":"azi numeric. Azimuth \\(\\sigma_{Hmax}\\) distance numeric. Distance plate boundary prd numeric. predicted direction \\(\\sigma_{Hmax}\\) unc numeric. Uncertainty observed \\(\\sigma_{Hmax}\\), either numeric vector number regime character vector. stress regime (following classification World Stress Map) width integer. window width (number observations) moving average azimuths, circular dispersion, Norm Chi-square statistics. NULL, optimal width estimated.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/quick_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting stress analysis results — quick_plot","text":"four R base plots","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/quick_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plotting stress analysis results — quick_plot","text":"Plot 1 shows transformed azimuths function distance plate boundary. red line indicates rolling circular mean, stippled red lines indicate 95% confidence interval mean. Plot 2 shows normalized \\(\\chi^2\\) statistics function distance plate boundary. red line shows rolling \\(\\chi^2\\) statistic. Plot 3 shows circular distance transformed azimuths predicted azimuth, function distance plate boundary. red line shows rolling circular dispersion prediction. Plot 4 give rose diagram transformed azimuths.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/quick_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting stress analysis results — quick_plot","text":"","code":"data(\"nuvel1\") na_pa <- subset(nuvel1, nuvel1$plate.rot == \"na\")  data(\"plates\") plate_boundary <- subset(plates, plates$pair == \"na-pa\")  data(\"san_andreas\") res <- PoR_shmax(san_andreas, na_pa, \"right\") d <- distance_from_pb(san_andreas, na_pa, plate_boundary, tangential = TRUE) quick_plot(res$azi.PoR, d, res$prd, san_andreas$unc, san_andreas$regime)"},{"path":"https://tobiste.github.io/tectonicr/reference/raster_transformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between PoR to geographical coordinate reference system of raster data — raster_transformation","title":"Conversion between PoR to geographical coordinate reference system of raster data — raster_transformation","text":"Helper function transform raster data set PoR geographical coordinates","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/raster_transformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between PoR to geographical coordinate reference system of raster data — raster_transformation","text":"","code":"geographical_to_PoR_raster(x, PoR)  PoR_to_geographical_raster(x, PoR)"},{"path":"https://tobiste.github.io/tectonicr/reference/raster_transformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between PoR to geographical coordinate reference system of raster data — raster_transformation","text":"x \"SpatRaster\" \"RasterLayer\" PoR Pole Rotation. \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/raster_transformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion between PoR to geographical coordinate reference system of raster data — raster_transformation","text":"terra \"SpatRaster\" object","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rayleigh_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Rayleigh Test of Circular Uniformity — rayleigh_test","title":"Rayleigh Test of Circular Uniformity — rayleigh_test","text":"Performs Rayleigh test uniformity (randomness), assessing significance mean resultant length. alternative hypothesis unimodal distribution unknown mean direction unknown mean resultant length mu NULL. mu specified alternative hypothesis unimodal distribution specified mean direction unknown mean resultant length.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rayleigh_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rayleigh Test of Circular Uniformity — rayleigh_test","text":"","code":"rayleigh_test(x, mu = NULL, axial = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/rayleigh_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rayleigh Test of Circular Uniformity — rayleigh_test","text":"x numeric vector. Values degrees mu (optional) specified known mean direction (degrees) alternative hypothesis axial logical. Whether data axial, .e. \\(\\pi\\)-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rayleigh_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rayleigh Test of Circular Uniformity — rayleigh_test","text":"list components: statistic mean resultant length p.value significance level test statistic p.value2 modified significance level (Cordeiro Ferrari, 1991)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rayleigh_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rayleigh Test of Circular Uniformity — rayleigh_test","text":"statistic > p.value, null hypothesis rejected, .e. length mean resultant differs significantly zero. , randomness (uniform distribution) excluded.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rayleigh_test.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Rayleigh Test of Circular Uniformity — rayleigh_test","text":"Although Rayleigh test consistent (non-uniform) von Mises alternatives, consistent alternatives p = 0 (particular, distributions antipodal symmetry, .e. axial data). Tests non-uniformity consistent alternatives include Kuiper<U+2019>s test (kuiper_test()) Watson<U+2019>s \\(U^2\\) test (watson_test()).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rayleigh_test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rayleigh Test of Circular Uniformity — rayleigh_test","text":"Mardia Jupp (2000). Directional Statistics. John Wiley Sons. Wilkie (1983): Rayleigh Test Randomness Circular Data. Appl. Statist. 32, . 3, pp. 311-312 Jammalamadaka, S. Rao Sengupta, . (2001). Topics Circular Statistics, Sections 3.3.3 3.4.1, World Scientific Press, Singapore.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/rayleigh_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rayleigh Test of Circular Uniformity — rayleigh_test","text":"","code":"# Example data from Mardia and Jupp (2001), pp. 93 pidgeon_homing <- c(55, 60, 65, 95, 100, 110, 260, 275, 285, 295) rayleigh_test(pidgeon_homing, axial = FALSE) #> Do Not Reject Null Hypothesis #> $statistic #> [1] 0.2228717 #>  #> $p.value #> [1] 0.6201354 #>  #> $p.value2 #> [1] 0.631502 #>   # Example data from Davis (1986), pp. 316 finland_stria <- c(   23, 27, 53, 58, 64, 83, 85, 88, 93, 99, 100, 105, 113,   113, 114, 117, 121, 123, 125, 126, 126, 126, 127, 127, 128, 128, 129, 132,   132, 132, 134, 135, 137, 144, 145, 145, 146, 153, 155, 155, 155, 157, 163,   165, 171, 172, 179, 181, 186, 190, 212 ) rayleigh_test(finland_stria, axial = FALSE) #> Reject Null Hypothesis #> $statistic #> [1] 0.8003694 #>  #> $p.value #> [1] 6.479397e-15 #>  #> $p.value2 #> [1] 4.768544e-17 #>  rayleigh_test(finland_stria, mu = 105, axial = FALSE) #> Reject Null Hypothesis #> $statistic #> [1] 0.7300887 #>  #> $p.value #> [1] 2.130845e-13 #>   # Example data from Mardia and Jupp (2001), pp. 99 atomic_weight <- c(   rep(0, 12), rep(3.6, 1), rep(36, 6), rep(72, 1),   rep(108, 2), rep(169.2, 1), rep(324, 1) ) rayleigh_test(atomic_weight, 0, axial = FALSE) #> Reject Null Hypothesis #> $statistic #> [1] 0.7237434 #>  #> $p.value #> [1] 5.348331e-08 #>   # San Andreas Fault Data: data(san_andreas) rayleigh_test(san_andreas$azi) #> Reject Null Hypothesis #> $statistic #> [1] 0.6865633 #>  #> $p.value #> [1] 3.166033e-222 #>  #> $p.value2 #> [1] 3.168593e-248 #>  data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") rayleigh_test(sa.por$azi.PoR, mu = 135) #> Reject Null Hypothesis #> $statistic #> [1] 0.7050632 #>  #> $p.value #> [1] 6.577035e-233 #>"},{"path":"https://tobiste.github.io/tectonicr/reference/relative_rotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative rotation between two rotations — relative_rotation","title":"Relative rotation between two rotations — relative_rotation","text":"Calculates relative rotation two rotations, .e. difference rotation 1 rotation 2.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/relative_rotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative rotation between two rotations — relative_rotation","text":"","code":"relative_rotation(r1, r2)"},{"path":"https://tobiste.github.io/tectonicr/reference/relative_rotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative rotation between two rotations — relative_rotation","text":"r1, r2 Objects class \"euler.pole\". First rotation r1, followed rotation r2.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/relative_rotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relative rotation between two rotations — relative_rotation","text":"list. Euler axes (geographical coordinates) Euler angles (degrees)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/relative_rotation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Relative rotation between two rotations — relative_rotation","text":"Schaeben, H., Kroner, U. Stephan, T. (2021). Euler Poles Tectonic Plates. B. S. Daza Sagar, Q. Cheng, J. McKinley F. Agterberg (Eds.), Encyclopedia Mathematical Geosciences. Encyclopedia Earth Sciences Series (pp. 1--7). Springer Nature Switzerland AG 2021. doi: 10.1007/978-3-030-26050-7_435-1.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/relative_rotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relative rotation between two rotations — relative_rotation","text":"","code":"a <- euler_pole(90, 0, angle = 45) b <- euler_pole(0, 0, 1, geo = FALSE, angle = -15) relative_rotation(a, b) #> $axis #> [1]  -90 -180 #>  #> $angle #> [1] 60 #>  relative_rotation(b, a) #> $axis #> [1] 90  0 #>  #> $angle #> [1] 60 #>"},{"path":"https://tobiste.github.io/tectonicr/reference/roll_circstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Rolling Functions using Circular Statistics — roll_circstats","title":"Apply Rolling Functions using Circular Statistics — roll_circstats","text":"generic function applying function rolling margins array.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/roll_circstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Rolling Functions using Circular Statistics — roll_circstats","text":"","code":"roll_circstats(   x,   w = NULL,   FUN,   axial = TRUE,   na.rm = TRUE,   width = NULL,   by.column = FALSE,   partial = TRUE,   fill = NA,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/roll_circstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Rolling Functions using Circular Statistics — roll_circstats","text":"x numeric vector. Values degrees. w (optional) Weights. vector positive numbers length x. FUN function applied axial logical. Whether data axial, .e. pi-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). na.rm logical value indicating whether NA values x stripped computation proceeds. width integer specifying window width (numbers observations) aligned original sample according align argument. NULL, optimal width calculated. .column logical. TRUE, FUN applied column separately. partial logical numeric. FALSE FUN applied indexes rolling window within observed time range. TRUE (default), subset indexes range passed FUN. numeric argument partial can used determine minimal window size partial computations. See details. fill three-component vector list (recycled otherwise) providing filling values left/within/right data range. See fill argument zoo::na.fill() details ... Arguments passed zoo::rollapply","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/roll_circstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Rolling Functions using Circular Statistics — roll_circstats","text":"numeric vector  results rolling function.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/roll_circstats.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Apply Rolling Functions using Circular Statistics — roll_circstats","text":"rolling statistics applied values function distance recommended sort values first.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/roll_circstats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Rolling Functions using Circular Statistics — roll_circstats","text":"","code":"data(\"plates\") plate_boundary <- subset(plates, plates$pair == \"na-pa\") data(\"san_andreas\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") distance <- distance_from_pb(   x = san_andreas,   PoR = PoR,   pb = plate_boundary,   tangential = TRUE ) dat <- san_andreas[order(distance), ] roll_circstats(dat$azi, w = 1 / dat$unc, circular_mean, width = 51) #>    [1] 1.799880e+02 1.781512e+02 1.131229e+00 2.766417e+00 3.293337e+00 #>    [6] 1.786585e+02 2.748376e-01 1.758607e+02 1.791289e+02 1.973633e+00 #>   [11] 5.458127e-01 3.985705e+00 6.240060e+00 8.770752e+00 9.678773e+00 #>   [16] 1.146947e+01 1.416107e+01 1.573097e+01 1.563816e+01 1.452885e+01 #>   [21] 1.449640e+01 1.645686e+01 1.773216e+01 1.743290e+01 1.827424e+01 #>   [26] 1.888893e+01 1.770917e+01 1.937728e+01 1.967932e+01 1.942700e+01 #>   [31] 1.747167e+01 1.728358e+01 1.803578e+01 1.986190e+01 2.074096e+01 #>   [36] 1.976085e+01 1.802012e+01 1.931366e+01 1.970729e+01 2.019971e+01 #>   [41] 2.011505e+01 2.051239e+01 2.098816e+01 2.156617e+01 2.293464e+01 #>   [46] 2.247734e+01 2.136619e+01 2.279837e+01 2.298704e+01 2.784930e+01 #>   [51] 2.825105e+01 2.785199e+01 2.840017e+01 2.911850e+01 2.828752e+01 #>   [56] 2.846513e+01 2.783995e+01 2.814745e+01 2.742901e+01 2.704045e+01 #>   [61] 2.611966e+01 2.694009e+01 2.670834e+01 2.601247e+01 2.467404e+01 #>   [66] 2.541054e+01 2.446047e+01 2.344018e+01 2.327115e+01 2.315653e+01 #>   [71] 2.248538e+01 2.172197e+01 1.969198e+01 1.847852e+01 2.026018e+01 #>   [76] 1.782430e+01 1.688439e+01 2.496475e+01 2.429514e+01 2.317905e+01 #>   [81] 2.320207e+01 2.364674e+01 2.260598e+01 2.197656e+01 2.141891e+01 #>   [86] 2.074532e+01 2.128483e+01 1.850251e+01 1.618467e+01 1.527770e+01 #>   [91] 1.516811e+01 1.333039e+01 1.347116e+01 1.151906e+01 1.100356e+01 #>   [96] 1.081148e+01 1.122993e+01 1.104133e+01 1.100476e+01 1.099454e+01 #>  [101] 1.071068e+01 1.087510e+01 1.060901e+01 1.128341e+01 1.128214e+01 #>  [106] 1.085218e+01 1.071692e+01 1.081962e+01 1.068433e+01 1.048972e+01 #>  [111] 1.028551e+01 1.026971e+01 1.073422e+01 1.133495e+01 1.177118e+01 #>  [116] 1.204443e+01 1.250181e+01 1.297159e+01 1.318690e+01 1.244898e+01 #>  [121] 1.246948e+01 1.263888e+01 1.245280e+01 1.291046e+01 1.362962e+01 #>  [126] 1.338372e+01 1.362039e+01 1.298507e+01 1.266192e+01 1.274728e+01 #>  [131] 1.285078e+01 1.290084e+01 1.281577e+01 1.275748e+01 1.266277e+01 #>  [136] 1.240498e+01 1.273823e+01 1.219976e+01 1.262713e+01 1.279108e+01 #>  [141] 1.263105e+01 1.258856e+01 1.286666e+01 1.319936e+01 1.438071e+01 #>  [146] 1.456211e+01 1.448489e+01 1.458781e+01 1.460959e+01 1.433592e+01 #>  [151] 1.491954e+01 1.482692e+01 1.491847e+01 1.484308e+01 1.458227e+01 #>  [156] 1.463578e+01 1.500156e+01 1.504699e+01 1.498705e+01 1.529420e+01 #>  [161] 1.519023e+01 1.553296e+01 1.558169e+01 1.535852e+01 1.471882e+01 #>  [166] 1.411903e+01 1.399138e+01 1.383255e+01 1.211596e+01 1.142042e+01 #>  [171] 1.180731e+01 1.169308e+01 1.165315e+01 1.115569e+01 1.107278e+01 #>  [176] 1.041848e+01 1.041665e+01 1.064084e+01 1.116088e+01 1.100559e+01 #>  [181] 1.055595e+01 1.045103e+01 1.059499e+01 1.057232e+01 1.005224e+01 #>  [186] 1.049944e+01 1.012811e+01 1.102465e+01 1.148942e+01 1.162378e+01 #>  [191] 1.145402e+01 1.172641e+01 1.189999e+01 1.339250e+01 1.298544e+01 #>  [196] 1.243287e+01 1.244368e+01 1.264826e+01 1.201444e+01 1.201502e+01 #>  [201] 1.161483e+01 1.118454e+01 1.145677e+01 1.145677e+01 1.204067e+01 #>  [206] 1.201657e+01 1.239217e+01 1.243788e+01 1.253644e+01 1.251777e+01 #>  [211] 1.258188e+01 1.275712e+01 1.260710e+01 1.249972e+01 1.268060e+01 #>  [216] 1.292445e+01 1.338116e+01 1.374992e+01 1.375100e+01 1.456712e+01 #>  [221] 1.531486e+01 1.564990e+01 1.583155e+01 1.518691e+01 1.641446e+01 #>  [226] 1.646060e+01 1.739376e+01 1.762968e+01 1.787638e+01 1.779503e+01 #>  [231] 1.739276e+01 1.821232e+01 1.900040e+01 1.776594e+01 1.548916e+01 #>  [236] 1.685417e+01 1.666292e+01 1.878193e+01 1.782351e+01 1.783822e+01 #>  [241] 1.379040e+01 1.423716e+01 1.403078e+01 1.315955e+01 1.008111e+01 #>  [246] 1.041979e+01 1.053829e+01 1.040386e+01 1.000931e+01 9.823722e+00 #>  [251] 1.135727e+01 1.310124e+01 1.192704e+01 1.123435e+01 1.095682e+01 #>  [256] 7.479820e+00 7.263160e+00 6.217212e+00 6.624945e+00 6.638394e+00 #>  [261] 6.781584e+00 6.048499e+00 5.540599e+00 6.630181e+00 6.033846e+00 #>  [266] 5.988418e+00 6.156154e+00 5.841621e+00 5.232956e+00 4.783853e+00 #>  [271] 5.844336e+00 5.820196e+00 5.615648e+00 7.278987e+00 7.623596e+00 #>  [276] 7.455359e+00 7.370807e+00 6.051748e+00 5.969736e+00 5.681078e+00 #>  [281] 5.903160e+00 5.725819e+00 5.993320e+00 4.247610e+00 5.613597e+00 #>  [286] 8.218339e+00 7.834781e+00 8.152186e+00 4.338298e+00 4.759506e+00 #>  [291] 4.985090e+00 1.229417e+01 1.089316e+01 1.111727e+01 1.362455e+01 #>  [296] 1.588737e+01 1.515185e+01 1.530211e+01 1.576475e+01 1.564576e+01 #>  [301] 1.836142e+01 1.547439e+01 1.186251e+01 1.430741e+01 1.507537e+01 #>  [306] 1.503437e+01 2.410678e+01 2.596101e+01 2.603907e+01 2.541213e+01 #>  [311] 2.493127e+01 2.500999e+01 2.505969e+01 2.511766e+01 2.298483e+01 #>  [316] 2.542930e+01 2.735323e+01 2.719221e+01 2.674498e+01 2.615949e+01 #>  [321] 2.625343e+01 2.387148e+01 2.448052e+01 2.454602e+01 2.328121e+01 #>  [326] 2.529274e+01 2.568312e+01 2.792177e+01 2.827060e+01 2.808604e+01 #>  [331] 2.724520e+01 2.703141e+01 2.663038e+01 2.531477e+01 2.513878e+01 #>  [336] 2.663042e+01 2.622892e+01 2.627999e+01 2.656906e+01 2.566599e+01 #>  [341] 2.553676e+01 2.531593e+01 2.550808e+01 2.685508e+01 2.737019e+01 #>  [346] 2.748964e+01 2.779842e+01 2.788358e+01 2.777071e+01 2.755762e+01 #>  [351] 2.744777e+01 2.789147e+01 2.779644e+01 2.937354e+01 2.904947e+01 #>  [356] 2.883718e+01 2.870350e+01 2.772447e+01 2.724395e+01 2.698233e+01 #>  [361] 2.642175e+01 2.526199e+01 2.511793e+01 2.494037e+01 2.465927e+01 #>  [366] 2.455334e+01 2.176855e+01 1.897648e+01 1.867150e+01 1.877539e+01 #>  [371] 2.018485e+01 2.013155e+01 2.121047e+01 2.064099e+01 2.025556e+01 #>  [376] 1.994967e+01 1.936998e+01 1.799968e+01 1.638426e+01 1.600754e+01 #>  [381] 1.656524e+01 1.648767e+01 1.684617e+01 1.760287e+01 1.726388e+01 #>  [386] 1.712858e+01 1.474692e+01 1.473469e+01 1.459642e+01 1.420259e+01 #>  [391] 1.457898e+01 1.387914e+01 1.334433e+01 1.309605e+01 1.186469e+01 #>  [396] 1.167272e+01 1.182043e+01 1.182915e+01 1.162849e+01 1.091056e+01 #>  [401] 1.104973e+01 1.104489e+01 1.072397e+01 1.075883e+01 1.075919e+01 #>  [406] 1.084934e+01 1.092478e+01 1.092970e+01 9.988584e+00 1.082323e+01 #>  [411] 1.078290e+01 1.084189e+01 1.298993e+01 1.329179e+01 1.325614e+01 #>  [416] 1.278901e+01 1.352277e+01 1.441930e+01 1.552971e+01 1.524813e+01 #>  [421] 1.529688e+01 1.397210e+01 1.357412e+01 1.382488e+01 1.382488e+01 #>  [426] 1.379192e+01 1.218754e+01 1.208780e+01 1.245716e+01 1.235135e+01 #>  [431] 1.304305e+01 1.242447e+01 1.249762e+01 1.206602e+01 1.095972e+01 #>  [436] 1.151657e+01 1.205539e+01 1.300495e+01 1.317616e+01 1.295743e+01 #>  [441] 1.604230e+01 1.608395e+01 1.667768e+01 1.732321e+01 1.695588e+01 #>  [446] 1.659120e+01 1.676734e+01 1.676057e+01 1.774879e+01 1.810717e+01 #>  [451] 1.915984e+01 1.771417e+01 1.801641e+01 1.791481e+01 1.659633e+01 #>  [456] 1.672105e+01 1.686397e+01 1.731635e+01 1.732594e+01 1.944660e+01 #>  [461] 1.865322e+01 1.873896e+01 1.869832e+01 1.646490e+01 1.622575e+01 #>  [466] 1.660187e+01 1.657974e+01 1.572246e+01 1.798734e+01 1.794468e+01 #>  [471] 1.833958e+01 1.831400e+01 1.829971e+01 1.893606e+01 1.860607e+01 #>  [476] 1.844802e+01 1.870093e+01 1.943455e+01 1.958879e+01 1.740557e+01 #>  [481] 1.757130e+01 1.706734e+01 1.706734e+01 1.677760e+01 1.681961e+01 #>  [486] 1.723637e+01 1.703531e+01 1.656674e+01 1.632617e+01 1.364829e+01 #>  [491] 1.369161e+01 1.053895e+01 9.977180e+00 9.930888e+00 1.002672e+01 #>  [496] 1.093457e+01 1.098853e+01 1.071993e+01 1.120071e+01 9.989677e+00 #>  [501] 9.747484e+00 9.676119e+00 1.064782e+01 1.035964e+01 1.094947e+01 #>  [506] 1.200757e+01 1.153085e+01 1.126268e+01 1.105614e+01 1.103197e+01 #>  [511] 9.602378e+00 9.844189e+00 9.734760e+00 1.064604e+01 1.058250e+01 #>  [516] 1.183315e+01 1.156459e+01 1.054194e+01 1.056127e+01 9.140603e+00 #>  [521] 8.796832e+00 8.847774e+00 8.846254e+00 8.897945e+00 7.774815e+00 #>  [526] 7.958279e+00 7.664496e+00 7.714766e+00 8.349788e+00 7.820774e+00 #>  [531] 8.422774e+00 9.997581e+00 9.673542e+00 1.004982e+01 1.002785e+01 #>  [536] 1.001614e+01 1.023060e+01 1.035592e+01 1.014438e+01 1.092620e+01 #>  [541] 1.359612e+01 1.369688e+01 1.393879e+01 1.456103e+01 1.443067e+01 #>  [546] 1.540580e+01 1.473076e+01 1.514673e+01 1.494364e+01 1.400508e+01 #>  [551] 1.379176e+01 1.219377e+01 1.233701e+01 1.299223e+01 1.384387e+01 #>  [556] 1.308565e+01 1.306299e+01 1.313875e+01 1.462879e+01 1.463816e+01 #>  [561] 1.461762e+01 1.471700e+01 1.374020e+01 1.376564e+01 1.258281e+01 #>  [566] 1.257279e+01 1.149717e+01 1.165666e+01 1.302552e+01 1.334153e+01 #>  [571] 1.260308e+01 1.229989e+01 1.254407e+01 1.238763e+01 1.283407e+01 #>  [576] 1.484315e+01 1.485732e+01 1.519677e+01 1.477802e+01 1.483947e+01 #>  [581] 1.552192e+01 1.458054e+01 1.317315e+01 1.316781e+01 1.187839e+01 #>  [586] 1.172765e+01 1.225241e+01 1.081028e+01 1.014020e+01 9.743085e+00 #>  [591] 9.080135e+00 9.090376e+00 9.198445e+00 9.026651e+00 8.984524e+00 #>  [596] 8.604543e+00 8.010696e+00 7.862417e+00 7.353218e+00 7.289164e+00 #>  [601] 6.632808e+00 6.714605e+00 7.745942e+00 7.730123e+00 7.274176e+00 #>  [606] 6.273326e+00 6.644232e+00 6.720047e+00 6.553316e+00 3.281092e+00 #>  [611] 4.700235e+00 4.925625e+00 4.809669e+00 5.545999e+00 5.825763e+00 #>  [616] 5.967365e+00 7.313789e+00 7.479102e+00 7.166267e+00 7.465615e+00 #>  [621] 7.234727e+00 7.770171e+00 8.101184e+00 7.562180e+00 7.575929e+00 #>  [626] 6.763910e+00 6.777606e+00 6.411826e+00 5.182203e+00 4.808350e+00 #>  [631] 4.667555e+00 4.774163e+00 5.214451e+00 5.492558e+00 5.649903e+00 #>  [636] 5.100519e+00 4.515438e+00 4.515438e+00 4.879461e+00 5.352323e+00 #>  [641] 5.890314e+00 6.118710e+00 5.288996e+00 5.021460e+00 3.986181e+00 #>  [646] 4.299173e+00 4.804148e+00 4.394064e+00 4.556104e+00 4.589471e+00 #>  [651] 4.847157e+00 5.807504e+00 6.118049e+00 4.773599e+00 4.668971e+00 #>  [656] 4.309788e+00 4.379198e+00 3.723744e+00 4.208290e+00 4.030432e+00 #>  [661] 4.126913e+00 2.864514e+00 2.747053e+00 3.284830e+00 3.253745e+00 #>  [666] 3.106205e+00 3.073123e+00 1.728069e+00 1.761572e+00 1.131342e+00 #>  [671] 8.184120e-01 9.202961e-01 1.109964e+00 1.643495e-01 6.533627e-01 #>  [676] 7.467960e-01 4.239402e-01 3.566573e-01 2.357998e-01 5.480811e-01 #>  [681] 1.124773e+00 1.098368e+00 1.042847e+00 5.386757e-01 1.797037e+02 #>  [686] 1.788387e+02 1.796287e+02 1.026974e+00 8.795439e-02 1.798562e+02 #>  [691] 3.904979e-02 6.280985e-01 5.048608e-01 9.233595e-01 9.496267e-01 #>  [696] 1.505929e+00 1.374655e+00 1.667046e+00 1.711375e+00 1.751840e+00 #>  [701] 1.715371e+00 1.500778e+00 1.577838e+00 1.522879e+00 2.145265e+00 #>  [706] 8.308535e-01 2.108894e-01 2.486243e-01 4.830500e-01 1.148648e-01 #>  [711] 5.189493e-01 4.195617e-01 3.050743e-01 2.092210e-01 1.799013e+02 #>  [716] 1.798816e+02 1.796452e+02 1.793997e+02 1.788302e+02 1.787895e+02 #>  [721] 1.790237e+02 1.798099e+02 1.240426e-03 7.264005e-01 1.014093e+00 #>  [726] 6.561114e-01 5.498937e-01 6.773649e-01 7.502621e-01 7.405619e-01 #>  [731] 8.099665e-01 4.330812e-01 5.808066e-01 1.794003e+02 6.981542e-01 #>  [736] 7.461776e-01 1.509192e+00 1.725548e+00 1.237290e+00 1.474792e+00 #>  [741] 1.756545e+00 1.936324e+00 1.421891e+00 1.421891e+00 1.737877e+00 #>  [746] 1.539881e+00 2.292026e+00 2.375179e+00 2.319394e+00 2.248823e+00 #>  [751] 2.203371e+00 2.343951e+00 2.591935e+00 2.620891e+00 2.624906e+00 #>  [756] 2.792902e+00 4.445214e+00 4.841163e+00 4.256415e+00 3.726351e+00 #>  [761] 4.497594e+00 4.810848e+00 4.865264e+00 4.988340e+00 5.314843e+00 #>  [766] 5.867952e+00 5.617265e+00 5.345209e+00 5.358555e+00 6.939653e+00 #>  [771] 6.764275e+00 7.201039e+00 6.831910e+00 6.868331e+00 6.655097e+00 #>  [776] 6.645628e+00 6.776590e+00 6.812577e+00 6.955041e+00 6.648690e+00 #>  [781] 5.699973e+00 5.575963e+00 5.228286e+00 5.313893e+00 6.654591e+00 #>  [786] 5.810105e+00 6.448007e+00 6.181917e+00 6.285345e+00 6.273628e+00 #>  [791] 6.500180e+00 6.656357e+00 6.727815e+00 6.591495e+00 6.554501e+00 #>  [796] 6.013403e+00 5.907945e+00 5.341938e+00 5.230735e+00 5.285473e+00 #>  [801] 5.265491e+00 5.125526e+00 5.192677e+00 5.006897e+00 4.837833e+00 #>  [806] 4.806472e+00 4.674524e+00 3.956121e+00 3.827366e+00 4.062318e+00 #>  [811] 5.201649e+00 4.221949e+00 2.693400e+00 2.117927e+00 2.387436e+00 #>  [816] 2.243379e+00 1.680031e+00 2.263555e+00 2.547437e+00 2.011555e+00 #>  [821] 4.583436e-01 5.056362e-01 1.798115e+02 1.796558e+02 1.796779e+02 #>  [826] 1.793244e+02 1.793248e+02 1.793493e+02 1.794409e+02 1.796438e+02 #>  [831] 1.779002e+02 1.789037e+02 1.788854e+02 1.792837e+02 1.789293e+02 #>  [836] 1.788514e+02 1.786779e+02 1.785417e+02 1.784929e+02 1.783049e+02 #>  [841] 1.793631e+02 1.788174e+02 1.792981e+02 1.795400e+02 1.799014e+02 #>  [846] 3.125548e-01 5.211763e-01 1.158986e+00 1.108312e+00 1.115938e+00 #>  [851] 1.125063e+00 1.028954e+00 1.067692e+00 9.045859e-01 9.619556e-01 #>  [856] 1.064568e+00 1.150212e+00 1.750837e+00 1.970893e+00 2.026458e+00 #>  [861] 2.171555e+00 2.272500e+00 2.237594e+00 2.338908e+00 2.740262e+00 #>  [866] 2.435474e+00 2.496719e+00 2.596066e+00 2.522239e+00 3.073246e+00 #>  [871] 3.540555e+00 3.432889e+00 3.475369e+00 4.129814e+00 4.097047e+00 #>  [876] 4.633086e+00 4.699319e+00 4.835089e+00 4.524650e+00 4.578149e+00 #>  [881] 5.084190e+00 6.981916e+00 6.922827e+00 7.417738e+00 7.470067e+00 #>  [886] 7.611638e+00 7.630554e+00 8.087721e+00 7.923419e+00 7.967702e+00 #>  [891] 7.598443e+00 6.945283e+00 7.111511e+00 7.348870e+00 6.953052e+00 #>  [896] 6.778698e+00 6.514898e+00 6.673636e+00 6.556584e+00 7.671907e+00 #>  [901] 7.775740e+00 7.451732e+00 7.926613e+00 7.886241e+00 8.068007e+00 #>  [906] 8.167266e+00 8.596204e+00 8.267529e+00 8.331379e+00 9.046439e+00 #>  [911] 8.835083e+00 9.398025e+00 9.200402e+00 9.216610e+00 1.047596e+01 #>  [916] 1.136240e+01 1.182432e+01 1.259084e+01 1.254141e+01 1.293858e+01 #>  [921] 1.269595e+01 1.258540e+01 1.276020e+01 1.279014e+01 1.248257e+01 #>  [926] 1.384048e+01 1.291676e+01 1.299308e+01 1.387046e+01 1.478040e+01 #>  [931] 1.471961e+01 1.347434e+01 1.355366e+01 1.375809e+01 1.367673e+01 #>  [936] 1.363441e+01 1.406732e+01 1.408979e+01 1.398278e+01 1.391121e+01 #>  [941] 1.530749e+01 1.577085e+01 1.573294e+01 1.546499e+01 1.519603e+01 #>  [946] 1.560111e+01 1.613818e+01 1.611255e+01 1.632684e+01 1.647172e+01 #>  [951] 1.567221e+01 1.582570e+01 1.581771e+01 1.541661e+01 1.562614e+01 #>  [956] 1.550925e+01 1.559495e+01 1.576204e+01 1.608194e+01 1.547470e+01 #>  [961] 1.461644e+01 1.499830e+01 1.477640e+01 1.332603e+01 1.321403e+01 #>  [966] 1.285827e+01 1.212689e+01 1.182475e+01 1.129861e+01 1.106447e+01 #>  [971] 1.056999e+01 1.005395e+01 1.014917e+01 1.032291e+01 1.096254e+01 #>  [976] 1.229897e+01 1.170471e+01 1.159099e+01 1.170934e+01 1.012262e+01 #>  [981] 9.534551e+00 1.133671e+01 1.174107e+01 1.197712e+01 1.243706e+01 #>  [986] 1.240396e+01 1.248519e+01 1.209039e+01 1.223257e+01 1.256003e+01 #>  [991] 1.215132e+01 9.298501e+00 9.517991e+00 9.675070e+00 9.923424e+00 #>  [996] 1.035724e+01 1.007828e+01 9.570058e+00 9.619503e+00 9.721428e+00 #> [1001] 9.891135e+00 9.721547e+00 9.785430e+00 1.005501e+01 1.013047e+01 #> [1006] 1.043993e+01 1.163788e+01 1.181874e+01 1.182961e+01 1.186722e+01 #> [1011] 1.199590e+01 1.246620e+01 1.225702e+01 1.263839e+01 1.509644e+01 #> [1016] 1.556423e+01 1.617880e+01 1.597049e+01 1.568262e+01 1.545105e+01 #> [1021] 1.578898e+01 1.659009e+01 1.728775e+01 1.779125e+01 1.776288e+01 #> [1026] 1.698353e+01 1.649453e+01 1.664272e+01 1.791085e+01 1.781659e+01 #> [1031] 1.879613e+01 1.912975e+01 1.709963e+01 1.738739e+01 1.666520e+01 #> [1036] 1.465385e+01 1.448049e+01 1.553228e+01 1.522446e+01 1.476212e+01 #> [1041] 1.395364e+01 1.497291e+01 1.507018e+01 1.514037e+01 1.450909e+01 #> [1046] 1.461455e+01 1.412849e+01 1.478187e+01 1.572179e+01 1.672596e+01 #> [1051] 1.682371e+01 1.668604e+01 1.655931e+01 1.662147e+01 1.692276e+01 #> [1056] 1.773244e+01 1.782317e+01 1.639368e+01 1.602895e+01 1.435856e+01 #> [1061] 1.429238e+01 1.433990e+01 1.416832e+01 1.442507e+01 1.420535e+01 #> [1066] 1.340287e+01 1.289438e+01 1.112998e+01 1.167617e+01 1.197401e+01 #> [1071] 1.245874e+01 1.186417e+01 9.349739e+00 9.031814e+00 8.164334e+00 #> [1076] 7.486832e+00 7.722685e+00 8.287721e+00 6.398298e+00 6.356218e+00 #> [1081] 7.578698e+00 7.945707e+00"},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Rolling Functions using Circular Statistical Tests for Uniformity — rolling_test","title":"Apply Rolling Functions using Circular Statistical Tests for Uniformity — rolling_test","text":"generic function applying function rolling margins array.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Rolling Functions using Circular Statistical Tests for Uniformity — rolling_test","text":"","code":"roll_normchisq(   obs,   prd,   unc = NULL,   width = NULL,   by.column = FALSE,   partial = TRUE,   fill = NA,   ... )  roll_rayleigh(   obs,   prd,   unc = NULL,   width = NULL,   by.column = FALSE,   partial = TRUE,   fill = NA,   ... )  roll_dispersion(   x,   y,   w = NULL,   w.y = NULL,   width = NULL,   by.column = FALSE,   partial = TRUE,   fill = NA,   ... )  roll_confidence(   x,   conf.level = 0.95,   w = NULL,   axial = TRUE,   width = NULL,   by.column = FALSE,   partial = TRUE,   fill = NA,   ... )  roll_dispersion_CI(   x,   y,   w = NULL,   w.y = NULL,   R,   conf.level = 0.95,   width = NULL,   by.column = FALSE,   partial = TRUE,   fill = NA,   ... )  roll_dispersion_sde(   x,   y,   w = NULL,   w.y = NULL,   R,   conf.level = 0.95,   width = NULL,   by.column = FALSE,   partial = TRUE,   fill = NA,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Rolling Functions using Circular Statistical Tests for Uniformity — rolling_test","text":"obs Numeric vector containing observed azimuth \\(\\sigma_{Hmax}\\), length prd prd Numeric vector containing modeled azimuths \\(\\sigma_{Hmax}\\), .e. return object model_shmax() unc Uncertainty observed \\(\\sigma_{Hmax}\\), either numeric vector number width integer specifying window width (numbers observations) aligned original sample according align argument. NULL, optimal width estimated. .column logical. TRUE, FUN applied column separately. partial logical numeric. FALSE FUN applied indexes rolling window within observed time range. TRUE (default), subset indexes range passed FUN. numeric argument partial can used determine minimal window size partial computations. See details. fill three-component vector list (recycled otherwise) providing filling values left/within/right data range. See fill argument zoo::na.fill() details ... optional arguments passed zoo::rollapply() x, y numeric. Directions degrees w, w.y (optional) Weights x y, respectively. vector positive numbers length x. conf.level Level confidence: \\((1 - \\alpha \\%)/100\\). (0.95 default). axial logical. Whether data axial, .e. pi-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). R number bootstrap replicates.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Rolling Functions using Circular Statistical Tests for Uniformity — rolling_test","text":"numeric vector test statistic rolling test. roll_dispersion_CI returns 2-column matrix lower upper confidence limits","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Apply Rolling Functions using Circular Statistical Tests for Uniformity — rolling_test","text":"rolling functions applied values function distance recommended sort values first.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Rolling Functions using Circular Statistical Tests for Uniformity — rolling_test","text":"","code":"data(\"plates\") plate_boundary <- subset(plates, plates$pair == \"na-pa\") data(\"san_andreas\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") distance <- distance_from_pb(   x = san_andreas,   PoR = PoR,   pb = plate_boundary,   tangential = TRUE ) dat <- san_andreas[order(distance), ] dat.PoR <- PoR_shmax(san_andreas, PoR, \"right\") roll_normchisq(dat.PoR$azi.PoR, 135, dat$unc) #>    [1] 0.037954767 0.037578328 0.038689255 0.039744071 0.037530880 0.036672653 #>    [7] 0.037817630 0.036802683 0.028409287 0.028249104 0.028279320 0.028286461 #>   [13] 0.028538940 0.028442433 0.028206275 0.031032646 0.028389225 0.029544422 #>   [19] 0.029195518 0.029360421 0.029071958 0.030902679 0.035271648 0.035213549 #>   [25] 0.035153583 0.034876619 0.031800611 0.029157968 0.029444438 0.029058368 #>   [31] 0.029040014 0.029285626 0.028948156 0.028266501 0.027639475 0.028134029 #>   [37] 0.027952322 0.027130342 0.027321547 0.032205080 0.029620402 0.029572514 #>   [43] 0.030757856 0.030262969 0.030013758 0.030034252 0.027132324 0.026163957 #>   [49] 0.023911966 0.024343491 0.026698408 0.026704378 0.021261790 0.014396091 #>   [55] 0.014582607 0.014477318 0.014697034 0.016572871 0.016661807 0.016845369 #>   [61] 0.017411933 0.018140983 0.018072735 0.018128772 0.017977408 0.017347629 #>   [67] 0.017501314 0.017685156 0.017834815 0.017737818 0.017872002 0.022135047 #>   [73] 0.022077325 0.020679616 0.020620573 0.021014980 0.020615171 0.018956621 #>   [79] 0.020566461 0.024440806 0.023534861 0.019672232 0.035175520 0.034877227 #>   [85] 0.033969773 0.032089576 0.032023429 0.030750561 0.031139047 0.031196427 #>   [91] 0.031335902 0.031250214 0.031123591 0.032284855 0.033021418 0.034781585 #>   [97] 0.035481073 0.030800489 0.005189228 0.005392558 0.005380379 0.013656765 #>  [103] 0.013577179 0.011978173 0.011557885 0.011620193 0.019405398 0.018549979 #>  [109] 0.018525132 0.018482802 0.018409761 0.018523367 0.018621871 0.025131296 #>  [115] 0.027793403 0.027622963 0.027745344 0.027757954 0.027607655 0.027575993 #>  [121] 0.027556966 0.027533423 0.026444732 0.025815046 0.024678918 0.033498049 #>  [127] 0.031617443 0.031004979 0.032478403 0.046557165 0.048600943 0.048672084 #>  [133] 0.047304468 0.046424473 0.051073514 0.051903607 0.051807523 0.042558407 #>  [139] 0.039801707 0.040881582 0.039769842 0.039012429 0.038791841 0.038687276 #>  [145] 0.032667592 0.027191870 0.026833122 0.024120924 0.024117057 0.024158868 #>  [151] 0.025979521 0.025725446 0.026902771 0.028736333 0.028956601 0.030149873 #>  [157] 0.018925481 0.019776267 0.018141830 0.015451430 0.015254340 0.014533331 #>  [163] 0.014130596 0.013855092 0.014020213 0.013656588 0.013747569 0.013724979 #>  [169] 0.014301484 0.015571163 0.012308683 0.012417325 0.012791127 0.012975679 #>  [175] 0.014187483 0.016823327 0.018674062 0.018957474 0.013249897 0.014633711 #>  [181] 0.014606251 0.013009765 0.013081515 0.017384308 0.016674098 0.017505743 #>  [187] 0.017394282 0.018349555 0.018350691 0.019615102 0.018311074 0.018582437 #>  [193] 0.019309308 0.019713257 0.019502894 0.018851672 0.018576328 0.072186334 #>  [199] 0.072135942 0.072545116 0.072681307 0.074531873 0.075201843 0.066137518 #>  [205] 0.066138823 0.066343660 0.065176322 0.065049617 0.065348705 0.081199633 #>  [211] 0.080372124 0.079934408 0.084729429 0.083909037 0.082842133 0.083139770 #>  [217] 0.083449316 0.084113351 0.088210681 0.088226716 0.090846442 0.097265912 #>  [223] 0.097182919 0.097285820 0.097234145 0.103398923 0.108886949 0.110326390 #>  [229] 0.039700318 0.040847680 0.040648340 0.040614062 0.040613036 0.039938437 #>  [235] 0.052162213 0.052117258 0.048790577 0.048765213 0.048531510 0.050323697 #>  [241] 0.048440828 0.058841739 0.053722572 0.029518900 0.013788567 0.012597751 #>  [247] 0.012600901 0.010877140 0.010508684 0.010485619 0.012761964 0.010737006 #>  [253] 0.010721698 0.011084123 0.011602409 0.011567690 0.011555238 0.011740346 #>  [259] 0.011816834 0.011788522 0.014279453 0.014472073 0.015023477 0.015661492 #>  [265] 0.015824892 0.015589585 0.015690618 0.015764692 0.015710671 0.015660481 #>  [271] 0.015657651 0.015664830 0.015652046 0.016442720 0.017593385 0.025554235 #>  [277] 0.025578109 0.025577093 0.029021670 0.029006404 0.029065740 0.043251655 #>  [283] 0.043580695 0.052569639 0.051698284 0.051704073 0.052170604 0.052148132 #>  [289] 0.052203558 0.052246176 0.055647946 0.043835836 0.044284340 0.044531997 #>  [295] 0.041982114 0.041979006 0.067264032 0.067237121 0.066963608 0.069512582 #>  [301] 0.069833979 0.069697413 0.069513336 0.069586973 0.079103474 0.087271501 #>  [307] 0.084693480 0.085039276 0.084978881 0.084449613 0.084480649 0.091876450 #>  [313] 0.066157989 0.065553729 0.026758028 0.030691969 0.026632224 0.026893647 #>  [319] 0.027051384 0.027153669 0.027588307 0.027543991 0.026806617 0.026629431 #>  [325] 0.026745506 0.026055354 0.021876554 0.021822932 0.021740008 0.022083682 #>  [331] 0.022116188 0.033740606 0.033445746 0.033717132 0.035044916 0.035032877 #>  [337] 0.035125187 0.029886623 0.029808537 0.029825506 0.040430993 0.040425385 #>  [343] 0.037392332 0.038166473 0.038060677 0.035643082 0.036158305 0.040327478 #>  [349] 0.040300250 0.058236812 0.058446358 0.058198900 0.058257603 0.052112333 #>  [355] 0.051881629 0.051754742 0.052075686 0.058404010 0.058473317 0.058514574 #>  [361] 0.058486043 0.057981180 0.053394854 0.059600516 0.059432066 0.058636140 #>  [367] 0.058819051 0.099004775 0.117577822 0.117995320 0.117171233 0.124621474 #>  [373] 0.124623022 0.137296618 0.153174780 0.152953374 0.116719298 0.101645301 #>  [379] 0.098112000 0.098246371 0.076728080 0.076890448 0.076912791 0.077805153 #>  [385] 0.086739659 0.085849792 0.081134819 0.077965245 0.077945197 0.096436893 #>  [391] 0.092585184 0.091896100 0.088545722 0.087848366 0.091003607 0.091073851 #>  [397] 0.145708286 0.145702229 0.130468932 0.130468784 0.130470614 0.128849360 #>  [403] 0.125174169 0.125257846 0.109116388 0.105750436 0.106045097 0.121322782 #>  [409] 0.130244180 0.124395071 0.124476292 0.133405730 0.133329608 0.133345244 #>  [415] 0.133996485 0.134119717 0.135539881 0.142888967 0.147322933 0.143984418 #>  [421] 0.129550521 0.134735196 0.116354432 0.120654218 0.122214991 0.119028546 #>  [427] 0.111583667 0.035577938 0.037142450 0.036846429 0.036712888 0.037127908 #>  [433] 0.066465945 0.074165882 0.074218871 0.088747264 0.115774749 0.115781069 #>  [439] 0.116581168 0.116583489 0.168165274 0.158536288 0.158682702 0.158588007 #>  [445] 0.158509911 0.157775443 0.157504699 0.160372466 0.160081738 0.162952318 #>  [451] 0.209299988 0.209142626 0.209368747 0.228579646 0.226373156 0.219162874 #>  [457] 0.219474614 0.227503927 0.248659244 0.248459820 0.250991418 0.253662584 #>  [463] 0.253588218 0.253578925 0.233230386 0.231928569 0.237942192 0.234775600 #>  [469] 0.234735530 0.245162737 0.245304811 0.221826999 0.236861987 0.236128333 #>  [475] 0.236208367 0.236091504 0.235870167 0.236572541 0.226400530 0.227157578 #>  [481] 0.227025881 0.177063091 0.177006601 0.175066954 0.175115567 0.176593586 #>  [487] 0.183721944 0.201166035 0.201343256 0.256393105 0.256688517 0.259563971 #>  [493] 0.243850705 0.243846116 0.243676238 0.256355413 0.258170286 0.257974354 #>  [499] 0.257876628 0.218134083 0.209731439 0.209867618 0.207470502 0.204569020 #>  [505] 0.204725298 0.203086694 0.203284932 0.203278799 0.207888888 0.214315329 #>  [511] 0.214327249 0.214326109 0.214307078 0.214484517 0.214551304 0.214455395 #>  [517] 0.217028723 0.217309653 0.210762814 0.210699529 0.158711356 0.161480294 #>  [523] 0.154809542 0.172342443 0.172386394 0.163151470 0.162237177 0.175379472 #>  [529] 0.175346813 0.175315617 0.217974328 0.217374395 0.216941760 0.225573669 #>  [535] 0.128923812 0.129130892 0.130535708 0.130653191 0.130922000 0.133827102 #>  [541] 0.134199458 0.135196900 0.135186514 0.135034594 0.135050575 0.135620086 #>  [547] 0.136545468 0.136739309 0.136753398 0.135087421 0.135086853 0.121009225 #>  [553] 0.117639124 0.117859071 0.107140824 0.109022996 0.111023183 0.106097905 #>  [559] 0.086704541 0.086710471 0.086755659 0.081653218 0.081563341 0.078018512 #>  [565] 0.079543102 0.117094764 0.116963434 0.111112589 0.100264201 0.100413111 #>  [571] 0.088377150 0.088794414 0.080794085 0.080850711 0.080936017 0.080919609 #>  [577] 0.080910033 0.078626654 0.078458115 0.078372307 0.072526424 0.071394363 #>  [583] 0.070630106 0.070671398 0.073879066 0.073832703 0.070903804 0.069214188 #>  [589] 0.069863161 0.069977133 0.069974730 0.066401469 0.069509645 0.069470881 #>  [595] 0.069939851 0.068113553 0.065393429 0.072199735 0.077898360 0.086852756 #>  [601] 0.086377044 0.086258153 0.085302499 0.085605999 0.085492619 0.081978051 #>  [607] 0.081467024 0.081695654 0.081994071 0.082007201 0.078561758 0.084390221 #>  [613] 0.087593570 0.089298991 0.089115912 0.086816544 0.077575993 0.077574198 #>  [619] 0.079569109 0.084078528 0.074694066 0.074746541 0.084086554 0.084084979 #>  [625] 0.083804308 0.090218563 0.079601197 0.086124588 0.071395502 0.060256365 #>  [631] 0.029244832 0.029062116 0.029441160 0.029012617 0.029029515 0.028605936 #>  [637] 0.029923055 0.036632944 0.040434259 0.039803388 0.039962913 0.040301047 #>  [643] 0.040537249 0.039090717 0.039310175 0.035541727 0.033339691 0.033805888 #>  [649] 0.033819786 0.034038353 0.034052246 0.038389087 0.038124260 0.038120732 #>  [655] 0.034195318 0.034825559 0.034690503 0.031192727 0.034863786 0.034714197 #>  [661] 0.034806428 0.034868970 0.034814888 0.042031048 0.041887018 0.041851476 #>  [667] 0.042463546 0.043678903 0.039272137 0.033224424 0.033594924 0.033334361 #>  [673] 0.033251607 0.032981887 0.033007309 0.032840507 0.036331758 0.038473423 #>  [679] 0.042319661 0.048074691 0.047878061 0.048051664 0.047790153 0.042962810 #>  [685] 0.041639797 0.045038962 0.044651286 0.044963914 0.044848786 0.044782179 #>  [691] 0.044686840 0.044634019 0.044623128 0.042698810 0.046173092 0.038798238 #>  [697] 0.038814250 0.023240395 0.022697121 0.020376669 0.019532223 0.018881328 #>  [703] 0.018875231 0.018867607 0.018874177 0.018859454 0.018859347 0.017805462 #>  [709] 0.017830214 0.017892198 0.012834345 0.012849690 0.012769846 0.012823004 #>  [715] 0.013892694 0.016681232 0.016493301 0.016473639 0.016842491 0.016858160 #>  [721] 0.021714648 0.021294857 0.021379110 0.025232513 0.025821940 0.021855667 #>  [727] 0.023920625 0.023918773 0.037265349 0.035931423 0.036174281 0.035659989 #>  [733] 0.032134320 0.028429313 0.028429017 0.028433710 0.028431484 0.028385175 #>  [739] 0.029696327 0.029675934 0.029673680 0.028198590 0.028198334 0.019455175 #>  [745] 0.018924392 0.017288638 0.015005790 0.015218235 0.015100907 0.014748414 #>  [751] 0.014132560 0.009250932 0.009188859 0.009137569 0.007739587 0.007521223 #>  [757] 0.007252167 0.007295243 0.007286852 0.006535558 0.006732747 0.007167363 #>  [763] 0.007495418 0.008292779 0.009146368 0.009880574 0.007169277 0.061427623 #>  [769] 0.060653810 0.051818750 0.050808508 0.049052161 0.049969914 0.049982021 #>  [775] 0.060343126 0.058631247 0.059426277 0.058723765 0.058637613 0.056917886 #>  [781] 0.057687318 0.060396639 0.060439708 0.060426235 0.060348122 0.059542997 #>  [787] 0.060946241 0.064293612 0.064251463 0.062731872 0.059637427 0.059618933 #>  [793] 0.058549076 0.057692234 0.056426298 0.058835783 0.058821164 0.071568938 #>  [799] 0.013977587 0.014275342 0.014716601 0.014715632 0.015506098 0.015374944 #>  [805] 0.015363860 0.014951362 0.016210936 0.015675947 0.016163067 0.014217166 #>  [811] 0.015873257 0.015864286 0.015866147 0.015872747 0.015867083 0.015937708 #>  [817] 0.015925426 0.015912351 0.015620629 0.014173891 0.014779994 0.016046576 #>  [823] 0.019064720 0.019314414 0.019699573 0.020202404 0.011658498 0.010938872 #>  [829] 0.011197283 0.011382645 0.013225868 0.013870398 0.013702155 0.014307760 #>  [835] 0.014426942 0.014406768 0.014773806 0.015218303 0.015394514 0.015080482 #>  [841] 0.018288883 0.016958297 0.016828108 0.016678065 0.019366795 0.019391487 #>  [847] 0.018750622 0.018922883 0.018931734 0.019194646 0.018930552 0.018945771 #>  [853] 0.019280639 0.017428574 0.016766207 0.017223710 0.017391728 0.016888920 #>  [859] 0.016651503 0.016947445 0.017439654 0.016356457 0.016371267 0.017291091 #>  [865] 0.016811840 0.016447212 0.016445058 0.016095951 0.018267993 0.018210157 #>  [871] 0.017542293 0.015467718 0.016657028 0.013260164 0.013248145 0.010089643 #>  [877] 0.009729875 0.009903378 0.009582899 0.009662068 0.009660242 0.010571484 #>  [883] 0.010610264 0.021269409 0.019847487 0.020180067 0.019217374 0.021613678 #>  [889] 0.023949003 0.024323211 0.022484683 0.022455419 0.022480028 0.022191755 #>  [895] 0.022402097 0.022633008 0.023205964 0.023306190 0.023808473 0.021885422 #>  [901] 0.022112266 0.023569192 0.024526919 0.024092993 0.034079527 0.032216118 #>  [907] 0.032276788 0.033863934 0.033972706 0.032447826 0.033215410 0.033166355 #>  [913] 0.037539841 0.037479125 0.025600317 0.028760938 0.029850722 0.030803418 #>  [919] 0.028733458 0.025821403 0.026957770 0.031186617 0.031236885 0.031191357 #>  [925] 0.032711840 0.038614866 0.037473895 0.035911975 0.035736433 0.035456258 #>  [931] 0.034468772 0.034846053 0.034709251 0.034772391 0.036562391 0.037396406 #>  [937] 0.042752075 0.041159810 0.040903298 0.134969855 0.141544668 0.130998356 #>  [943] 0.131161269 0.138222705 0.138206581 0.140119125 0.142653161 0.144845510 #>  [949] 0.139783897 0.141240609 0.324610840 0.325103527 0.324733090 0.324413848 #>  [955] 0.324085561 0.327680164 0.352217234 0.358096206 0.374042579 0.374601097 #>  [961] 0.388735094 0.406170418 0.406168974 0.415755490 0.415734882 0.460113681 #>  [967] 0.467932286 0.467537920 0.478847213 0.502165607 0.451189232 0.447287706 #>  [973] 0.512448900 0.454638896 0.445635067 0.445639711 0.445639319 0.445972157 #>  [979] 0.446143181 0.471725180 0.460306072 0.279225444 0.279307612 0.282109531 #>  [985] 0.289674832 0.300202504 0.299797125 0.273491322 0.273094744 0.279482656 #>  [991] 0.276965583 0.271980567 0.269954227 0.270287761 0.255587003 0.256808668 #>  [997] 0.257283394 0.257791777 0.252862747 0.255427485 0.256936247 0.253224588 #> [1003] 0.253415261 0.251403525 0.296154594 0.302623884 0.303475495 0.297236477 #> [1009] 0.245189077 0.244339713 0.245524984 0.243477085 0.233618989 0.229127371 #> [1015] 0.227177184 0.217470185 0.172439884 0.172572239 0.171396015 0.170748426 #> [1021] 0.157564820 0.158938964 0.097566679 0.093608023 0.092638975 0.081100707 #> [1027] 0.083553151 0.083356072 0.082224659 0.080267747 0.079074224 0.060125455 #> [1033] 0.059958284 0.059619668 0.060452000 0.056571228 0.047544044 0.046461063 #> [1039] 0.043529671 0.052626777 0.052564761 0.050806306 0.050283738 0.050074984 #> [1045] 0.049843837 0.049088631 0.039678119 0.065525869 0.068438020 0.071604741 #> [1051] 0.071207383 0.072631993 0.072459608 0.072276811 0.342400351 0.344221292 #> [1057] 0.392853746 0.438059993 0.437041338 0.436371956 0.436480433 0.432710143 #> [1063] 0.507043385 0.507683081 0.508730316 0.508794880 0.507819555 0.507725669 #> [1069] 0.523075384 0.524797583 0.529529977 0.530215860 0.535737710 0.537033640 #> [1075] 0.541855594 0.546968618 0.624871094 0.625608890 0.678782618 0.691971300 #> [1081] 0.700697727 0.709679555 roll_rayleigh(dat.PoR$azi.PoR, prd = 135, unc = dat$unc) #>    [1]  0.8599294891  0.8621986936  0.8536511830  0.8464462163  0.8551365449 #>    [6]  0.8587474886  0.8480263153  0.8528035094  0.8626963130  0.8641044454 #>   [11]  0.8638376235  0.8637380916  0.8616625364  0.8629599705  0.8648962032 #>   [16]  0.8518408331  0.8634837533  0.8574754073  0.8604365703  0.8590108999 #>   [21]  0.8623357134  0.8555726252  0.8255734883  0.8260838175  0.8269198491 #>   [26]  0.8285206175  0.8396761682  0.8494656555  0.8475917295  0.8498507649 #>   [31]  0.8500127338  0.8478752591  0.8504812421  0.8567867045  0.8605761027 #>   [36]  0.8581678938  0.8597533215  0.8689934731  0.8679460953  0.8647807262 #>   [41]  0.8711695583  0.8717732060  0.8645146941  0.8676008292  0.8685115031 #>   [46]  0.8683796530  0.8792505865  0.8836951284  0.8906187735  0.8878416359 #>   [51]  0.8741644775  0.8741026131  0.8944810950  0.9283901544  0.9272151484 #>   [56]  0.9274722352  0.9260432828  0.9227974342  0.9230505945  0.9215835666 #>   [61]  0.9199747423  0.9153564987  0.9160522338  0.9157422517  0.9159431166 #>   [66]  0.9199206623  0.9183959306  0.9173667703  0.9165415803  0.9166701778 #>   [71]  0.9159179266  0.9001458848  0.9004597117  0.9072287033  0.9075346376 #>   [76]  0.9054884072  0.9075991620  0.9095010019  0.9030446453  0.8881362974 #>   [81]  0.8923375537  0.9093684273  0.8651999003  0.8630069066  0.8643128216 #>   [86]  0.8678971428  0.8682413160  0.8645307753  0.8598271531  0.8583950960 #>   [91]  0.8566634496  0.8567654588  0.8584081176  0.8448208082  0.8359914694 #>   [96]  0.8168723689  0.8059254403  0.8211242437  0.8851512097  0.8932536634 #>  [101]  0.8939042065  0.8697594162  0.8738231833  0.8884314568  0.8958077215 #>  [106]  0.8909000962  0.8497775567  0.8581622662  0.8594688763  0.8615808621 #>  [111]  0.8652602011  0.8650095750  0.8618381004  0.8363130221  0.8134292160 #>  [116]  0.8160703312  0.8117714575  0.8111664282  0.8102565754  0.8115020687 #>  [121]  0.8124785735  0.8136662599  0.8226047367  0.8293168895  0.8412614556 #>  [126]  0.8127244347  0.8255240761  0.8326465140  0.8227599259  0.8000189551 #>  [131]  0.7911685778  0.7884537564  0.7957863017  0.8009475736  0.7904333791 #>  [136]  0.7873492939  0.7913085877  0.8272245441  0.8311645616  0.8248845759 #>  [141]  0.8298557899  0.8329240765  0.8354783932  0.8382614148  0.8619814396 #>  [146]  0.8874913840  0.8902653944  0.8998378661  0.9001615599  0.8989128094 #>  [151]  0.8894519416  0.8907510493  0.8825770846  0.8703783184  0.8696926631 #>  [156]  0.8649204317  0.8993350126  0.8964930194  0.9004362526  0.9132581883 #>  [161]  0.9144298292  0.9191308057  0.9235344598  0.9256167419  0.9243393253 #>  [166]  0.9260112137  0.9253475072  0.9258717781  0.9228652399  0.9189821431 #>  [171]  0.9329909671  0.9326047499  0.9304334189  0.9285282407  0.9214415683 #>  [176]  0.9022022750  0.8963724606  0.8948036623  0.9028299360  0.8997845863 #>  [181]  0.9010574496  0.9095823005  0.9083761975  0.8985128279  0.9060813316 #>  [186]  0.9005942624  0.9018103069  0.8970158268  0.8969231858  0.8926078782 #>  [191]  0.8968376619  0.8943560068  0.8885421242  0.8842548260  0.8845997663 #>  [196]  0.8883800005  0.8909204396  0.7867419568  0.7870036039  0.7818114893 #>  [201]  0.7803927386  0.7721568825  0.7672881883  0.7765303248  0.7763862639 #>  [206]  0.7754109170  0.7907622407  0.7886131109  0.7861102224  0.7542909875 #>  [211]  0.7584320832  0.7612539644  0.7310412479  0.7342961049  0.7448998175 #>  [216]  0.7440676947  0.7458900824  0.7357549405  0.7264447637  0.7249597335 #>  [221]  0.7006403266  0.6803010607  0.6818351902  0.6795015332  0.6808116200 #>  [226]  0.6649806187  0.6551369687  0.6497680186  0.7823094819  0.7754439148 #>  [231]  0.7810694650  0.7815870850  0.7819431331  0.7885419867  0.7705557383 #>  [236]  0.7716354341  0.7848621442  0.7856275691  0.7875197009  0.7819502476 #>  [241]  0.7933637655  0.7755575922  0.7849463849  0.8551586806  0.8847246023 #>  [246]  0.8890340445  0.8887948761  0.8985495889  0.9097284255  0.9104897792 #>  [251]  0.9133509908  0.9356007938  0.9363662128  0.9318736328  0.9280093870 #>  [256]  0.9292314747  0.9294598864  0.9271719763  0.9258177414  0.9266955763 #>  [261]  0.9105036735  0.9077990378  0.9035102499  0.8915978755  0.8888413703 #>  [266]  0.8927944191  0.8900732739  0.8865658757  0.8884505214  0.8903014892 #>  [271]  0.8909105193  0.8905213079  0.8914944405  0.8843101831  0.8733283977 #>  [276]  0.8426409089  0.8421373376  0.8421451358  0.8258851728  0.8264420142 #>  [281]  0.8250579659  0.7992285501  0.7949752390  0.7583938256  0.7631252918 #>  [286]  0.7637476748  0.7574803906  0.7574487931  0.7559316464  0.7547425592 #>  [291]  0.7422960865  0.7676211290  0.7639235885  0.7619763088  0.7758492907 #>  [296]  0.7754101605  0.7353607131  0.7379457326  0.7421997030  0.7358649018 #>  [301]  0.7307963532  0.7329782938  0.7339468690  0.7334955951  0.7246586389 #>  [306]  0.7305489875  0.7533819937  0.7515969412  0.7522718563  0.7545784680 #>  [311]  0.7542247134  0.7162958261  0.7529919875  0.7605457795  0.8312313347 #>  [316]  0.8130912483  0.8304079689  0.8323609590  0.8271457201  0.8267024965 #>  [321]  0.8179638779  0.8189601720  0.8323101184  0.8362138491  0.8320849167 #>  [326]  0.8458791385  0.8620466053  0.8615588872  0.8636266690  0.8557082553 #>  [331]  0.8554051075  0.8255996306  0.8287084797  0.8218629876  0.8088125891 #>  [336]  0.8091391170  0.8071523497  0.8271016621  0.8282547979  0.8280023236 #>  [341]  0.7943764496  0.7945486734  0.8187580148  0.8149161972  0.8174863586 #>  [346]  0.8291107985  0.8217588699  0.8113882283  0.8126732769  0.7548127158 #>  [351]  0.7510389420  0.7570176634  0.7554749195  0.7721965241  0.7736637350 #>  [356]  0.7774396400  0.7696646732  0.7520678156  0.7498236789  0.7487611596 #>  [361]  0.7493841741  0.7522939323  0.7684737896  0.7256762594  0.7293449984 #>  [366]  0.7378242856  0.7336200512  0.6341594406  0.5924871907  0.5901551466 #>  [371]  0.5954969390  0.5788153298  0.5787792289  0.5416996348  0.4869083663 #>  [376]  0.4879109533  0.5248897218  0.5751060214  0.5914797195  0.5907461266 #>  [381]  0.6673750995  0.6617084191  0.6610123054  0.6440646916  0.6176265329 #>  [386]  0.6152364046  0.6272471282  0.6416976725  0.6423257188  0.5824399636 #>  [391]  0.5977543660  0.6042651916  0.6146115333  0.6159471990  0.6177119863 #>  [396]  0.6156062803  0.5115007587  0.5116926685  0.5668955331  0.5668998686 #>  [401]  0.5668323658  0.5606948119  0.5789784726  0.5760987485  0.6150426274 #>  [406]  0.6381870357  0.6314882900  0.6036047967  0.5811092292  0.5912893697 #>  [411]  0.5899249731  0.5652776262  0.5678109148  0.5672784821  0.5619287659 #>  [416]  0.5579355792  0.5465825977  0.5318092787  0.5287716239  0.5333329555 #>  [421]  0.5890604618  0.5728536344  0.6020364990  0.5882058819  0.5853574591 #>  [426]  0.6069179977  0.6281429363  0.7843762481  0.7690367892  0.7724811031 #>  [431]  0.7769632390  0.7678283111  0.7042637610  0.6627515373  0.6610195788 #>  [436]  0.6180510162  0.5443554934  0.5435572874  0.5395155870  0.5394211859 #>  [441]  0.4112637491  0.4440603708  0.4394586821  0.4428204418  0.4414258054 #>  [446]  0.4505526098  0.4505436531  0.4420237412  0.4390149574  0.4212411669 #>  [451]  0.3232692284  0.3244806255  0.3164925604  0.2625274055  0.2764441316 #>  [456]  0.2804427361  0.2722057355  0.2394046555  0.1729932444  0.1823943768 #>  [461]  0.1637128188  0.1389472646  0.1424901310  0.1562609368  0.2204850082 #>  [466]  0.2277002989  0.2058574551  0.2345783658  0.2361215278  0.1841834677 #>  [471]  0.1778421736  0.2486986405  0.1744643401  0.1793300251  0.1780354435 #>  [476]  0.1833906004  0.1924370045  0.1920680467  0.2355442330  0.2302370185 #>  [481]  0.2357852470  0.3214087998  0.3225075976  0.3397573943  0.3410771664 #>  [486]  0.3171605893  0.3128576894  0.2720214572  0.2733066002  0.1888366308 #>  [491]  0.1824455857  0.1562936428  0.2292491942  0.2312908006  0.2383750064 #>  [496]  0.1964482083  0.1905862064  0.1979044075  0.1993292905  0.2328040647 #>  [501]  0.2701670674  0.2661815983  0.2855341300  0.3114735235  0.3160832234 #>  [506]  0.3299255701  0.3267532652  0.3271420143  0.2880493705  0.2615444291 #>  [511]  0.2667119173  0.2667810289  0.2693789356  0.2671067543  0.2714474989 #>  [516]  0.2756598375  0.2763649454  0.2800437771  0.3283685240  0.3297266076 #>  [521]  0.4153962312  0.3907522910  0.4367970943  0.3496707309  0.3474369970 #>  [526]  0.3657323902  0.3678179084  0.3090120625  0.3106432557  0.3122409354 #>  [531]  0.2863468849  0.2967925129  0.3052846333  0.2677980064  0.3862918583 #>  [536]  0.3795459787  0.3648984944  0.3587549397  0.3473447469  0.3412942477 #>  [541]  0.3272939097  0.3270143647  0.3275732502  0.3302608494  0.3293894799 #>  [546]  0.3210277312  0.3120240004  0.3033411774  0.3025675699  0.3135841781 #>  [551]  0.3136136957  0.3517523775  0.3752726656  0.3658460331  0.4102185875 #>  [556]  0.4006630445  0.3829816811  0.4326306417  0.5108113394  0.5105023137 #>  [561]  0.5084920231  0.5476644356  0.5517598287  0.5788370741  0.5755234973 #>  [566]  0.5290182227  0.5305791910  0.5506137569  0.5596188414  0.5562243955 #>  [571]  0.6126158275  0.6084092611  0.6370047649  0.6344980637  0.6339036933 #>  [576]  0.6346755533  0.6351359670  0.6505890451  0.6566517841  0.6587484536 #>  [581]  0.6902296541  0.6957238366  0.7001468407  0.6980169197  0.6901124898 #>  [586]  0.6922995875  0.7149569670  0.7250500498  0.7164907245  0.7114659039 #>  [591]  0.7115821846  0.7307688207  0.7173445584  0.7187952803  0.7210603821 #>  [596]  0.7341367130  0.7451633166  0.7126487566  0.6712316001  0.6252385504 #>  [601]  0.6339358829  0.6370188968  0.6459135205  0.6469227639  0.6504424211 #>  [606]  0.6632303350  0.6672949523  0.6607782351  0.6549666889  0.6546028365 #>  [611]  0.6618868752  0.6443605953  0.6211731723  0.6147370304  0.6189599219 #>  [616]  0.6225037562  0.6486925966  0.6492171601  0.6425312397  0.6328211633 #>  [621]  0.6649729851  0.6642659257  0.6379863899  0.6380310259  0.6408465708 #>  [626]  0.6141475916  0.6362823734  0.6213534242  0.6651974629  0.7174494718 #>  [631]  0.8168730537  0.8214729671  0.8240092558  0.8351984197  0.8344551600 #>  [636]  0.8374342550  0.8261770720  0.8033260086  0.7890775871  0.8020262590 #>  [641]  0.7981888020  0.7946894034  0.7903195153  0.8121033081  0.8063131404 #>  [646]  0.8190717621  0.8339196177  0.8321595055  0.8317222022  0.8295955128 #>  [651]  0.8291583169  0.8075249202  0.8088828666  0.8089889496  0.8226548012 #>  [656]  0.8087642598  0.8130492175  0.8141312270  0.7947507209  0.7985718831 #>  [661]  0.7961604837  0.7944861672  0.7958515294  0.7824948281  0.7847050140 #>  [666]  0.7858056668  0.7816921297  0.7657357711  0.7780780788  0.8080339380 #>  [671]  0.7985243123  0.8062560545  0.8089617159  0.8141530337  0.8135578934 #>  [676]  0.8188924531  0.8013377312  0.7936515587  0.7821823213  0.7676273339 #>  [681]  0.7716581128  0.7661086643  0.7741781203  0.7861153710  0.7911208069 #>  [686]  0.7765663507  0.7877999652  0.7807162134  0.7848303961  0.7869639410 #>  [691]  0.7858521837  0.7878526254  0.7885241151  0.7996537389  0.7746365100 #>  [696]  0.7946402967  0.7940268503  0.8291164925  0.8431861520  0.8584307624 #>  [701]  0.8607511644  0.8735650917  0.8738890929  0.8742934219  0.8741873283 #>  [706]  0.8749605570  0.8749663385  0.8851009736  0.8840843013  0.8828935132 #>  [711]  0.9012349593  0.9007454103  0.9046350028  0.9019519218  0.8815763651 #>  [716]  0.8730232620  0.8760014148  0.8770198850  0.8834258840  0.8826074660 #>  [721]  0.8511413704  0.8500070265  0.8458536338  0.8333662741  0.8254222188 #>  [726]  0.8525281439  0.8400721399  0.8401731036  0.8148805162  0.8227226059 #>  [731]  0.8219011607  0.8253444522  0.8336857687  0.8471143496  0.8471281035 #>  [736]  0.8469110553  0.8470141860  0.8478634982  0.8408205923  0.8417459710 #>  [741]  0.8418499188  0.8497587477  0.8497706349  0.8709751455  0.8774154361 #>  [746]  0.8961204415  0.9049403321  0.9027055005  0.9040950338  0.9045517524 #>  [751]  0.9092747948  0.9425685815  0.9455176407  0.9480446432  0.9478662416 #>  [756]  0.9512537231  0.9545401690  0.9534406980  0.9538769216  0.9553755601 #>  [761]  0.9505328568  0.9476158225  0.9384133737  0.9296584446  0.9236327608 #>  [766]  0.9204760327  0.9317151284  0.8100784048  0.8143238591  0.8279817762 #>  [771]  0.8335361568  0.8392109263  0.8342553028  0.8333584031  0.8141256211 #>  [776]  0.8180996854  0.8102432393  0.8146234886  0.8155782990  0.8204364297 #>  [781]  0.8181936148  0.8092535017  0.8096637044  0.8102278790  0.8119370840 #>  [786]  0.8227596067  0.8161599302  0.8049610363  0.8068633100  0.8137547465 #>  [791]  0.8243522694  0.8254817375  0.8291968049  0.8394711054  0.8471335879 #>  [796]  0.8254369642  0.8255555368  0.8111169683  0.9265156223  0.9228712013 #>  [801]  0.9235312059  0.9235361206  0.9192372445  0.9201943635  0.9203231792 #>  [806]  0.9222371680  0.9197231955  0.9261181103  0.9222994946  0.9280764093 #>  [811]  0.9225754820  0.9229521908  0.9228263696  0.9226626080  0.9228788372 #>  [816]  0.9214595613  0.9218998284  0.9219804217  0.9232633567  0.9274109582 #>  [821]  0.9241730111  0.9205842557  0.9095261222  0.9081952572  0.9057230958 #>  [826]  0.9033100108  0.9383662799  0.9387177545  0.9379750530  0.9374684005 #>  [831]  0.9302219406  0.9271902616  0.9266363863  0.9229546460  0.9214585331 #>  [836]  0.9226393618  0.9205622341  0.9176350744  0.9163476008  0.9201191092 #>  [841]  0.9109789889  0.9168158797  0.9178978990  0.9197775696  0.9038296028 #>  [846]  0.9025689946  0.9067806442  0.9047487924  0.9046507896  0.9030913501 #>  [851]  0.9042058654  0.9034968862  0.9018792192  0.9137870122  0.9176890340 #>  [856]  0.9139809073  0.9130009546  0.9163860765  0.9200635962  0.9179550341 #>  [861]  0.9154571479  0.9222095403  0.9214553041  0.9181319560  0.9228503220 #>  [866]  0.9257083859  0.9257684268  0.9281905130  0.9153773691  0.9163770559 #>  [871]  0.9175063531  0.9238074311  0.9216145477  0.9270113232  0.9269164863 #>  [876]  0.9445627703  0.9479269198  0.9471956885  0.9504996508  0.9495593391 #>  [881]  0.9496509363  0.9451819566  0.9434831764  0.9063929080  0.9099773194 #>  [886]  0.9089254360  0.9152812096  0.8976222877  0.8841515002  0.8811803044 #>  [891]  0.8882078711  0.8888392823  0.8875990344  0.8907387929  0.8830306291 #>  [896]  0.8769215614  0.8693999572  0.8649104625  0.8590793183  0.8698652210 #>  [901]  0.8689795831  0.8579019322  0.8507726712  0.8526815314  0.8354967927 #>  [906]  0.8383306247  0.8359983211  0.8287194542  0.8280145665  0.8347401924 #>  [911]  0.8302225784  0.8311227010  0.8180232673  0.8203758549  0.8540867009 #>  [916]  0.8444607423  0.8375626280  0.8347641842  0.8433459164  0.8557011216 #>  [921]  0.8441666117  0.8287538654  0.8270608814  0.8285847648  0.8184092241 #>  [926]  0.8119070672  0.8242417574  0.8334336977  0.8386101539  0.8423526523 #>  [931]  0.8452570537  0.8446540778  0.8491355297  0.8468141810  0.8381941122 #>  [936]  0.8331853394  0.8152042525  0.8220844343  0.8222249780  0.6862828196 #>  [941]  0.6728961489  0.6903542747  0.6891049509  0.6920957122  0.6927284906 #>  [946]  0.6904669895  0.6797133514  0.6758553076  0.6827254358  0.6754992590 #>  [951]  0.4321419462  0.4380051246  0.4425972575  0.4452660219  0.4477543663 #>  [956]  0.4422042351  0.4199666784  0.3903349579  0.3508686336  0.3371735085 #>  [961]  0.2638502086  0.2243454592  0.2244234472  0.1734444489  0.1759441178 #>  [966]  0.1153572369  0.0869119214  0.0284843257 -0.0324908485 -0.0906236659 #>  [971] -0.0018811205 -0.0085034162 -0.1268590711 -0.0427660571 -0.0032638884 #>  [976] -0.0035056470 -0.0034851780 -0.0108455652 -0.0198073041 -0.0907672514 #>  [981] -0.0819271067  0.0768274382  0.0623091845  0.0317903905 -0.0109203437 #>  [986] -0.0595443258 -0.0577918840 -0.0159977441 -0.0132668115 -0.0322928459 #>  [991] -0.0070637164  0.0041281457  0.0084524619 -0.0007725288  0.0218333481 #>  [996]  0.0052731600 -0.0062876743 -0.0140043053 -0.0130050874 -0.0273500172 #> [1001] -0.0373480077 -0.0208829560 -0.0209980563 -0.0028129520 -0.0829365145 #> [1006] -0.1221682901 -0.1379643418 -0.1208664383 -0.0144607381 -0.0002201815 #> [1011] -0.0130428377 -0.0143430170  0.0173313786  0.0454746066  0.0642398668 #> [1016]  0.1041209147  0.2272294472  0.2265095012  0.2455917121  0.2591551276 #> [1021]  0.3021197735  0.2892523258  0.3806530034  0.3946360485  0.4132259624 #> [1026]  0.4779721610  0.4948274059  0.4976486907  0.5144757905  0.5336398309 #> [1031]  0.5401898967  0.6163172383  0.6211946379  0.6304236573  0.6167184829 #> [1036]  0.6398678419  0.6619889439  0.6831877743  0.6984489285  0.6678786462 #> [1041]  0.6688571568  0.6889749409  0.6977510724  0.7039006605  0.7061209171 #> [1046]  0.7176429892  0.7481181580  0.6771385658  0.6541597213  0.6404189419 #> [1051]  0.6446486361  0.6307496484  0.6344463959  0.6381739265  0.3895345311 #> [1056]  0.3835791701  0.3478301613  0.3578577107  0.3767559380  0.3784743197 #> [1061]  0.3763097135  0.3928285056  0.2862536161  0.2873812369  0.2815142225 #> [1066]  0.2925066305  0.2964857204  0.3111621891  0.2837217391  0.2721050881 #> [1071]  0.2535238651  0.2457580968  0.2338810275  0.2320417950  0.2128229979 #> [1076]  0.1892726741  0.1102412570  0.1071025738  0.0758660633  0.0735198641 #> [1081]  0.0342400028 -0.0092507344 roll_dispersion(dat.PoR$azi.PoR, y = 135, w = 1 / dat$unc) #>    [1] 0.03501763 0.03445033 0.03658720 0.03838845 0.03621586 0.03531313 #>    [7] 0.03799342 0.03679912 0.03432592 0.03397389 0.03404059 0.03406548 #>   [13] 0.03458437 0.03426001 0.03377595 0.03703979 0.03412906 0.03563115 #>   [19] 0.03489086 0.03524728 0.03441607 0.03610684 0.04360663 0.04347905 #>   [25] 0.04327004 0.04286985 0.04008096 0.03763359 0.03810207 0.03753731 #>   [31] 0.03749682 0.03803119 0.03737969 0.03580332 0.03485597 0.03545803 #>   [37] 0.03506167 0.03275163 0.03301348 0.03380482 0.03220761 0.03205670 #>   [43] 0.03387133 0.03309979 0.03287212 0.03290509 0.03018735 0.02907622 #>   [49] 0.02734531 0.02803959 0.03145888 0.03147435 0.02637973 0.01790246 #>   [55] 0.01819621 0.01813194 0.01848918 0.01930064 0.01923735 0.01960411 #>   [61] 0.02000631 0.02116088 0.02098694 0.02106444 0.02101422 0.02001983 #>   [67] 0.02040102 0.02065831 0.02086460 0.02083246 0.02102052 0.02496353 #>   [73] 0.02488507 0.02319282 0.02311634 0.02362790 0.02310021 0.02262475 #>   [79] 0.02423884 0.02796593 0.02691561 0.02265789 0.03370002 0.03424827 #>   [85] 0.03392179 0.03302571 0.03293967 0.03386731 0.03504321 0.03540123 #>   [91] 0.03583414 0.03580864 0.03539797 0.03879480 0.04100213 0.04578191 #>   [97] 0.04851864 0.04471894 0.02871220 0.02668658 0.02652395 0.03256015 #>  [103] 0.03154420 0.02789214 0.02604807 0.02727498 0.03755561 0.03545943 #>  [109] 0.03513278 0.03460478 0.03368495 0.03374761 0.03454047 0.04092174 #>  [115] 0.04664270 0.04598242 0.04705714 0.04720839 0.04743586 0.04712448 #>  [121] 0.04688036 0.04658344 0.04434882 0.04267078 0.03968464 0.04681889 #>  [127] 0.04361898 0.04183837 0.04431002 0.04999526 0.05220786 0.05288656 #>  [133] 0.05105342 0.04976311 0.05239166 0.05316268 0.05217285 0.04319386 #>  [139] 0.04220886 0.04377886 0.04253605 0.04176898 0.04113040 0.04043465 #>  [145] 0.03450464 0.02812715 0.02743365 0.02504053 0.02495961 0.02527180 #>  [151] 0.02763701 0.02731224 0.02935573 0.03240542 0.03257683 0.03376989 #>  [157] 0.02516625 0.02587675 0.02489094 0.02168545 0.02139254 0.02021730 #>  [163] 0.01911639 0.01859581 0.01891517 0.01849720 0.01866312 0.01853206 #>  [169] 0.01928369 0.02025446 0.01675226 0.01684881 0.01739165 0.01786794 #>  [175] 0.01963961 0.02444943 0.02590688 0.02629908 0.02429252 0.02505385 #>  [181] 0.02473564 0.02260442 0.02290595 0.02537179 0.02347967 0.02485143 #>  [187] 0.02454742 0.02574604 0.02576920 0.02684803 0.02579058 0.02641100 #>  [193] 0.02786447 0.02893629 0.02885006 0.02790500 0.02726989 0.05331451 #>  [199] 0.05324910 0.05454713 0.05490182 0.05696078 0.05817795 0.05586742 #>  [205] 0.05590343 0.05614727 0.05230944 0.05284672 0.05347244 0.06142725 #>  [211] 0.06039198 0.05968651 0.06723969 0.06642597 0.06377505 0.06398308 #>  [217] 0.06352748 0.06606126 0.06838881 0.06876007 0.07483992 0.07992473 #>  [223] 0.07954120 0.08012462 0.07979709 0.08375485 0.08621576 0.08755800 #>  [229] 0.05442263 0.05613902 0.05473263 0.05460323 0.05451422 0.05286450 #>  [235] 0.05736107 0.05709114 0.05378446 0.05359311 0.05312007 0.05451244 #>  [241] 0.05165906 0.05611060 0.05376340 0.03621033 0.02881885 0.02774149 #>  [247] 0.02780128 0.02536260 0.02256789 0.02237756 0.02166225 0.01609980 #>  [253] 0.01590845 0.01703159 0.01799765 0.01769213 0.01763503 0.01820701 #>  [259] 0.01854556 0.01832611 0.02237408 0.02305024 0.02412244 0.02710053 #>  [265] 0.02778966 0.02680140 0.02748168 0.02835853 0.02788737 0.02742463 #>  [271] 0.02727237 0.02736967 0.02712639 0.02892245 0.03166790 0.03933977 #>  [277] 0.03946567 0.03946372 0.04352871 0.04338950 0.04373551 0.05019286 #>  [283] 0.05125619 0.06040154 0.05921868 0.05906308 0.06062990 0.06063780 #>  [289] 0.06101709 0.06131436 0.06442598 0.05809472 0.05901910 0.05950592 #>  [295] 0.05603768 0.05614746 0.06615982 0.06551357 0.06445007 0.06603377 #>  [301] 0.06730091 0.06675543 0.06651328 0.06662610 0.06883534 0.06736275 #>  [307] 0.06165450 0.06210076 0.06193204 0.06135538 0.06144382 0.07092604 #>  [313] 0.06175200 0.05986356 0.04219217 0.04672719 0.04239801 0.04190976 #>  [319] 0.04321357 0.04332438 0.04550903 0.04525996 0.04192247 0.04094654 #>  [325] 0.04197877 0.03853022 0.03448835 0.03461028 0.03409333 0.03607294 #>  [331] 0.03614872 0.04360009 0.04282288 0.04453425 0.04779685 0.04771522 #>  [337] 0.04821191 0.04322458 0.04293630 0.04299942 0.05140589 0.05136283 #>  [343] 0.04531050 0.04627095 0.04562841 0.04272230 0.04456028 0.04715294 #>  [349] 0.04683168 0.06129682 0.06224026 0.06074558 0.06113127 0.05695087 #>  [355] 0.05658407 0.05564009 0.05758383 0.06198305 0.06254408 0.06280971 #>  [361] 0.06265396 0.06192652 0.05788155 0.06858094 0.06766375 0.06554393 #>  [367] 0.06659499 0.09146014 0.10187820 0.10246121 0.10112577 0.10529617 #>  [373] 0.10530519 0.11457509 0.12827291 0.12802226 0.11877757 0.10622349 #>  [379] 0.10213007 0.10231347 0.08315623 0.08457290 0.08474692 0.08898383 #>  [385] 0.09559337 0.09619090 0.09318822 0.08957558 0.08941857 0.10439001 #>  [391] 0.10056141 0.09893370 0.09634712 0.09601320 0.09557200 0.09609843 #>  [397] 0.12212481 0.12207683 0.10827612 0.10827503 0.10829191 0.10982630 #>  [403] 0.10525538 0.10597531 0.09623934 0.09045324 0.09212793 0.09909880 #>  [409] 0.10472269 0.10217766 0.10251876 0.10868059 0.10804727 0.10818038 #>  [415] 0.10951781 0.11051611 0.11335435 0.11704768 0.11780709 0.11666676 #>  [421] 0.10273488 0.10678659 0.09949088 0.10294853 0.10366064 0.09827050 #>  [427] 0.09296427 0.05390594 0.05774080 0.05687972 0.05575919 0.05804292 #>  [433] 0.07393406 0.08431212 0.08474511 0.09548725 0.11391113 0.11411068 #>  [439] 0.11512110 0.11514470 0.14718406 0.13898491 0.14013533 0.13929489 #>  [445] 0.13964355 0.13736185 0.13736409 0.13949406 0.14024626 0.14468971 #>  [451] 0.16918269 0.16887984 0.17087686 0.18436815 0.18088897 0.17988932 #>  [457] 0.18194857 0.19014884 0.20675169 0.20440141 0.20907180 0.21526318 #>  [463] 0.21437747 0.21093477 0.19487875 0.19307493 0.19853564 0.19135541 #>  [469] 0.19096962 0.20395413 0.20553946 0.18782534 0.20638391 0.20516749 #>  [475] 0.20549114 0.20415235 0.20189075 0.20198299 0.19111394 0.19244075 #>  [481] 0.19105369 0.16964780 0.16937310 0.16506065 0.16473071 0.17070985 #>  [487] 0.17178558 0.18199464 0.18167335 0.20279084 0.20438860 0.21092659 #>  [493] 0.19268770 0.19217730 0.19040625 0.20088795 0.20235345 0.20052390 #>  [499] 0.20016768 0.19179898 0.18245823 0.18345460 0.17861647 0.17213162 #>  [505] 0.17097919 0.16751861 0.16831168 0.16821450 0.17798766 0.18461389 #>  [511] 0.18332202 0.18330474 0.18265527 0.18322331 0.18213813 0.18108504 #>  [517] 0.18090876 0.17998906 0.16790787 0.16756835 0.14615094 0.15231193 #>  [523] 0.14080073 0.16258232 0.16314075 0.15856690 0.15804552 0.17274698 #>  [529] 0.17233919 0.17193977 0.17841328 0.17580187 0.17367884 0.18305050 #>  [535] 0.15342704 0.15511351 0.15877538 0.16031127 0.16316381 0.16467644 #>  [541] 0.16817652 0.16824641 0.16810669 0.16743479 0.16765263 0.16974307 #>  [547] 0.17199400 0.17416471 0.17435811 0.17160396 0.17159658 0.16206191 #>  [553] 0.15618183 0.15853849 0.14744535 0.14983424 0.15425458 0.14184234 #>  [559] 0.12229717 0.12237442 0.12287699 0.11308389 0.11206004 0.10529073 #>  [565] 0.10611913 0.11774544 0.11735520 0.11234656 0.11009529 0.11094390 #>  [571] 0.09684604 0.09789768 0.09074881 0.09137548 0.09152408 0.09133111 #>  [577] 0.09121601 0.08735274 0.08583705 0.08531289 0.07744259 0.07606904 #>  [583] 0.07496329 0.07549577 0.07747188 0.07692510 0.07126076 0.06873749 #>  [589] 0.07087732 0.07213352 0.07210445 0.06730779 0.07066386 0.07030118 #>  [595] 0.06973490 0.06646582 0.06370917 0.07183781 0.08219210 0.09369036 #>  [601] 0.09151603 0.09074528 0.08852162 0.08826931 0.08738939 0.08419242 #>  [607] 0.08317626 0.08480544 0.08625833 0.08634929 0.08452828 0.08890985 #>  [613] 0.09470671 0.09631574 0.09526002 0.09437406 0.08782685 0.08769571 #>  [619] 0.08936719 0.09179471 0.08375675 0.08393352 0.09050340 0.09049224 #>  [625] 0.08978836 0.09646310 0.09092941 0.09466164 0.08370063 0.07063763 #>  [631] 0.04578174 0.04463176 0.04399769 0.04120040 0.04138621 0.04064144 #>  [637] 0.04345573 0.04916850 0.05273060 0.04949344 0.05045280 0.05132765 #>  [643] 0.05242012 0.04697417 0.04842171 0.04523206 0.04152010 0.04196012 #>  [649] 0.04206945 0.04260112 0.04271042 0.04811877 0.04777928 0.04775276 #>  [655] 0.04433630 0.04780894 0.04673770 0.04646719 0.05131232 0.05035703 #>  [661] 0.05095988 0.05137846 0.05103712 0.05437629 0.05382375 0.05354858 #>  [667] 0.05457697 0.05856606 0.05548048 0.04799152 0.05036892 0.04843599 #>  [673] 0.04775957 0.04646174 0.04661053 0.04527689 0.04966557 0.05158711 #>  [679] 0.05445442 0.05809317 0.05708547 0.05847283 0.05645547 0.05347116 #>  [685] 0.05221980 0.05585841 0.05305001 0.05482095 0.05379240 0.05325901 #>  [691] 0.05353695 0.05303684 0.05286897 0.05008657 0.05634087 0.05133993 #>  [697] 0.05149329 0.04272088 0.03920346 0.03539231 0.03481221 0.03160873 #>  [703] 0.03152773 0.03142664 0.03145317 0.03125986 0.03125842 0.02872476 #>  [709] 0.02897892 0.02927662 0.02469126 0.02481365 0.02384125 0.02451202 #>  [715] 0.02960591 0.03174418 0.03099965 0.03074503 0.02914353 0.02934813 #>  [721] 0.03721466 0.03749824 0.03853659 0.04165843 0.04364445 0.03686796 #>  [727] 0.03998197 0.03995672 0.04627987 0.04431935 0.04452471 0.04366389 #>  [733] 0.04157856 0.03822141 0.03821797 0.03827224 0.03824645 0.03803413 #>  [739] 0.03979485 0.03956351 0.03953752 0.03756031 0.03755734 0.03225621 #>  [745] 0.03064614 0.02596989 0.02376492 0.02432362 0.02397624 0.02386206 #>  [751] 0.02268130 0.01435785 0.01362059 0.01298884 0.01303344 0.01218657 #>  [757] 0.01136496 0.01163983 0.01153077 0.01115611 0.01236679 0.01309604 #>  [763] 0.01539666 0.01758539 0.01909181 0.01988099 0.01707122 0.04748040 #>  [769] 0.04641904 0.04300456 0.04161596 0.04019727 0.04143617 0.04166040 #>  [775] 0.04646859 0.04547508 0.04743919 0.04634413 0.04610543 0.04489089 #>  [781] 0.04545160 0.04768662 0.04758407 0.04744303 0.04701573 0.04431010 #>  [787] 0.04596002 0.04875974 0.04828417 0.04656131 0.04391193 0.04362957 #>  [793] 0.04270080 0.04013222 0.03821660 0.04364076 0.04361112 0.04722076 #>  [799] 0.01837109 0.01928220 0.01911720 0.01911597 0.02019069 0.01995141 #>  [805] 0.01991921 0.01944071 0.02006920 0.01847047 0.01942513 0.01798090 #>  [811] 0.01935613 0.01926195 0.01929341 0.01933435 0.01928029 0.01963511 #>  [817] 0.01952504 0.01950489 0.01918416 0.01814726 0.01895675 0.01985394 #>  [823] 0.02261847 0.02295119 0.02356923 0.02417250 0.01540843 0.01532056 #>  [829] 0.01550624 0.01563290 0.01744451 0.01820243 0.01834090 0.01926134 #>  [835] 0.01963537 0.01934016 0.01985944 0.02059123 0.02091310 0.01997022 #>  [841] 0.02225525 0.02079603 0.02052553 0.02005561 0.02404260 0.02435775 #>  [847] 0.02330484 0.02381280 0.02383730 0.02422716 0.02394853 0.02412578 #>  [853] 0.02453020 0.02155325 0.02057774 0.02150477 0.02174976 0.02090348 #>  [859] 0.01998410 0.02051124 0.02113571 0.01944761 0.01963617 0.02046701 #>  [865] 0.01928742 0.01857290 0.01855789 0.01795237 0.02115566 0.02090574 #>  [871] 0.02062341 0.01904814 0.01959636 0.01824717 0.01827088 0.01385931 #>  [877] 0.01301827 0.01320108 0.01237509 0.01261017 0.01258727 0.01370451 #>  [883] 0.01412921 0.02340177 0.02250567 0.02276864 0.02117970 0.02559443 #>  [889] 0.02896212 0.02970492 0.02794803 0.02779018 0.02810024 0.02731530 #>  [895] 0.02924234 0.03076961 0.03265001 0.03377238 0.03523017 0.03253369 #>  [901] 0.03275510 0.03552452 0.03730683 0.03682962 0.04112580 0.04041734 #>  [907] 0.04100042 0.04282014 0.04299636 0.04131495 0.04244436 0.04221932 #>  [913] 0.04549418 0.04490604 0.03647832 0.03888481 0.04060934 0.04130895 #>  [919] 0.03916352 0.03607472 0.03895835 0.04281153 0.04323478 0.04285381 #>  [925] 0.04539769 0.04702323 0.04393956 0.04164158 0.04034746 0.03941184 #>  [931] 0.03868574 0.03883648 0.03771612 0.03829645 0.04045147 0.04170367 #>  [937] 0.04619894 0.04447889 0.04444376 0.07842930 0.08177596 0.07741143 #>  [943] 0.07772376 0.07697607 0.07681788 0.07738325 0.08007166 0.08103617 #>  [949] 0.07931864 0.08112519 0.14196451 0.14049872 0.13935069 0.13868349 #>  [955] 0.13806141 0.13944894 0.14500833 0.15241626 0.16228284 0.16570662 #>  [961] 0.18403745 0.19391364 0.19389414 0.20663889 0.20601397 0.22116069 #>  [967] 0.22827202 0.24287892 0.25812271 0.27265592 0.25047028 0.25212585 #>  [973] 0.28171477 0.26069151 0.25081597 0.25087641 0.25087129 0.25271139 #>  [979] 0.25495183 0.27269181 0.27048178 0.23079314 0.23442270 0.24205240 #>  [985] 0.25273009 0.26488608 0.26444797 0.25399944 0.25331670 0.25807321 #>  [991] 0.25176593 0.24896796 0.24788688 0.25019313 0.24454166 0.24868171 #>  [997] 0.25157192 0.25350108 0.25325127 0.25683750 0.25933700 0.25522074 #> [1003] 0.25524951 0.25070324 0.27073413 0.28054207 0.28449109 0.28021661 #> [1009] 0.25361518 0.25005505 0.25326071 0.25358575 0.24566716 0.23863135 #> [1015] 0.23394003 0.22396977 0.19319264 0.19337262 0.18860207 0.18521122 #> [1021] 0.17447006 0.17768692 0.15483675 0.15134099 0.14669351 0.13050696 #> [1027] 0.12629315 0.12558783 0.12138105 0.11659004 0.11495253 0.09592069 #> [1033] 0.09470134 0.09239409 0.09582038 0.09003304 0.08450276 0.07920306 #> [1039] 0.07538777 0.08303034 0.08278571 0.07775626 0.07556223 0.07402483 #> [1045] 0.07346977 0.07058925 0.06297046 0.08071536 0.08646007 0.08989526 #> [1051] 0.08883784 0.09231259 0.09138840 0.09045652 0.15261637 0.15410521 #> [1057] 0.16304246 0.16053557 0.15581102 0.15538142 0.15592257 0.15179287 #> [1063] 0.17843660 0.17815469 0.17962144 0.17687334 0.17587857 0.17220945 #> [1069] 0.17906957 0.18197373 0.18661903 0.18856048 0.19152974 0.19198955 #> [1075] 0.19679425 0.20268183 0.22243969 0.22322436 0.23103348 0.23162003 #> [1081] 0.24144000 0.25231268 roll_confidence(dat.PoR$azi.PoR, w = 1 / dat$unc) #>                                                                               #>  34.629991  33.835627  34.544915  34.729082  32.664503  31.415622  33.137503  #>                                                                               #>  31.732427  28.437829  27.680863  27.142274  27.101290  27.130003  26.680367  #>                                                                               #>  26.081838  26.562247  25.910728  26.052905  25.509287  25.702726  25.249362  #>                                                                               #>  25.446147  41.251662  41.170176  41.021159  40.739225  39.741157  39.524198  #>                                                                               #>  39.803674  39.526513  39.513765  39.711848  39.316888  38.802188  38.845283  #>                                                                               #>  39.234266  39.053400  37.505452  37.624221  40.367952  39.218641  39.146562  #>                                                                               #>  39.453373  39.225759  38.938942  39.182795  37.337610  37.111754  36.913375  #>                                                                               #>  37.608064  39.258365  39.255627  37.884439  19.024170  19.068262  19.156021  #>                                                                               #>  19.664315  20.105745  20.349450  20.570779  20.795463  21.854877  21.856681  #>                                                                               #>  21.884993  21.814943  21.066612  21.228975  21.420853  21.527481  21.449827  #>                                                                               #>  21.566740  23.677754  23.611610  22.641952  22.438816  22.457702  22.345121  #>                                                                               #>  22.367305  23.214857  25.035018  24.545894  22.773313  26.740022  26.586056  #>                                                                               #>  26.384285  25.652909  25.646471  23.349951  23.369625  22.877708  23.877242  #>                                                                               #>  24.074824  24.361872  25.283474  25.690322  26.981378  27.747356  26.163356  #>                                                                               #>  20.919952  20.115299  19.905867  18.282230  17.295448  16.233440  15.865245  #>                                                                               #>  17.025087  16.935392  16.233950  16.135575  16.013844  15.803405  15.490248  #>                                                                               #>  15.497984  14.605320  15.106311  15.360738  15.604214  16.032661  16.507553  #>                                                                               #>  16.780349  16.770197  16.375607  15.628901  14.966868  14.090847  13.774585  #>                                                                               #>  12.957122  12.364215  12.934128  14.036115  14.345268  14.578553  14.931383  #>                                                                               #>  14.624488  15.370682  15.611454  14.691018  13.870549  13.634297  13.503843  #>                                                                               #>  13.341345  13.254260  13.224270  12.851999  12.197757  10.663508  10.579943  #>                                                                               #>   9.473100   9.400223   9.670591   9.913562   9.855805  10.320520  11.205894  #>                                                                               #>  11.245080  11.498360  10.658425  10.968470  10.720438  10.239149  10.159202  #>                                                                               #>   9.501662   8.547668   8.332912   8.418431   8.450970   8.510712   8.419744  #>                                                                               #>   8.649990   8.993193   8.414240   8.445360   8.523838   8.798489   9.071962  #>                                                                               #>  10.305733  10.586109  10.380246   9.958368  10.063352   9.575168   9.126195  #>                                                                               #>   9.295802   9.731414   9.149127   9.459109   9.383382   9.331490   9.370612  #>                                                                               #>   9.565934   9.336856   9.519742   9.946053  10.378639  10.156864   9.762926  #>                                                                               #>   9.605665  16.779621  16.715936  17.143197  17.249027  17.664008  17.912980  #>                                                                               #>  17.017840  17.254451  18.046380  17.568220  17.654928  17.790537  19.274165  #>                                                                               #>  19.160887  19.043668  19.833276  19.474456  19.061647  19.250332  19.218240  #>                                                                               #>  24.066342  25.077032  25.187774  25.881089  26.973619  26.804732  27.605999  #>                                                                               #>  27.518356  28.900090  29.834991  30.251855  24.947117  24.881477  24.505498  #>                                                                               #>  24.534746  24.533313  24.027394  26.492649  26.322495  24.766866  24.672322  #>                                                                               #>  25.070956  26.016266  26.179511  28.029235  27.226734  25.544562  22.930901  #>                                                                               #>  23.472917  23.523651  22.657360  14.204177  14.104493  12.495668  10.994678  #>                                                                               #>  10.803183  10.957515  10.225026  10.003933   9.978938  10.183774  10.300408  #>                                                                               #>  10.019362  10.759278  11.002407  10.875015  12.043835  12.199477  11.464668  #>                                                                               #>  11.745983  12.622084  12.338098  11.977929  11.730954  11.768718  11.500143  #>                                                                               #>  11.909507  12.514023  21.971266  22.009592  21.998379  23.369639  23.322982  #>                                                                               #>  23.439069  26.999851  28.257582  28.896394  28.815516  29.415605  30.012362  #>                                                                               #>  30.091900  30.212740  30.318186  31.582430  32.335566  33.120451  34.748596  #>                                                                               #>  35.321451  35.326041  40.414467  40.693964  40.238250  41.022790  41.542016  #>                                                                               #>  41.304613  41.207748  41.258935  43.488410  45.386482  30.985962  30.983881  #>                                                                               #>  30.861271  30.904365  30.847426  32.346889  29.572217  29.328916  28.637158  #>                                                                               #>  30.721522  26.569522  25.868612  27.204342  27.468016  29.031529  28.960617  #>                                                                               #>  27.405261  26.763020  27.800884  25.654845  23.724379  24.091643  23.741231  #>                                                                               #>  24.333042  24.315458  23.970083  23.558728  23.842634  24.780205  25.057126  #>                                                                               #>  24.957821  23.308009  23.204445  23.172675  23.333097  23.351266  21.509312  #>                                                                               #>  21.646417  21.178308  20.274154  20.873184  22.230148  22.312672  23.594206  #>                                                                               #>  24.222848  23.204063  23.408044  21.984396  21.959295  21.079184  22.262278  #>                                                                               #>  23.732671  24.323231  24.511162  24.413873  24.272591  25.211210  33.183321  #>                                                                               #>  32.721127  32.324118  32.751799  38.136122  42.002869  42.216990  41.713431  #>                                                                               #>  41.319528  41.345971  51.158994  51.933088  52.020463  48.392462  44.667308  #>                                                                               #>  43.802628  43.982731  39.737805  43.934222  44.202825  48.693345  51.865991  #>                                                                               #>  51.226200  48.629276  46.014749  45.982395  49.704176  47.917916  47.305040  #>                                                                               #>  46.164169  45.431514  40.956978  41.197666  43.825717  43.558483  40.484829  #>                                                                               #>  40.235306  40.266750  40.326852  38.669113  38.861852  32.671370  31.581273  #>                                                                               #>  31.957196  33.090826  34.520534  34.104330  34.104425  35.875759  31.390364  #>                                                                               #>  31.411865  28.697312  29.760268  29.667356  30.126848  30.131582  30.226107  #>                                                                               #>  26.935509  28.819646  27.768373  28.756607  29.413799  30.340870  28.623857  #>                                                                               #>  24.469505  24.974246  24.619536  23.712560  24.496114  31.095565  36.143791  #>                                                                               #>  36.383149  38.131190  42.510679  41.719640  41.544520  41.524536  47.609717  #>                                                                               #>  45.312375  46.051859  45.458171  44.645880  45.710164  45.268875  47.940425  #>                                                                               #>  47.361426  48.428286  50.679727  51.482348  54.464015  59.805369  58.883445  #>                                                                               #>  55.369202  60.994197  62.837478  64.929548  65.551825  66.658287  73.302677  #>                                                                               #>  73.445449  67.787517  57.995931  54.970178  62.956643  59.958235  59.908172  #>                                                                               #>  64.941107  64.425800  59.767829  65.424435  61.137894  60.932695  61.951368  #>                                                                               #>  57.355512  58.684619  51.906697  52.279475  52.362019  52.657552  52.480374  #>                                                                               #>  51.055118  49.200945  52.674997  56.189540  55.176498  55.703833  56.456137  #>                                                                               #>  56.371110  59.972554  54.810756  55.692768  55.897366  56.376453  57.631129  #>                                                                               #>  52.766574  52.552335  45.977400  46.416507  50.576404  49.660078  47.751185  #>                                                                               #>  48.257260  46.563350  46.630851  46.312552  49.932660  52.836501  53.466003  #>                                                                               #>  53.471221  53.679300  53.061190  51.130136  51.664279  49.581514  50.490310  #>                                                                               #>  47.026359  46.889353  43.504098  47.376245  43.444893  49.241027  48.610157  #>                                                                               #>  45.069915  51.903206  57.288994  58.055310  58.367768  70.898863  64.885132  #>                                                                               #>  59.506351  62.962422  48.018995  48.147278  49.414581  49.329765  53.973843  #>                                                                               #>  53.518377  56.043557  51.869270  51.918093  51.588434  51.460746  52.642573  #>                                                                               #>  50.917270  55.192228  54.950812  52.548899  52.551199  55.129714  51.339983  #>                                                                               #>  55.822024  52.602330  51.119572  55.295739  49.420437  45.035468  45.103499  #>                                                                               #>  45.963568  44.907386  44.894806  42.736715  41.508654  48.536854  48.646230  #>                                                                               #>  46.826157  45.198095  43.019432  39.143780  40.436090  41.405275  41.643698  #>                                                                               #>  41.780085  41.713081  41.649660  41.955315  37.401497  37.233953  36.196207  #>                                                                               #>  35.096825  34.234747  34.209087  28.256799  27.801997  26.853267  25.572647  #>                                                                               #>  25.891928  26.899755  27.129689  26.095381  27.090497  26.680504  26.686110  #>                                                                               #>  26.785664  26.256382  26.130370  31.797559  40.585344  39.254056  38.838742  #>                                                                               #>  40.455864  40.817255  40.516934  39.191297  38.845726  39.448301  40.463903  #>                                                                               #>  40.421069  39.148677  40.951191  45.778641  46.573173  46.010241  47.468763  #>                                                                               #>  45.243490  45.050975  45.604272  47.915527  45.196645  45.458246  48.192292  #>                                                                               #>  48.183973  47.862308  50.325472  46.503815  48.232527  48.603334  43.408399  #>                                                                               #>  37.275969  36.784195  35.739671  28.733199  28.774200  28.308578  29.838069  #>                                                                               #>  29.432335  28.864925  26.172333  26.607057  27.970463  27.871813  20.122562  #>                                                                               #>  20.683214  19.209774  17.912067  18.041473  18.231024  18.072874  18.022326  #>                                                                               #>  19.462675  18.699871  18.484810  17.424011  20.638833  20.478328  22.347420  #>                                                                               #>  22.455073  22.336174  22.943015  23.000253  22.720484  22.751011  22.677400  #>                                                                               #>  22.752484  23.199160  27.781740  28.639975  26.410543  32.833941  31.992902  #>                                                                               #>  31.710942  31.305060  31.447170  30.839663  32.141350  33.641949  35.074980  #>                                                                               #>  32.990133  32.601616  33.285098  32.264140  30.743540  29.812587  31.142535  #>                                                                               #>  29.597545  30.076170  29.615772  29.332073  28.794747  28.498073  28.429451  #>                                                                               #>  27.355276  29.284852  27.508315  27.512731  24.486747  21.214065  20.081378  #>                                                                               #>  20.484131  12.344219  12.339895  12.317278  12.235972  11.996495  11.996711  #>                                                                               #>  11.446055  11.737403  11.742803  11.273260  11.331753  10.510053  11.025543  #>                                                                               #>  12.591190  12.528855  12.365380  12.302160  11.154680  11.285764  13.372571  #>                                                                               #>  14.487826  15.472311  15.203525  15.930357  15.359974  16.287697  16.276117  #>                                                                               #>  17.183609  16.744640  16.700409  16.465722  16.009268  15.222703  15.221935  #>                                                                               #>  15.245860  15.235949  15.183499  15.542305  15.417848  15.355008  14.878638  #>                                                                               #>  14.884931  13.673076  12.896422  11.467181  11.166014  11.402306  11.383689  #>                                                                               #>  11.442972  10.930156   9.631549   8.797207   7.936920   8.355916   7.402663  #>                                                                               #>   6.384782   6.389851   6.153388   6.336452   7.516268   7.735689  16.745623  #>                                                                               #>  17.796855  18.522896  18.328977  16.882613  17.329445  17.089423  16.246775  #>                                                                               #>  15.937203  15.615524  15.869809  16.131771  17.231123  17.028792  17.682699  #>                                                                               #>  17.477971  17.566232  17.338764  17.715697  18.406164  18.411884  18.376827  #>                                                                               #>  18.239593  18.167567  18.599429  19.382685  19.238323  18.763957  17.870736  #>                                                                               #>  17.646129  17.374208  10.244827   9.263816  10.418046  10.413697  10.999638  #>                                                                               #>   8.610028   9.304040   9.826024   9.825025  10.622430  10.558499  10.608639  #>                                                                               #>  10.384743  10.611179   9.948405  10.491573  10.079384  10.792872  10.640261  #>                                                                               #>  10.682997  10.698134  10.622479  10.806979  10.753273  10.789195  10.470025  #>                                                                               #>  10.093426  10.449447  10.804983  10.041920  10.190320  10.380948  10.598886  #>                                                                               #>   9.529204  10.350936  10.416964  10.167680   9.828154  10.077306  10.005844  #>                                                                               #>   9.843564   9.989206   9.395289   9.616720   9.885189   9.985855   9.270158  #>                                                                               #>   9.398473   8.835085   8.722171   8.526595   9.281868   9.681922   9.319656  #>                                                                               #>   9.483140   9.452155   9.613562   9.616444   9.800754   9.724328   9.225958  #>                                                                               #>   9.226099   9.420931   9.666069   9.377112   8.450691   8.595451   8.900352  #>                                                                               #>   8.651857   8.929552   9.362667   9.256580   8.840726   8.846433   8.654614  #>                                                                               #>   9.023357   8.934096   8.863478   8.839242   9.057048   8.421526   8.447568  #>                                                                               #>   7.524243   6.978210   7.000935   6.604836   6.768141   6.818311   7.359079  #>                                                                               #>   8.058381   9.335281   9.129534   9.204274   8.871756   9.816386  10.321584  #>                                                                               #>  10.542592  10.144192  10.039553  10.533979  10.112474  17.032564  17.536607  #>                                                                               #>  18.122287  18.721622  19.184520  18.972031  18.555925  19.770764  20.316516  #>                                                                               #>  20.217479  21.583232  20.933515  20.947371  21.094263  20.963354  20.326633  #>                                                                               #>  20.124309  20.103689  19.066993  18.898735  18.940067  19.666785  19.721090  #>                                                                               #>  19.742547  19.679204  19.552913  19.780840  20.713902  20.704438  20.075782  #>                                                                               #>  20.012031  11.037343  10.443627   9.974330   9.259132   9.129499   8.626607  #>                                                                               #>   8.841545   8.237478   8.549487   8.145410   8.727093   9.041678   8.695029  #>                                                                               #>   8.639749  16.581758  17.046990  16.813349  16.833452  17.995049  18.128792  #>                                                                               #>  18.457157  18.585826  19.053215  18.909179  24.427054  33.038967  32.984424  #>                                                                               #>  32.954331  32.821835  32.816135  33.489513  40.361150  45.512341  50.839803  #>                                                                               #>  55.972456  64.405331  69.569286  69.583921  78.828258  78.970586  93.092328  #>                                                                               #>  92.608563 104.601869 120.263763 133.046896 124.862269 118.655217 127.067666  #>                                                                               #> 107.551765 103.665572 102.996766 103.635902 116.220456 131.602842 151.923111  #>                                                                               #> 155.751608 129.198816 149.536757   3.361623 128.342160  40.485226  81.407360  #>                                                                               #> 137.550142 120.364131 133.135781 141.591268 119.678124  97.647961  93.554395  #>                                                                               #>  87.023848  85.172700  82.064262  75.783600  60.395159  54.964893  49.477116  #>                                                                               #>  50.822855  45.216459  43.771811  42.564321  46.834108  46.869350  44.656974  #>                                                                               #>  45.759596  43.586818  44.824632  49.327509  54.384839  61.078795  61.764592  #>                                                                               #>  70.338268  65.972552  66.633302  76.358650  74.746877  74.910120  77.036369  #>                                                                               #>  74.826684  75.392570  71.757920  62.510252  56.403997  59.376600  57.196892  #>                                                                               #>  54.114778  52.467313  48.331632  47.628866  46.524830  47.804809  47.166496  #>                                                                               #>  48.112740  43.452694  43.797434  47.343734  47.574225  44.065064  41.053626  #>                                                                               #>  40.159994  40.536097  38.809092  39.190241  44.045643  45.066508  46.441180  #>                                                                               #>  46.008342  46.718154  46.358795  45.794267  58.729804  59.203994  64.027487  #>                                                                               #>  61.762348  54.005686  52.811130  51.102463  44.021265  55.234179  55.333177  #>                                                                               #>  55.266439  55.025137  53.846610  47.840903  51.824617  53.247670  54.657818  #>                                                                               #>  55.906953  59.307458  61.345033  65.455426  69.750064  90.221233  94.302705  #>                                              #> 123.869649 144.058895 165.806351  91.541005  # \\donttest{ roll_dispersion_CI(dat.PoR$azi.PoR, y = 135, w = 1 / dat$unc, R = 10) #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #>               [,1]       [,2] #>    [1,] 0.05518830 0.13859643 #>    [2,] 0.05586176 0.18189913 #>    [3,] 0.06936713 0.18100994 #>    [4,] 0.08810121 0.18697547 #>    [5,] 0.07376697 0.15526244 #>    [6,] 0.06112433 0.20122537 #>    [7,] 0.09306805 0.14838847 #>    [8,] 0.08470086 0.17784843 #>    [9,] 0.09210266 0.16636492 #>   [10,] 0.09178790 0.16514322 #>   [11,] 0.07780905 0.14910259 #>   [12,] 0.06796299 0.17295379 #>   [13,] 0.09410887 0.14848574 #>   [14,] 0.06627178 0.16564623 #>   [15,] 0.07295252 0.15682562 #>   [16,] 0.11054249 0.18846665 #>   [17,] 0.06140942 0.15150110 #>   [18,] 0.09762698 0.16814566 #>   [19,] 0.09899448 0.17170065 #>   [20,] 0.11337786 0.19446476 #>   [21,] 0.10401016 0.15579951 #>   [22,] 0.09606200 0.15688639 #>   [23,] 0.10264457 0.29574943 #>   [24,] 0.11767293 0.24069724 #>   [25,] 0.10562599 0.18763595 #>   [26,] 0.13322275 0.23367190 #>   [27,] 0.09916656 0.19845581 #>   [28,] 0.08136425 0.19364026 #>   [29,] 0.08767470 0.19427682 #>   [30,] 0.07410237 0.23026677 #>   [31,] 0.12451368 0.21606689 #>   [32,] 0.10535591 0.17688477 #>   [33,] 0.11597727 0.20985111 #>   [34,] 0.09341404 0.16758918 #>   [35,] 0.06858417 0.17051603 #>   [36,] 0.09856873 0.17089019 #>   [37,] 0.10307618 0.19733385 #>   [38,] 0.07281197 0.15342214 #>   [39,] 0.08534359 0.17481840 #>   [40,] 0.09952842 0.16244935 #>   [41,] 0.06489811 0.16715548 #>   [42,] 0.04765031 0.15741216 #>   [43,] 0.09213038 0.19709657 #>   [44,] 0.10384661 0.19879713 #>   [45,] 0.08661701 0.23306902 #>   [46,] 0.07920966 0.18730474 #>   [47,] 0.04881523 0.17216865 #>   [48,] 0.04678446 0.15849597 #>   [49,] 0.03902503 0.24162521 #>   [50,] 0.05613547 0.13049251 #>   [51,] 0.04078517 0.21224693 #>   [52,] 0.07939921 0.18088007 #>   [53,] 0.07721397 0.17736521 #>   [54,] 0.02304894 0.10283583 #>   [55,] 0.04284660 0.11229432 #>   [56,] 0.05283886 0.11903061 #>   [57,] 0.03878103 0.09925798 #>   [58,] 0.03641603 0.13991082 #>   [59,] 0.05299460 0.07867261 #>   [60,] 0.05386216 0.12144240 #>   [61,] 0.04180198 0.09879931 #>   [62,] 0.04159378 0.13166091 #>   [63,] 0.04368652 0.14060134 #>   [64,] 0.05439391 0.10791502 #>   [65,] 0.05122795 0.13240407 #>   [66,] 0.04651994 0.07731153 #>   [67,] 0.04714457 0.11033266 #>   [68,] 0.05739763 0.10106944 #>   [69,] 0.04083912 0.08732769 #>   [70,] 0.06430146 0.14100945 #>   [71,] 0.06295563 0.12337491 #>   [72,] 0.05303492 0.13957846 #>   [73,] 0.05733812 0.13265886 #>   [74,] 0.06269210 0.10392263 #>   [75,] 0.05654852 0.14395035 #>   [76,] 0.05828730 0.10699956 #>   [77,] 0.07073448 0.09997610 #>   [78,] 0.05413346 0.10063654 #>   [79,] 0.06491117 0.10579611 #>   [80,] 0.03564421 0.16026426 #>   [81,] 0.05299396 0.11919895 #>   [82,] 0.05244789 0.13914731 #>   [83,] 0.06350181 0.22625152 #>   [84,] 0.07201091 0.15654041 #>   [85,] 0.06135817 0.16483293 #>   [86,] 0.04647546 0.17448251 #>   [87,] 0.06991418 0.15932670 #>   [88,] 0.05802964 0.15532406 #>   [89,] 0.05873787 0.16086891 #>   [90,] 0.05254043 0.14505027 #>   [91,] 0.05519435 0.16074879 #>   [92,] 0.06709729 0.20653505 #>   [93,] 0.05466180 0.19571238 #>   [94,] 0.06422982 0.21684580 #>   [95,] 0.08018447 0.17802854 #>   [96,] 0.09213000 0.17143552 #>   [97,] 0.11557543 0.18667297 #>   [98,] 0.08344143 0.22319766 #>   [99,] 0.08113322 0.18395753 #>  [100,] 0.05495223 0.17573629 #>  [101,] 0.05409497 0.19006156 #>  [102,] 0.04877677 0.22517488 #>  [103,] 0.07587176 0.12151175 #>  [104,] 0.02477657 0.10381273 #>  [105,] 0.06632281 0.12306592 #>  [106,] 0.04748154 0.11717550 #>  [107,] 0.04148628 0.15591034 #>  [108,] 0.05999969 0.16612891 #>  [109,] 0.06087950 0.19649336 #>  [110,] 0.06885125 0.14564548 #>  [111,] 0.03294832 0.15595029 #>  [112,] 0.02635279 0.11941562 #>  [113,] 0.04391765 0.15333112 #>  [114,] 0.04778393 0.14043131 #>  [115,] 0.07871090 0.16107387 #>  [116,] 0.08185477 0.15918964 #>  [117,] 0.06510402 0.19928402 #>  [118,] 0.08646530 0.13524154 #>  [119,] 0.07678585 0.23387497 #>  [120,] 0.06738334 0.21358671 #>  [121,] 0.10131883 0.17239293 #>  [122,] 0.09782974 0.22056064 #>  [123,] 0.08161917 0.12196002 #>  [124,] 0.06888763 0.21506845 #>  [125,] 0.05574075 0.24466838 #>  [126,] 0.07174377 0.17881644 #>  [127,] 0.09209072 0.21322267 #>  [128,] 0.05601457 0.15390475 #>  [129,] 0.09829779 0.22386632 #>  [130,] 0.07189781 0.20553137 #>  [131,] 0.09074335 0.24166790 #>  [132,] 0.04218303 0.19004164 #>  [133,] 0.08547619 0.22222200 #>  [134,] 0.12090155 0.24862084 #>  [135,] 0.14888237 0.26834212 #>  [136,] 0.10326072 0.26132277 #>  [137,] 0.08551314 0.26069864 #>  [138,] 0.09285905 0.20618500 #>  [139,] 0.10268224 0.21240370 #>  [140,] 0.09771672 0.20024529 #>  [141,] 0.04955498 0.20001335 #>  [142,] 0.13664063 0.22343864 #>  [143,] 0.07484030 0.23613985 #>  [144,] 0.10625520 0.20994164 #>  [145,] 0.05340330 0.20841366 #>  [146,] 0.07867177 0.16781217 #>  [147,] 0.05999366 0.19754754 #>  [148,] 0.02734250 0.13377259 #>  [149,] 0.04370246 0.16808141 #>  [150,] 0.05517280 0.13710181 #>  [151,] 0.08534024 0.18065567 #>  [152,] 0.03475010 0.14119353 #>  [153,] 0.03464624 0.20776309 #>  [154,] 0.05802653 0.20040205 #>  [155,] 0.06936540 0.18676215 #>  [156,] 0.05889184 0.17975376 #>  [157,] 0.03915882 0.10590440 #>  [158,] 0.05829491 0.14581233 #>  [159,] 0.05575397 0.21413332 #>  [160,] 0.04096984 0.11513615 #>  [161,] 0.04658739 0.12160230 #>  [162,] 0.06475855 0.10030151 #>  [163,] 0.04611509 0.08352920 #>  [164,] 0.02305430 0.11936707 #>  [165,] 0.03505183 0.12627464 #>  [166,] 0.03202902 0.12429314 #>  [167,] 0.03967998 0.10514345 #>  [168,] 0.03364057 0.11434769 #>  [169,] 0.04527991 0.12227063 #>  [170,] 0.03932494 0.10421621 #>  [171,] 0.02462366 0.08192759 #>  [172,] 0.02692894 0.12832740 #>  [173,] 0.05241523 0.08834485 #>  [174,] 0.04637407 0.15158185 #>  [175,] 0.03950286 0.13546454 #>  [176,] 0.04807360 0.11363414 #>  [177,] 0.07190734 0.13362115 #>  [178,] 0.07065431 0.18124178 #>  [179,] 0.04634036 0.12065240 #>  [180,] 0.07681371 0.15895691 #>  [181,] 0.07214874 0.14041156 #>  [182,] 0.04562540 0.13946014 #>  [183,] 0.04820410 0.15957074 #>  [184,] 0.05556754 0.14674861 #>  [185,] 0.07001628 0.13817516 #>  [186,] 0.06614511 0.12747346 #>  [187,] 0.04229931 0.14758930 #>  [188,] 0.05164410 0.17473414 #>  [189,] 0.06400352 0.14510559 #>  [190,] 0.06811376 0.13646836 #>  [191,] 0.02901916 0.13904328 #>  [192,] 0.06126685 0.16164115 #>  [193,] 0.03738912 0.13141002 #>  [194,] 0.08022072 0.23338846 #>  [195,] 0.07163634 0.19695306 #>  [196,] 0.06567755 0.12882366 #>  [197,] 0.04882874 0.14941862 #>  [198,] 0.07586187 0.27179935 #>  [199,] 0.04902128 0.24223969 #>  [200,] 0.08908622 0.31024768 #>  [201,] 0.06836856 0.25877951 #>  [202,] 0.03414912 0.26896873 #>  [203,] 0.11873773 0.32267744 #>  [204,] 0.01819463 0.30528198 #>  [205,] 0.10169520 0.34887178 #>  [206,] 0.08653992 0.28409865 #>  [207,] 0.04364220 0.27942833 #>  [208,] 0.07593135 0.25785658 #>  [209,] 0.10696863 0.31868092 #>  [210,] 0.13593135 0.39695910 #>  [211,] 0.11205926 0.29455867 #>  [212,] 0.10772784 0.28906167 #>  [213,] 0.07991414 0.32658705 #>  [214,] 0.07849754 0.31298021 #>  [215,] 0.10708287 0.21363703 #>  [216,] 0.06683704 0.25017840 #>  [217,] 0.06200091 0.22957520 #>  [218,] 0.07026611 0.26059566 #>  [219,] 0.08315965 0.31597112 #>  [220,] 0.05777313 0.29666725 #>  [221,] 0.12534317 0.33880162 #>  [222,] 0.10699231 0.28075918 #>  [223,] 0.13781307 0.31519436 #>  [224,] 0.14250978 0.33268349 #>  [225,] 0.14018745 0.31997987 #>  [226,] 0.13880052 0.36347757 #>  [227,] 0.10586736 0.35362171 #>  [228,] 0.13907118 0.41518282 #>  [229,] 0.07256992 0.22122020 #>  [230,] 0.12375884 0.28829484 #>  [231,] 0.11786406 0.29075956 #>  [232,] 0.12823492 0.26917346 #>  [233,] 0.16267019 0.28866035 #>  [234,] 0.10379203 0.31957347 #>  [235,] 0.09955022 0.32157706 #>  [236,] 0.08827317 0.25204961 #>  [237,] 0.13856948 0.28728452 #>  [238,] 0.13073195 0.32754352 #>  [239,] 0.12502927 0.28319048 #>  [240,] 0.12087422 0.26244798 #>  [241,] 0.09162261 0.24941680 #>  [242,] 0.08617733 0.27757625 #>  [243,] 0.16754467 0.25869011 #>  [244,] 0.08071738 0.19806193 #>  [245,] 0.07336930 0.17348236 #>  [246,] 0.05542205 0.24622478 #>  [247,] 0.06479829 0.18785873 #>  [248,] 0.02634191 0.14633583 #>  [249,] 0.02796231 0.25174175 #>  [250,] 0.02147592 0.09528488 #>  [251,] 0.02320177 0.15720525 #>  [252,] 0.03232134 0.05793500 #>  [253,] 0.02617344 0.11330037 #>  [254,] 0.03132722 0.07369871 #>  [255,] 0.03700670 0.14678033 #>  [256,] 0.03340464 0.11263906 #>  [257,] 0.04405446 0.11788757 #>  [258,] 0.03924881 0.12735794 #>  [259,] 0.04120008 0.09330452 #>  [260,] 0.04992729 0.11306166 #>  [261,] 0.04595256 0.14340233 #>  [262,] 0.03470690 0.15393033 #>  [263,] 0.07106761 0.11476981 #>  [264,] 0.05851028 0.12794312 #>  [265,] 0.05907739 0.27029215 #>  [266,] 0.05736266 0.17803617 #>  [267,] 0.07119122 0.18284924 #>  [268,] 0.06231083 0.17842842 #>  [269,] 0.06470943 0.13317719 #>  [270,] 0.05335040 0.18813385 #>  [271,] 0.05640497 0.19575673 #>  [272,] 0.06199097 0.16746890 #>  [273,] 0.05461037 0.13329364 #>  [274,] 0.06060079 0.19302076 #>  [275,] 0.07183064 0.20950869 #>  [276,] 0.07845800 0.19774396 #>  [277,] 0.10818398 0.22567893 #>  [278,] 0.08683338 0.19652688 #>  [279,] 0.10760152 0.35514655 #>  [280,] 0.10358045 0.20557790 #>  [281,] 0.11463887 0.21179274 #>  [282,] 0.11442069 0.26583801 #>  [283,] 0.13638779 0.27008375 #>  [284,] 0.11212836 0.31303921 #>  [285,] 0.23159741 0.36811984 #>  [286,] 0.15869450 0.32220554 #>  [287,] 0.09156605 0.32998235 #>  [288,] 0.16029642 0.32778543 #>  [289,] 0.17376709 0.31823897 #>  [290,] 0.15911549 0.27780185 #>  [291,] 0.17999065 0.37498823 #>  [292,] 0.15107946 0.25790481 #>  [293,] 0.11392193 0.26780717 #>  [294,] 0.14265603 0.30292758 #>  [295,] 0.17032434 0.29008956 #>  [296,] 0.10534416 0.32807655 #>  [297,] 0.14722091 0.32196913 #>  [298,] 0.15857531 0.35932241 #>  [299,] 0.13278321 0.33699532 #>  [300,] 0.14891802 0.38380501 #>  [301,] 0.15939122 0.32069755 #>  [302,] 0.15076627 0.36662252 #>  [303,] 0.09583930 0.33111723 #>  [304,] 0.13948498 0.35754107 #>  [305,] 0.16376397 0.33172224 #>  [306,] 0.13485461 0.29546575 #>  [307,] 0.12677424 0.28325825 #>  [308,] 0.11917575 0.23739388 #>  [309,] 0.12181389 0.29558077 #>  [310,] 0.09948545 0.23718306 #>  [311,] 0.14341529 0.26320684 #>  [312,] 0.11241310 0.27782128 #>  [313,] 0.13236469 0.29065658 #>  [314,] 0.13381979 0.30898404 #>  [315,] 0.10673166 0.25420220 #>  [316,] 0.09490804 0.21805228 #>  [317,] 0.06731636 0.21809908 #>  [318,] 0.08114385 0.25761214 #>  [319,] 0.07423865 0.23349499 #>  [320,] 0.09635683 0.22502706 #>  [321,] 0.11666603 0.17454994 #>  [322,] 0.09348446 0.21275856 #>  [323,] 0.09072490 0.24440665 #>  [324,] 0.06717769 0.23401963 #>  [325,] 0.07301876 0.23379143 #>  [326,] 0.06419983 0.20808667 #>  [327,] 0.06876700 0.17084487 #>  [328,] 0.08168501 0.19863871 #>  [329,] 0.05709690 0.26598997 #>  [330,] 0.04916510 0.16269775 #>  [331,] 0.06921903 0.19293139 #>  [332,] 0.10586605 0.23227574 #>  [333,] 0.06845976 0.20823350 #>  [334,] 0.06129402 0.16036342 #>  [335,] 0.08654649 0.19338633 #>  [336,] 0.09728213 0.28875510 #>  [337,] 0.11247260 0.25836353 #>  [338,] 0.09583222 0.21972532 #>  [339,] 0.09192198 0.16920266 #>  [340,] 0.03891619 0.18712927 #>  [341,] 0.12287373 0.30692641 #>  [342,] 0.12980120 0.29311142 #>  [343,] 0.11426852 0.25567900 #>  [344,] 0.13663184 0.26265730 #>  [345,] 0.06721056 0.20775978 #>  [346,] 0.06728519 0.19923433 #>  [347,] 0.08342204 0.25194639 #>  [348,] 0.12278055 0.27244511 #>  [349,] 0.11357169 0.23239161 #>  [350,] 0.08870855 0.22292846 #>  [351,] 0.14751393 0.35011337 #>  [352,] 0.11400014 0.31805899 #>  [353,] 0.08843549 0.38846772 #>  [354,] 0.13419312 0.34930066 #>  [355,] 0.08802386 0.30630027 #>  [356,] 0.11934169 0.33719240 #>  [357,] 0.06716873 0.31868411 #>  [358,] 0.08083074 0.35877743 #>  [359,] 0.10917651 0.48912563 #>  [360,] 0.11124289 0.32806542 #>  [361,] 0.08902947 0.33676948 #>  [362,] 0.12652439 0.35091279 #>  [363,] 0.15406560 0.29013271 #>  [364,] 0.10690491 0.36921889 #>  [365,] 0.13793306 0.43327509 #>  [366,] 0.17458976 0.35420524 #>  [367,] 0.15514486 0.46280897 #>  [368,] 0.16608826 0.50418563 #>  [369,] 0.24818250 0.54956112 #>  [370,] 0.16278653 0.39274628 #>  [371,] 0.25402137 0.62921332 #>  [372,] 0.28721822 0.58886072 #>  [373,] 0.18799376 0.71182398 #>  [374,] 0.14934413 0.53402438 #>  [375,] 0.12405742 0.69555738 #>  [376,] 0.18992249 0.61729709 #>  [377,] 0.21976571 0.64638922 #>  [378,] 0.18410919 0.49545407 #>  [379,] 0.09573843 0.45976958 #>  [380,] 0.14586322 0.57145036 #>  [381,] 0.13233819 0.57408233 #>  [382,] 0.17926305 0.40961991 #>  [383,] 0.18683767 0.54994068 #>  [384,] 0.13924164 0.50785908 #>  [385,] 0.13252291 0.46379490 #>  [386,] 0.15770602 0.52007346 #>  [387,] 0.23051996 0.58149322 #>  [388,] 0.19289152 0.45706318 #>  [389,] 0.18335916 0.61841267 #>  [390,] 0.23244690 0.59246160 #>  [391,] 0.22091902 0.49696544 #>  [392,] 0.24633682 0.64926636 #>  [393,] 0.17643222 0.53022182 #>  [394,] 0.20138844 0.58752594 #>  [395,] 0.16851315 0.60210053 #>  [396,] 0.19275495 0.60112082 #>  [397,] 0.28350959 0.63829109 #>  [398,] 0.34089524 0.66658986 #>  [399,] 0.11603885 0.59010628 #>  [400,] 0.19169749 0.60457323 #>  [401,] 0.18318627 0.53133103 #>  [402,] 0.25428316 0.52955243 #>  [403,] 0.20004090 0.46973100 #>  [404,] 0.26902815 0.56405168 #>  [405,] 0.15147127 0.49041773 #>  [406,] 0.06545145 0.52755644 #>  [407,] 0.23758443 0.50681193 #>  [408,] 0.22428249 0.45364351 #>  [409,] 0.30770913 0.45958432 #>  [410,] 0.18815128 0.52955343 #>  [411,] 0.17490373 0.44618692 #>  [412,] 0.21162865 0.55468516 #>  [413,] 0.18290031 0.50656445 #>  [414,] 0.21961535 0.57699516 #>  [415,] 0.21112792 0.52604891 #>  [416,] 0.25701485 0.66553879 #>  [417,] 0.12019276 0.56669446 #>  [418,] 0.19555932 0.47632392 #>  [419,] 0.24076738 0.57453145 #>  [420,] 0.21530050 0.61407935 #>  [421,] 0.23066911 0.48502364 #>  [422,] 0.22442095 0.56046034 #>  [423,] 0.19737497 0.50918858 #>  [424,] 0.10919669 0.65487694 #>  [425,] 0.21654794 0.55268924 #>  [426,] 0.20737059 0.53616854 #>  [427,] 0.21482982 0.36495512 #>  [428,] 0.10947625 0.32987998 #>  [429,] 0.17836338 0.26175872 #>  [430,] 0.14431395 0.31092488 #>  [431,] 0.10956375 0.27224308 #>  [432,] 0.12675033 0.25681598 #>  [433,] 0.14694391 0.34815704 #>  [434,] 0.12372157 0.32808866 #>  [435,] 0.16393541 0.42036500 #>  [436,] 0.16835685 0.41648050 #>  [437,] 0.20030615 0.35373824 #>  [438,] 0.11986370 0.41418882 #>  [439,] 0.18583073 0.37494219 #>  [440,] 0.14193515 0.37661216 #>  [441,] 0.19177051 0.51371303 #>  [442,] 0.23205490 0.45411671 #>  [443,] 0.21415927 0.48326952 #>  [444,] 0.17646976 0.55396866 #>  [445,] 0.11234297 0.46146698 #>  [446,] 0.16891197 0.47931664 #>  [447,] 0.09745270 0.49815102 #>  [448,] 0.15716176 0.26322763 #>  [449,] 0.13881988 0.28648169 #>  [450,] 0.11842493 0.23489351 #>  [451,] 0.15547285 0.26691333 #>  [452,] 0.17990709 0.39233106 #>  [453,] 0.18602560 0.24867712 #>  [454,] 0.20501961 0.29095701 #>  [455,] 0.19430075 0.35714928 #>  [456,] 0.19584677 0.40270037 #>  [457,] 0.12149779 0.30785244 #>  [458,] 0.18389114 0.31420611 #>  [459,] 0.16166412 0.35524694 #>  [460,] 0.11236295 0.28852788 #>  [461,] 0.18731219 0.27895134 #>  [462,] 0.18631473 0.36899729 #>  [463,] 0.13646182 0.27512198 #>  [464,] 0.12709539 0.30948074 #>  [465,] 0.11768758 0.29847074 #>  [466,] 0.11257004 0.24885844 #>  [467,] 0.15010421 0.29792757 #>  [468,] 0.15174888 0.33216714 #>  [469,] 0.12016066 0.37286331 #>  [470,] 0.19161549 0.32856413 #>  [471,] 0.10465622 0.39423876 #>  [472,] 0.12282094 0.25040724 #>  [473,] 0.15371889 0.27682600 #>  [474,] 0.11150849 0.26588175 #>  [475,] 0.11044345 0.36696612 #>  [476,] 0.11626922 0.31990328 #>  [477,] 0.09866616 0.27274755 #>  [478,] 0.09504226 0.29926612 #>  [479,] 0.12590997 0.23608208 #>  [480,] 0.08530639 0.28429803 #>  [481,] 0.13969445 0.32803413 #>  [482,] 0.15072676 0.26989843 #>  [483,] 0.12083438 0.31716514 #>  [484,] 0.11624290 0.47075772 #>  [485,] 0.11061837 0.27577723 #>  [486,] 0.10118759 0.58803183 #>  [487,] 0.21290247 0.48066539 #>  [488,] 0.12250433 0.65433658 #>  [489,] 0.07525761 0.64158712 #>  [490,] 0.15689993 0.49374529 #>  [491,] 0.16964402 0.46130801 #>  [492,] 0.15489069 0.41382357 #>  [493,] 0.12169838 0.46031398 #>  [494,] 0.19935272 0.56876374 #>  [495,] 0.23079232 0.45547310 #>  [496,] 0.21132104 0.52445253 #>  [497,] 0.20354996 0.53998551 #>  [498,] 0.15369128 0.53590620 #>  [499,] 0.15851703 0.62368732 #>  [500,] 0.20434739 0.45698743 #>  [501,] 0.17794683 0.46086881 #>  [502,] 0.10283841 0.62521129 #>  [503,] 0.21936762 0.45200245 #>  [504,] 0.13951569 0.45423039 #>  [505,] 0.17847389 0.49478078 #>  [506,] 0.19679136 0.57615487 #>  [507,] 0.17349936 0.68587684 #>  [508,] 0.08286287 0.39189403 #>  [509,] 0.18866543 0.56164241 #>  [510,] 0.20990409 0.61086785 #>  [511,] 0.23550756 0.75805716 #>  [512,] 0.21667795 0.75882708 #>  [513,] 0.19250972 0.62521782 #>  [514,] 0.23973981 0.60528588 #>  [515,] 0.14966215 0.51270198 #>  [516,] 0.20919739 0.47489135 #>  [517,] 0.22319735 0.43847858 #>  [518,] 0.17009024 0.32257333 #>  [519,] 0.12707289 0.33009893 #>  [520,] 0.08035622 0.40473196 #>  [521,] 0.14116348 0.38594702 #>  [522,] 0.09547340 0.34481974 #>  [523,] 0.13802545 0.40047895 #>  [524,] 0.14050366 0.48370852 #>  [525,] 0.16688370 0.33116957 #>  [526,] 0.14274821 0.43927265 #>  [527,] 0.13526480 0.31260970 #>  [528,] 0.09132518 0.58259666 #>  [529,] 0.21160710 0.51997880 #>  [530,] 0.10467781 0.77426870 #>  [531,] 0.20792146 0.45080514 #>  [532,] 0.31618959 0.75993568 #>  [533,] 0.25002166 0.74923533 #>  [534,] 0.19448566 0.69161376 #>  [535,] 0.07868957 0.58587264 #>  [536,] 0.17109736 0.54805402 #>  [537,] 0.15776427 0.57890755 #>  [538,] 0.06569004 0.68499874 #>  [539,] 0.20764058 0.61004822 #>  [540,] 0.11290156 0.29331452 #>  [541,] 0.07916198 0.50701488 #>  [542,] 0.08956130 0.87543398 #>  [543,] 0.09942599 0.46977763 #>  [544,] 0.10116310 0.70161249 #>  [545,] 0.14852479 0.46115476 #>  [546,] 0.13660674 0.43264997 #>  [547,] 0.10892521 0.53239518 #>  [548,] 0.11522633 0.50843927 #>  [549,] 0.10041167 0.44410377 #>  [550,] 0.06208030 0.57918549 #>  [551,] 0.07252703 0.43726763 #>  [552,] 0.08395890 0.40822570 #>  [553,] 0.05814732 0.35446067 #>  [554,] 0.09328128 0.34941622 #>  [555,] 0.05755737 0.56998089 #>  [556,] 0.06831613 0.43674128 #>  [557,] 0.13535856 0.60097696 #>  [558,] 0.11224206 0.39366124 #>  [559,] 0.08102656 0.23939869 #>  [560,] 0.06670854 0.20632863 #>  [561,] 0.10719644 0.32284541 #>  [562,] 0.11028293 0.35667070 #>  [563,] 0.11294032 0.34122860 #>  [564,] 0.12451153 0.26854882 #>  [565,] 0.10740257 0.27151363 #>  [566,] 0.19869432 0.35880353 #>  [567,] 0.17754307 0.39625323 #>  [568,] 0.18087786 0.39295561 #>  [569,] 0.27061906 0.43834301 #>  [570,] 0.12106442 0.59607773 #>  [571,] 0.20688846 0.43719278 #>  [572,] 0.19080728 0.42424506 #>  [573,] 0.17151358 0.41233567 #>  [574,] 0.14236384 0.43539967 #>  [575,] 0.19720785 0.47592991 #>  [576,] 0.17643610 0.36896468 #>  [577,] 0.15335897 0.41701452 #>  [578,] 0.17795764 0.38530360 #>  [579,] 0.22033079 0.37299883 #>  [580,] 0.17618483 0.40113942 #>  [581,] 0.17818336 0.39507699 #>  [582,] 0.18701923 0.31672366 #>  [583,] 0.17200624 0.41558911 #>  [584,] 0.17595393 0.39655954 #>  [585,] 0.12705263 0.37136080 #>  [586,] 0.20311758 0.38079369 #>  [587,] 0.14184810 0.29961774 #>  [588,] 0.10849044 0.25892692 #>  [589,] 0.12761264 0.36871301 #>  [590,] 0.16064671 0.25338767 #>  [591,] 0.15849446 0.31555248 #>  [592,] 0.11272002 0.30469141 #>  [593,] 0.11966162 0.33215024 #>  [594,] 0.18896273 0.31058220 #>  [595,] 0.12663126 0.29530456 #>  [596,] 0.14696288 0.27097084 #>  [597,] 0.11229933 0.28157054 #>  [598,] 0.15828900 0.32765575 #>  [599,] 0.19080866 0.46217267 #>  [600,] 0.18526569 0.45980546 #>  [601,] 0.10376143 0.35882016 #>  [602,] 0.18705574 0.49348807 #>  [603,] 0.17362542 0.37288567 #>  [604,] 0.23227247 0.51379716 #>  [605,] 0.24343027 0.39688115 #>  [606,] 0.19397571 0.48563184 #>  [607,] 0.18707636 0.47962880 #>  [608,] 0.18895594 0.51457592 #>  [609,] 0.16758631 0.46513884 #>  [610,] 0.20764951 0.49508202 #>  [611,] 0.18638793 0.36332188 #>  [612,] 0.21851429 0.50945781 #>  [613,] 0.21419039 0.44821806 #>  [614,] 0.21110030 0.56709530 #>  [615,] 0.13944359 0.51512438 #>  [616,] 0.14599318 0.29809244 #>  [617,] 0.18404320 0.35657797 #>  [618,] 0.12192432 0.42156095 #>  [619,] 0.12966595 0.40344180 #>  [620,] 0.16792245 0.42229608 #>  [621,] 0.18426306 0.34741206 #>  [622,] 0.23919474 0.45116142 #>  [623,] 0.16636567 0.36403524 #>  [624,] 0.17834644 0.48021385 #>  [625,] 0.14258440 0.50598552 #>  [626,] 0.18295211 0.41592818 #>  [627,] 0.12721372 0.44841653 #>  [628,] 0.10711504 0.40412727 #>  [629,] 0.13310322 0.38631442 #>  [630,] 0.14504066 0.40132823 #>  [631,] 0.11827453 0.22628620 #>  [632,] 0.10691076 0.20519986 #>  [633,] 0.11813452 0.21495605 #>  [634,] 0.11678540 0.22139595 #>  [635,] 0.09830172 0.23610353 #>  [636,] 0.07428851 0.21949012 #>  [637,] 0.10096784 0.18737401 #>  [638,] 0.11797734 0.21227305 #>  [639,] 0.12513889 0.21125587 #>  [640,] 0.11331297 0.24163168 #>  [641,] 0.10787942 0.20225867 #>  [642,] 0.13012836 0.22936059 #>  [643,] 0.10216552 0.20740320 #>  [644,] 0.10658134 0.16155731 #>  [645,] 0.10929491 0.21354294 #>  [646,] 0.10674085 0.18231056 #>  [647,] 0.07691014 0.18868559 #>  [648,] 0.08118151 0.19647477 #>  [649,] 0.08926552 0.16490506 #>  [650,] 0.09788082 0.17924266 #>  [651,] 0.09846733 0.16665544 #>  [652,] 0.08516483 0.16593133 #>  [653,] 0.09523412 0.21661398 #>  [654,] 0.08094925 0.16534818 #>  [655,] 0.08336164 0.15431519 #>  [656,] 0.10650863 0.17413171 #>  [657,] 0.09461714 0.18217201 #>  [658,] 0.11622707 0.17245007 #>  [659,] 0.10814799 0.19296033 #>  [660,] 0.10260175 0.20432936 #>  [661,] 0.12481294 0.27392401 #>  [662,] 0.11545325 0.19734525 #>  [663,] 0.11995443 0.24388428 #>  [664,] 0.15473005 0.28057833 #>  [665,] 0.12847944 0.26810967 #>  [666,] 0.11270623 0.25511109 #>  [667,] 0.10505982 0.22619818 #>  [668,] 0.14017033 0.27628633 #>  [669,] 0.16825525 0.26503169 #>  [670,] 0.12894812 0.26894525 #>  [671,] 0.14411321 0.25576432 #>  [672,] 0.12109652 0.24461709 #>  [673,] 0.12401103 0.25295208 #>  [674,] 0.12784375 0.23921773 #>  [675,] 0.13501854 0.27542306 #>  [676,] 0.10727047 0.18521853 #>  [677,] 0.13339105 0.24760046 #>  [678,] 0.14460228 0.23984238 #>  [679,] 0.17422885 0.26705166 #>  [680,] 0.12904022 0.34994524 #>  [681,] 0.10334355 0.29396937 #>  [682,] 0.16479819 0.30783303 #>  [683,] 0.14337749 0.26953775 #>  [684,] 0.12414942 0.23679329 #>  [685,] 0.19928132 0.27479894 #>  [686,] 0.12739777 0.26548288 #>  [687,] 0.08362439 0.24940912 #>  [688,] 0.13877646 0.28967044 #>  [689,] 0.13445269 0.26518276 #>  [690,] 0.14248547 0.23836831 #>  [691,] 0.13973297 0.24151214 #>  [692,] 0.16159133 0.24646022 #>  [693,] 0.04041957 0.22597843 #>  [694,] 0.10134468 0.23749716 #>  [695,] 0.05683709 0.35171509 #>  [696,] 0.11669684 0.29490688 #>  [697,] 0.08818711 0.26755951 #>  [698,] 0.10601502 0.27877383 #>  [699,] 0.13507802 0.23153602 #>  [700,] 0.04714186 0.24634081 #>  [701,] 0.05467989 0.19920662 #>  [702,] 0.07191719 0.23174489 #>  [703,] 0.08230995 0.18006186 #>  [704,] 0.03425491 0.24488385 #>  [705,] 0.06069935 0.20875209 #>  [706,] 0.08351902 0.29817921 #>  [707,] 0.05455189 0.20792281 #>  [708,] 0.05244044 0.20308478 #>  [709,] 0.06538231 0.14106295 #>  [710,] 0.03316603 0.16320101 #>  [711,] 0.02234089 0.16088037 #>  [712,] 0.03625553 0.18705883 #>  [713,] 0.02059257 0.17159190 #>  [714,] 0.02046135 0.15706055 #>  [715,] 0.01061360 0.22528550 #>  [716,] 0.04034739 0.20038274 #>  [717,] 0.05490542 0.14953008 #>  [718,] 0.05016930 0.17959266 #>  [719,] 0.05267558 0.15656667 #>  [720,] 0.03460469 0.16934365 #>  [721,] 0.04476230 0.33262662 #>  [722,] 0.03219550 0.18829466 #>  [723,] 0.06498525 0.19838807 #>  [724,] 0.03354964 0.29051207 #>  [725,] 0.05834332 0.27541578 #>  [726,] 0.06995455 0.21910847 #>  [727,] 0.04272974 0.28435727 #>  [728,] 0.05629884 0.23333573 #>  [729,] 0.12579222 0.23764333 #>  [730,] 0.13026246 0.27813530 #>  [731,] 0.10908446 0.23659715 #>  [732,] 0.04089446 0.23492799 #>  [733,] 0.06853443 0.22652646 #>  [734,] 0.06493439 0.22362109 #>  [735,] 0.09753878 0.32068850 #>  [736,] 0.09369878 0.18226374 #>  [737,] 0.09805209 0.20414092 #>  [738,] 0.07624793 0.22029012 #>  [739,] 0.08094759 0.20018118 #>  [740,] 0.09313849 0.22779225 #>  [741,] 0.07489703 0.20610257 #>  [742,] 0.09753250 0.25815426 #>  [743,] 0.07909386 0.26658354 #>  [744,] 0.04352782 0.18188624 #>  [745,] 0.06257895 0.16800231 #>  [746,] 0.04431979 0.19204383 #>  [747,] 0.03719105 0.16769537 #>  [748,] 0.04194307 0.10553440 #>  [749,] 0.04478153 0.19134307 #>  [750,] 0.04146224 0.15595721 #>  [751,] 0.04734662 0.15232744 #>  [752,] 0.02842118 0.07642548 #>  [753,] 0.01785418 0.10123752 #>  [754,] 0.01914444 0.08148813 #>  [755,] 0.01378036 0.07474148 #>  [756,] 0.02560777 0.08114251 #>  [757,] 0.01577269 0.08448542 #>  [758,] 0.01414056 0.07502274 #>  [759,] 0.01526650 0.05412313 #>  [760,] 0.01867988 0.05530277 #>  [761,] 0.01580653 0.06297920 #>  [762,] 0.01394966 0.06858382 #>  [763,] 0.02879958 0.07947031 #>  [764,] 0.03531131 0.07358669 #>  [765,] 0.02868101 0.08357191 #>  [766,] 0.02061672 0.08064919 #>  [767,] 0.03802450 0.08725895 #>  [768,] 0.03936448 0.19696058 #>  [769,] 0.05778328 0.21686457 #>  [770,] 0.02883626 0.27287435 #>  [771,] 0.04055558 0.25604513 #>  [772,] 0.03750821 0.26256570 #>  [773,] 0.03269602 0.27802534 #>  [774,] 0.04997654 0.23585083 #>  [775,] 0.06945806 0.25691785 #>  [776,] 0.05281870 0.20762655 #>  [777,] 0.03556846 0.30658457 #>  [778,] 0.04564117 0.22129135 #>  [779,] 0.04942603 0.29350900 #>  [780,] 0.04564005 0.23982203 #>  [781,] 0.05738445 0.18421765 #>  [782,] 0.05026303 0.29009362 #>  [783,] 0.05997979 0.35919697 #>  [784,] 0.05642090 0.32739112 #>  [785,] 0.05326207 0.26871846 #>  [786,] 0.02874883 0.32911204 #>  [787,] 0.04057415 0.27379811 #>  [788,] 0.02002339 0.32780664 #>  [789,] 0.04309264 0.30707567 #>  [790,] 0.03092187 0.32220886 #>  [791,] 0.03458622 0.32022230 #>  [792,] 0.02711246 0.27433123 #>  [793,] 0.02988155 0.23884504 #>  [794,] 0.03017798 0.24046154 #>  [795,] 0.02407304 0.31704128 #>  [796,] 0.07682301 0.38511670 #>  [797,] 0.02354864 0.26750074 #>  [798,] 0.03516873 0.19625895 #>  [799,] 0.03095712 0.10861198 #>  [800,] 0.02549731 0.09446303 #>  [801,] 0.03109450 0.16119259 #>  [802,] 0.04294280 0.16883140 #>  [803,] 0.03019160 0.10727753 #>  [804,] 0.02834550 0.13727781 #>  [805,] 0.03974545 0.12407193 #>  [806,] 0.02910164 0.13438510 #>  [807,] 0.02632415 0.13174789 #>  [808,] 0.02030990 0.11572086 #>  [809,] 0.02945131 0.14749691 #>  [810,] 0.04003596 0.16146574 #>  [811,] 0.02700466 0.17920521 #>  [812,] 0.02110924 0.13931074 #>  [813,] 0.02866322 0.13910070 #>  [814,] 0.05353041 0.14345128 #>  [815,] 0.02304554 0.08797840 #>  [816,] 0.02294763 0.14872089 #>  [817,] 0.05995781 0.14943895 #>  [818,] 0.02293366 0.17339097 #>  [819,] 0.02804788 0.14545711 #>  [820,] 0.03991421 0.18059053 #>  [821,] 0.02316422 0.11639489 #>  [822,] 0.01572438 0.14457295 #>  [823,] 0.04804541 0.10178613 #>  [824,] 0.02450174 0.14009363 #>  [825,] 0.02455926 0.15860589 #>  [826,] 0.05426725 0.12902815 #>  [827,] 0.03763828 0.07819353 #>  [828,] 0.02740949 0.07842679 #>  [829,] 0.02439132 0.06986604 #>  [830,] 0.04031461 0.09188071 #>  [831,] 0.04174061 0.09283769 #>  [832,] 0.03479660 0.10683532 #>  [833,] 0.05103562 0.09266711 #>  [834,] 0.04732513 0.07740290 #>  [835,] 0.04822709 0.10422855 #>  [836,] 0.03452395 0.11440529 #>  [837,] 0.02800824 0.09720001 #>  [838,] 0.02711838 0.11220771 #>  [839,] 0.05299681 0.11210379 #>  [840,] 0.03311160 0.10371248 #>  [841,] 0.02979092 0.10396682 #>  [842,] 0.05161694 0.11737116 #>  [843,] 0.06327827 0.10185921 #>  [844,] 0.05501347 0.10035621 #>  [845,] 0.07404365 0.10822575 #>  [846,] 0.06334691 0.11207992 #>  [847,] 0.04504378 0.13073930 #>  [848,] 0.06555439 0.10982801 #>  [849,] 0.06080461 0.11464250 #>  [850,] 0.08017402 0.13806921 #>  [851,] 0.06891776 0.11395646 #>  [852,] 0.05229845 0.12359360 #>  [853,] 0.06592642 0.12558492 #>  [854,] 0.05251337 0.10154714 #>  [855,] 0.06887477 0.10364408 #>  [856,] 0.05922654 0.11549632 #>  [857,] 0.03992860 0.11080213 #>  [858,] 0.05345705 0.12873727 #>  [859,] 0.05230778 0.10529121 #>  [860,] 0.05223640 0.09960047 #>  [861,] 0.05472469 0.08684772 #>  [862,] 0.04329704 0.10217034 #>  [863,] 0.05431226 0.11162823 #>  [864,] 0.05497406 0.09914164 #>  [865,] 0.03565136 0.09267912 #>  [866,] 0.04879631 0.11314785 #>  [867,] 0.02339139 0.11099004 #>  [868,] 0.04082694 0.09912975 #>  [869,] 0.04399226 0.12863456 #>  [870,] 0.03841661 0.10645444 #>  [871,] 0.05360367 0.13700069 #>  [872,] 0.02384854 0.14092072 #>  [873,] 0.03544990 0.13000170 #>  [874,] 0.02917248 0.13075446 #>  [875,] 0.03071231 0.11384089 #>  [876,] 0.03300868 0.07804294 #>  [877,] 0.01826453 0.08920716 #>  [878,] 0.02476893 0.07391237 #>  [879,] 0.02030216 0.08660343 #>  [880,] 0.01421460 0.06393307 #>  [881,] 0.02639285 0.07276720 #>  [882,] 0.03096707 0.08177649 #>  [883,] 0.02732253 0.06540464 #>  [884,] 0.03210321 0.18294820 #>  [885,] 0.03146839 0.12515546 #>  [886,] 0.02132379 0.19487286 #>  [887,] 0.03200060 0.14073909 #>  [888,] 0.02083679 0.15167226 #>  [889,] 0.06703095 0.17311650 #>  [890,] 0.03088562 0.12888972 #>  [891,] 0.04932316 0.16266783 #>  [892,] 0.01382801 0.16241239 #>  [893,] 0.05876777 0.12428001 #>  [894,] 0.03594927 0.12165819 #>  [895,] 0.07609032 0.19543368 #>  [896,] 0.06275662 0.19116162 #>  [897,] 0.03387540 0.17882808 #>  [898,] 0.06273588 0.17552439 #>  [899,] 0.06545276 0.16857487 #>  [900,] 0.06488510 0.14635469 #>  [901,] 0.05880509 0.13460621 #>  [902,] 0.04525074 0.13759377 #>  [903,] 0.08969649 0.17541665 #>  [904,] 0.08531231 0.19200005 #>  [905,] 0.05444733 0.17028221 #>  [906,] 0.08525059 0.13917040 #>  [907,] 0.07012076 0.15838693 #>  [908,] 0.05355543 0.14098072 #>  [909,] 0.06866041 0.14587586 #>  [910,] 0.08561990 0.18436660 #>  [911,] 0.08274721 0.13269686 #>  [912,] 0.05533325 0.15752320 #>  [913,] 0.08060444 0.15138718 #>  [914,] 0.04906904 0.13381297 #>  [915,] 0.06451050 0.10629110 #>  [916,] 0.05380942 0.13133041 #>  [917,] 0.05388373 0.15931273 #>  [918,] 0.04099092 0.09450227 #>  [919,] 0.05708992 0.11073136 #>  [920,] 0.04685078 0.11440553 #>  [921,] 0.05282345 0.12677369 #>  [922,] 0.03501322 0.15693315 #>  [923,] 0.05680705 0.14423660 #>  [924,] 0.06320213 0.10886554 #>  [925,] 0.04320736 0.13288691 #>  [926,] 0.05588441 0.09403531 #>  [927,] 0.03995798 0.08298749 #>  [928,] 0.04994583 0.09872400 #>  [929,] 0.03651636 0.10121900 #>  [930,] 0.04160765 0.10440922 #>  [931,] 0.04343707 0.11423236 #>  [932,] 0.04544992 0.08558189 #>  [933,] 0.04072977 0.09360941 #>  [934,] 0.04178235 0.07979897 #>  [935,] 0.02810010 0.10325368 #>  [936,] 0.04195813 0.07396993 #>  [937,] 0.04642584 0.11104598 #>  [938,] 0.04551331 0.11619738 #>  [939,] 0.03746684 0.07482360 #>  [940,] 0.04927149 0.33165776 #>  [941,] 0.03228314 0.45743018 #>  [942,] 0.05398637 0.33660565 #>  [943,] 0.05413145 0.44160156 #>  [944,] 0.06196896 0.49292991 #>  [945,] 0.06448470 0.38959748 #>  [946,] 0.03957038 0.47044918 #>  [947,] 0.07139250 0.39622225 #>  [948,] 0.04257090 0.51581174 #>  [949,] 0.04278760 0.41996401 #>  [950,] 0.05318299 0.39948063 #>  [951,] 0.10841319 0.57030079 #>  [952,] 0.05366826 0.61134151 #>  [953,] 0.07941603 0.47012167 #>  [954,] 0.26252531 0.55248219 #>  [955,] 0.06301497 0.52502096 #>  [956,] 0.04280023 0.63281244 #>  [957,] 0.21057548 0.69301599 #>  [958,] 0.27446630 0.64798159 #>  [959,] 0.10428999 0.69185722 #>  [960,] 0.33829508 0.61955829 #>  [961,] 0.35990596 0.63388877 #>  [962,] 0.26244111 0.71653683 #>  [963,] 0.21994845 0.67580170 #>  [964,] 0.41199275 0.69465797 #>  [965,] 0.47198236 0.71118119 #>  [966,] 0.43299646 0.67251525 #>  [967,] 0.10779860 0.72993632 #>  [968,] 0.38097394 0.69468688 #>  [969,] 0.35281182 0.73043217 #>  [970,] 0.27743655 0.73899348 #>  [971,] 0.34121251 0.77171660 #>  [972,] 0.37117663 0.81906987 #>  [973,] 0.33693550 0.59564859 #>  [974,] 0.25679029 0.69767986 #>  [975,] 0.32331772 0.80938918 #>  [976,] 0.24707957 0.72030139 #>  [977,] 0.35053692 0.71815814 #>  [978,] 0.32139878 0.72433465 #>  [979,] 0.21319353 0.65970100 #>  [980,] 0.29649559 0.74813935 #>  [981,] 0.31155957 0.84078099 #>  [982,] 0.45986362 0.93961277 #>  [983,] 0.42313845 0.84560443 #>  [984,] 0.52642291 0.92508048 #>  [985,] 0.48617882 0.95181109 #>  [986,] 0.38209398 0.98151492 #>  [987,] 0.37255214 0.96908180 #>  [988,] 0.53635270 0.96871584 #>  [989,] 0.52673936 0.91533946 #>  [990,] 0.70195874 0.88327488 #>  [991,] 0.59454166 0.95432686 #>  [992,] 0.52874240 0.90423728 #>  [993,] 0.45368227 0.99220456 #>  [994,] 0.48935514 0.83660687 #>  [995,] 0.65084986 0.92657309 #>  [996,] 0.26950071 0.91978982 #>  [997,] 0.41947179 0.92379117 #>  [998,] 0.38925657 0.93631446 #>  [999,] 0.34672587 0.87037733 #> [1000,] 0.35888158 0.82776558 #> [1001,] 0.26503251 0.80216957 #> [1002,] 0.27863484 0.78344472 #> [1003,] 0.32663527 0.68366814 #> [1004,] 0.33300513 0.70234767 #> [1005,] 0.20253834 0.62644153 #> [1006,] 0.28637803 0.89377798 #> [1007,] 0.31135083 0.73424452 #> [1008,] 0.28318085 0.67050385 #> [1009,] 0.29340574 0.72166421 #> [1010,] 0.26368759 0.94977891 #> [1011,] 0.20566040 0.72909569 #> [1012,] 0.42792873 0.63694076 #> [1013,] 0.45140983 0.76202059 #> [1014,] 0.17056031 0.85898970 #> [1015,] 0.36652064 0.62757776 #> [1016,] 0.34668827 0.77566670 #> [1017,] 0.30401354 0.79432918 #> [1018,] 0.31790546 0.80106969 #> [1019,] 0.48919717 0.83126922 #> [1020,] 0.57611566 0.82452818 #> [1021,] 0.51354186 0.78745908 #> [1022,] 0.53440250 0.75803057 #> [1023,] 0.53424604 0.79480510 #> [1024,] 0.36309043 0.72890740 #> [1025,] 0.31091541 0.64826298 #> [1026,] 0.27783206 0.63346945 #> [1027,] 0.34359067 0.61915783 #> [1028,] 0.37471442 0.60946267 #> [1029,] 0.29297228 0.62876226 #> [1030,] 0.31354073 0.52961466 #> [1031,] 0.25509239 0.63402548 #> [1032,] 0.23194081 0.43725289 #> [1033,] 0.21483851 0.41837603 #> [1034,] 0.24749008 0.47330429 #> [1035,] 0.21216406 0.52420048 #> [1036,] 0.24854596 0.43408389 #> [1037,] 0.25655543 0.51846923 #> [1038,] 0.25195716 0.56050584 #> [1039,] 0.12233169 0.38634625 #> [1040,] 0.18746694 0.48908607 #> [1041,] 0.20795737 0.48586983 #> [1042,] 0.22640496 0.43136726 #> [1043,] 0.17124376 0.39600583 #> [1044,] 0.17733815 0.45866255 #> [1045,] 0.14150917 0.43460727 #> [1046,] 0.12186242 0.42033657 #> [1047,] 0.12311786 0.52196023 #> [1048,] 0.20825829 0.50278736 #> [1049,] 0.16926710 0.44241545 #> [1050,] 0.22831784 0.42957175 #> [1051,] 0.21471205 0.38348424 #> [1052,] 0.24856910 0.44500975 #> [1053,] 0.21295952 0.43187506 #> [1054,] 0.26921971 0.49771632 #> [1055,] 0.22939870 0.89175285 #> [1056,] 0.38367294 0.91764380 #> [1057,] 0.24057010 0.76541076 #> [1058,] 0.16233703 0.75194161 #> [1059,] 0.14984828 0.60932704 #> [1060,] 0.22919943 0.75428918 #> [1061,] 0.13458335 0.75361479 #> [1062,] 0.09885144 0.58363613 #> [1063,] 0.22887541 0.90644349 #> [1064,] 0.12319182 0.71308387 #> [1065,] 0.27316649 0.93254202 #> [1066,] 0.09413085 0.84847441 #> [1067,] 0.14756358 0.67342578 #> [1068,] 0.08608674 0.80454773 #> [1069,] 0.16818322 0.82521136 #> [1070,] 0.20273860 0.84272413 #> [1071,] 0.11918055 0.87404750 #> [1072,] 0.07257289 0.80210222 #> [1073,] 0.11892767 0.83556307 #> [1074,] 0.13250664 0.67455326 #> [1075,] 0.08098200 0.81140733 #> [1076,] 0.09340559 0.81844144 #> [1077,] 0.06029774 0.62623852 #> [1078,] 0.16671587 0.90588788 #> [1079,] 0.20578486 0.84023275 #> [1080,] 0.08982589 0.93330914 #> [1081,] 0.13429203 0.77288937 #> [1082,] 0.15587547 0.74165711 # }"},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Rolling Functions using Circular Statistics — rolling_test_dist","title":"Apply Rolling Functions using Circular Statistics — rolling_test_dist","text":"generic function applying function rolling margins array along additional value.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Rolling Functions using Circular Statistics — rolling_test_dist","text":"","code":"distroll_circstats(   x,   distance,   FUN,   width = NULL,   min_n = 2,   align = c(\"right\", \"center\", \"left\"),   w = NULL,   sort = TRUE,   ... )  distroll_confidence(   x,   distance,   w = NULL,   width = NULL,   min_n = 2,   align = c(\"right\", \"center\", \"left\"),   sort = TRUE,   ... )  distroll_dispersion(   x,   y,   w = NULL,   w.y = NULL,   distance,   width = NULL,   min_n = 2,   align = c(\"right\", \"center\", \"left\"),   sort = TRUE,   ... )  distroll_dispersion_sde(   x,   y,   w = NULL,   w.y = NULL,   distance,   width = NULL,   min_n = 2,   align = c(\"right\", \"center\", \"left\"),   sort = TRUE,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Rolling Functions using Circular Statistics — rolling_test_dist","text":"x, y vectors numeric values degrees. length(y) either 1 length(x) distance numeric. independent variable along values x sorted, e.g. plate boundary distances FUN function applied width numeric. range across distance FUN applied x. NULL, width number separates distances 10 equal groups. min_n integer. minimum values considered FUN (2 default), otherwise NA. align specifies whether index result left- right-aligned centered (default) compared rolling window observations. argument used width represents widths. w numeric. weighting x sort logical. values sorted distance prior applying function (TRUE default). ... optional arguments FUN w.y numeric. weighting y","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Rolling Functions using Circular Statistics — rolling_test_dist","text":"two-column vectors (sorted) x rolled statistics along distance.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Rolling Functions using Circular Statistics — rolling_test_dist","text":"","code":"data(\"plates\") plate_boundary <- subset(plates, plates$pair == \"na-pa\") data(\"san_andreas\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") san_andreas$distance <- distance_from_pb(   x = san_andreas,   PoR = PoR,   pb = plate_boundary,   tangential = TRUE ) dat <- san_andreas |> cbind(PoR_shmax(san_andreas, PoR, \"right\"))  distroll_circstats(dat$azi.PoR, distance = dat$distance, w = 1 / dat$unc, FUN = circular_mean) #>         distance         x   n #>  [1,] -9.2265048  65.71825   7 #>  [2,] -7.6044815 127.98953  19 #>  [3,] -5.9824582 155.84338  14 #>  [4,] -4.3604350 154.03429  39 #>  [5,] -2.7384117 138.51693 118 #>  [6,] -1.1163884 138.28289 746 #>  [7,]  0.5056349 142.57999 131 #>  [8,]  2.1276582 147.38000   5 #>  [9,]  3.7496815 178.57158   2 #> [10,]  5.3717047        NA   1 distroll_confidence(dat$azi.PoR, distance = dat$distance, w = 1 / dat$unc) #>         distance          x   n #>  [1,] -9.2265048  27.363250   7 #>  [2,] -7.6044815  96.659444  19 #>  [3,] -5.9824582  36.324307  14 #>  [4,] -4.3604350 103.822045  39 #>  [5,] -2.7384117  11.754109 118 #>  [6,] -1.1163884   5.421959 746 #>  [7,]  0.5056349  16.430045 131 #>  [8,]  2.1276582  34.620399   5 #>  [9,]  3.7496815        NaN   2 #> [10,]  5.3717047         NA   1 distroll_dispersion(dat$azi.PoR, y = 135, distance = dat$distance, w = 1 / dat$unc) #>         distance          x   n #>  [1,] -9.2265048 0.55904215   7 #>  [2,] -7.6044815 0.31555788  19 #>  [3,] -5.9824582 0.39396588  14 #>  [4,] -4.3604350 0.32629112  39 #>  [5,] -2.7384117 0.06532730 118 #>  [6,] -1.1163884 0.09484305 746 #>  [7,]  0.5056349 0.11027953 131 #>  [8,]  2.1276582 0.06254410   5 #>  [9,]  3.7496815 0.47800478   2 #> [10,]  5.3717047         NA   1 distroll_dispersion_sde(dat$azi.PoR, y = 135, distance = dat$distance, w = 1 / dat$unc, R = 100) #>         distance          x   n #>  [1,] -9.2265048 0.21314562   7 #>  [2,] -7.6044815 0.14197062  19 #>  [3,] -5.9824582 0.22068858  14 #>  [4,] -4.3604350 0.12652655  39 #>  [5,] -2.7384117 0.02049644 118 #>  [6,] -1.1163884 0.01181868 746 #>  [7,]  0.5056349 0.02982692 131 #>  [8,]  2.1276582 0.03516382   5 #>  [9,]  3.7496815 0.05893620   2 #> [10,]  5.3717047         NA   1"},{"path":"https://tobiste.github.io/tectonicr/reference/rose.html","id":null,"dir":"Reference","previous_headings":"","what":"Rose Diagram — rose","title":"Rose Diagram — rose","text":"Plots rose diagram (rose directions), analogue histogram density plot angular data.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rose Diagram — rose","text":"","code":"rose(   x,   weights = NULL,   binwidth = NULL,   bins = NULL,   axial = TRUE,   equal_area = TRUE,   clockwise = TRUE,   muci = TRUE,   round_binwidth = 0,   mtext = \"N\",   main = NULL,   sub = NULL,   at = seq(0, 360 - 45, 45),   col = \"grey\",   dots = FALSE,   dot_pch = 1,   dot_cex = 1,   dot_col = \"grey\",   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/rose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rose Diagram — rose","text":"x Data plotted. numeric vector containing angles (degrees). weights Optional vector numeric weights associated x. binwidth width bins (degrees). bins number arcs partition circle width. Overridden binwidth. axial Logical. Whether data uniaxial (axial=FALSE) biaxial (TRUE, default). equal_area Logical. Whether radii bins proportional frequencies (equal_area=FALSE, .e. equal-angle) proportional square-root frequencies (equal_area=TRUE, default). clockwise Logical. Whether angles increase clockwise direction (clockwise=TRUE, default) anti-clockwise, counter-clockwise direction (FALSE). muci logical. Whether mean 95% CI added plot . round_binwidth integer. Number decimal places bin width (0 default). mtext character. String drawn top margin plot (\"N\" default) main, sub Character string specifying title subtitle plot. sub = NULL, show bin width. Optional vector angles tick marks plotted. Set =numeric(0) suppress tick marks. col fill color bins dots logical. Whether circular dot plot added (FALSE default). dot_cex, dot_pch, dot_col Plotting arguments circular dot plot ... Additional arguments passed spatstat.explore::rose().","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rose Diagram — rose","text":"window (class \"owin\") containing plotted region.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Rose Diagram — rose","text":"bins binwidth NULL, optimal bin width calculated using Scott (1979): $$ w_b = \\frac{R}{n^{\\frac{1}{3}}} $$ n length x, range R either 180 360 degree axial directional data, respectively. \"axial\" == TRUE, binwidth adjusted guarantee symmetrical fans.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rose Diagram — rose","text":"","code":"x <- rvm(100, mean = 90, k = 5) rose(x, axial = FALSE, border = TRUE)   data(\"san_andreas\") rose(san_andreas$azi, dots = TRUE, main = \"dot plot\")  rose(san_andreas$azi, weights = 1 / san_andreas$unc, main = \"weighted\")"},{"path":"https://tobiste.github.io/tectonicr/reference/rose_baseplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Rose Diagram — rose_baseplot","title":"Rose Diagram — rose_baseplot","text":"Rose Diagram","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose_baseplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rose Diagram — rose_baseplot","text":"","code":"rose_baseplot(   start = -90,   clockwise = TRUE,   main = NULL,   labels = TRUE,   at = seq(0, 360 - 45, 45),   cborder = TRUE,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/rose_baseplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rose Diagram — rose_baseplot","text":"start starting direction measurement angles, , spatial direction corresponds measured angle zero. Either character string giving compass direction (\"N\" north, \"S\" south, \"E\" east, \"W\" west) number giving angle horizontal (East) axis starting direction. example, clockwise=FALSE, start=90 start=\"N\" equivalent. default measure angles anti-clockwise horizontal axis (East direction). clockwise Logical. Whether angles increase clockwise direction (clockwise=TRUE, default) anti-clockwise, counter-clockwise direction (FALSE). main Character string specifying title plot. labels Either logical value indicating whether plot labels next tick marks, vector labels tick marks. Optional vector angles tick marks plotted. Set =numeric(0) suppress tick marks. cborder logical. Border rose plot. ... optional arguments passed plot.default()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose_baseplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rose Diagram — rose_baseplot","text":"none","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose_bw.html","id":null,"dir":"Reference","previous_headings":"","what":"Selecting optimal number of bins and width for rose diagrams — rose_bw","title":"Selecting optimal number of bins and width for rose diagrams — rose_bw","text":"Selecting optimal number bins width rose diagrams","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose_bw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selecting optimal number of bins and width for rose diagrams — rose_bw","text":"","code":"rose_bins(n, round = FALSE)  rose_binwidth(n, axial = TRUE, ...)"},{"path":"https://tobiste.github.io/tectonicr/reference/rose_bw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selecting optimal number of bins and width for rose diagrams — rose_bw","text":"n Integer. number data round Logical. Whether bin width round zero digits (round=TRUE, default) (FALSE). axial Logical. Whether data uniaxial (axial=FALSE) biaxial (TRUE, default). ... Additional arguments passed rose_bw().","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose_geom.html","id":null,"dir":"Reference","previous_headings":"","what":"Lines and fans in rose diagram — rose_geom","title":"Lines and fans in rose diagram — rose_geom","text":"Lines fans rose diagram","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose_geom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lines and fans in rose diagram — rose_geom","text":"","code":"rose_line(x, radius = 1, axial = TRUE, add = TRUE, ...)  rose_fan(x, d, radius = 1, axial = TRUE, add = TRUE, ...)"},{"path":"https://tobiste.github.io/tectonicr/reference/rose_geom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lines and fans in rose diagram — rose_geom","text":"x angles degrees radius rose diagram axial Logical. Whether x uniaxial (axial=FALSE) biaxial (TRUE, default). add logical. Add existing plot? ... optional arguments passed graphics::segments() graphics::polygon() d width fan (degrees)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose_geom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lines and fans in rose diagram — rose_geom","text":"return value, called side effects","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose_geom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lines and fans in rose diagram — rose_geom","text":"","code":"a <- c(0, 10, 45) radius <- c(.7, 1, .2) lwd <- c(2, 1, .75) col <- c(1, 2, 3) rose_line(c(0, 10, 45), radius = radius, axial = FALSE, add = FALSE, lwd = lwd, col = col)"},{"path":"https://tobiste.github.io/tectonicr/reference/rose_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Average Direction and Spread in Rose Diagram — rose_stats","title":"Show Average Direction and Spread in Rose Diagram — rose_stats","text":"Adds average direction (spread) existing rose diagram.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Average Direction and Spread in Rose Diagram — rose_stats","text":"","code":"rose_stats(   x,   weights = NULL,   axial = TRUE,   avg = c(\"mean\", \"median\"),   spread = c(\"CI\", \"sd\", \"IQR\"),   avg.col = \"#85112AFF\",   avg.lty = 2,   avg.lwd = 1.5,   spread.col = ggplot2::alpha(\"#85112AFF\", 0.2),   spread.border = FALSE,   spread.lty = NULL,   spread.lwd = NULL,   add = TRUE,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/rose_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show Average Direction and Spread in Rose Diagram — rose_stats","text":"x Data plotted. numeric vector containing angles (degrees). weights Optional vector numeric weights associated x. axial Logical. Whether data uniaxial (axial=FALSE) biaxial (TRUE, default). avg character. average estimate x. Either circular mean (\"mean\", default) circular Quasi Median (\"median\") spread character. measure spread plotted fan. Either 95% confidence interval (\"CI\", default), circular standard deviation (\"sd\"), Quasi interquartile range circle (\"IQR\"). NULL fan drawn. avg.col color average line avg.lty line type average line avg.lwd line width average line spread.col color spread fan spread.border logical. Whether draw border fan . spread.lty line type spread fan's border spread.lwd line width spread fan's border add logical. ... optional arguments rose_baseplot() add FALSE.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show Average Direction and Spread in Rose Diagram — rose_stats","text":"return value, called side effects","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/rose_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show Average Direction and Spread in Rose Diagram — rose_stats","text":"","code":"data(\"san_andreas\") rose(san_andreas$azi, weights = 1 / san_andreas$unc, muci = FALSE) rose_stats(san_andreas$azi, weights = 1 / san_andreas$unc, avg = \"median\", spread = \"IQR\")"},{"path":"https://tobiste.github.io/tectonicr/reference/rotate_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate Lines — rotate_lines","title":"Rotate Lines — rotate_lines","text":"Rotates set straight lines around angle","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotate_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate Lines — rotate_lines","text":"","code":"rotate_lines(theta, p, centre)"},{"path":"https://tobiste.github.io/tectonicr/reference/rotate_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate Lines — rotate_lines","text":"theta Angle rotation (degree) p Coordinates lines end points centre Coordinates center point rotation","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotate_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate Lines — rotate_lines","text":"matrix","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_Q4.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotation of a vector by a quaternion — rotation_Q4","title":"Rotation of a vector by a quaternion — rotation_Q4","text":"Rotation vector quaternion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_Q4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotation of a vector by a quaternion — rotation_Q4","text":"","code":"rotation_Q4(q, p)"},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_Q4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotation of a vector by a quaternion — rotation_Q4","text":"q object class \"quaternion\" p three-column vector (Cartesian coordinates) unit length","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_Q4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotation of a vector by a quaternion — rotation_Q4","text":"three-column vector (Cartesian coordinates) unit length","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/san_andreas.html","id":null,"dir":"Reference","previous_headings":"","what":"Example stress data for tangentially displaced plate boundary — san_andreas","title":"Example stress data for tangentially displaced plate boundary — san_andreas","text":"Subset World Stress Map (WSM) compilation information crustal present-day stress field (Version 1.1. 2019). Subset contains stress data adjacent San Andreas Fault.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/san_andreas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example stress data for tangentially displaced plate boundary — san_andreas","text":"","code":"data('san_andreas')"},{"path":"https://tobiste.github.io/tectonicr/reference/san_andreas.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example stress data for tangentially displaced plate boundary — san_andreas","text":"object class \"sf\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/san_andreas.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example stress data for tangentially displaced plate boundary — san_andreas","text":"https://www.world-stress-map.org/","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/san_andreas.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example stress data for tangentially displaced plate boundary — san_andreas","text":"Heidbach, O., M. Rajabi, X. Cui, K. Fuchs, B. M<U+00FC>ller, J. Reinecker, K. Reiter, M. Tingay, F. Wenzel, F. Xie, M. O. Ziegler, M.-L. Zoback, M. D. Zoback (2018): World Stress Map database release 2016: Crustal stress pattern across scales. Tectonophysics, 744, 484-498, doi:10.1016/j.tecto.2018.07.007 .","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/san_andreas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example stress data for tangentially displaced plate boundary — san_andreas","text":"","code":"data(\"san_andreas\") head(san_andreas) #> Simple feature collection with 6 features and 9 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -119.966 ymin: 32.94 xmax: -115.627 ymax: 35.714 #> Geodetic CRS:  WGS 84 #> # A tibble: 6 × 10 #>   id         lat   lon   azi   unc type  depth quality regime #>   <chr>    <dbl> <dbl> <dbl> <dbl> <chr> <dbl> <fct>   <chr>  #> 1 wsm07786  35.7 -120.    36     1 HF      1.3 A       S      #> 2 wsm11750  32.9 -116.     7     1 FMF     7   A       S      #> 3 wsm11759  33.0 -116.   169     1 FMF     5   A       S      #> 4 wsm11782  33.2 -116.     1     1 FMF     8   A       S      #> 5 wsm11801  33.9 -116.    23     1 FMF     6   A       S      #> 6 wsm11830  33.5 -116.   160     1 FMF     9   A       S      #> # ℹ 1 more variable: geometry <POINT [°]>"},{"path":"https://tobiste.github.io/tectonicr/reference/spec_atan.html","id":null,"dir":"Reference","previous_headings":"","what":"Quadrant-specific inverse of the tangent — spec_atan","title":"Quadrant-specific inverse of the tangent — spec_atan","text":"Returns quadrant specific inverse tangent","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spec_atan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quadrant-specific inverse of the tangent — spec_atan","text":"","code":"atan2_spec(x, y)  atan2d_spec(x, y)"},{"path":"https://tobiste.github.io/tectonicr/reference/spec_atan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quadrant-specific inverse of the tangent — spec_atan","text":"x, y dividend divisor comprise sum sines cosines, respectively.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spec_atan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quadrant-specific inverse of the tangent — spec_atan","text":"numeric.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spec_atan.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quadrant-specific inverse of the tangent — spec_atan","text":"Jammalamadaka, S. Rao, Ambar Sengupta (2001). Topics circular statistics. Vol. 5. world scientific.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":null,"dir":"Reference","previous_headings":"","what":"Angle along great circle on spherical surface — spherical_angle","title":"Angle along great circle on spherical surface — spherical_angle","text":"Smallest angle two points surface sphere, measured along surface sphere","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Angle along great circle on spherical surface — spherical_angle","text":"","code":"orthodrome(lat1, lon1, lat2, lon2)  haversine(lat1, lon1, lat2, lon2)  vincenty(lat1, lon1, lat2, lon2)"},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Angle along great circle on spherical surface — spherical_angle","text":"lat1, lat2 numeric vector. latitudes point 1 2 (radians) lon1, lon2 numeric vector. longitudes point 1 2 (radians)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Angle along great circle on spherical surface — spherical_angle","text":"numeric. angle radians","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Angle along great circle on spherical surface — spherical_angle","text":"\"orthodrome\" based spherical law cosines \"haversine\" uses haversine formula optimized 64-bit floating-point numbers \"vincenty\" uses Vincenty formula ellipsoid equal major minor axes","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Angle along great circle on spherical surface — spherical_angle","text":"Imboden, C. & Imboden, D. (1972). Formel fuer Orthodrome und Loxodrome bei der Berechnung von Richtung und Distanz zwischen Beringungs- und Wiederfundort. Die Vogelwarte 26, 336-346. Sinnott, Roger W. (1984). Virtues Haversine. Sky telescope 68(2), 158. Vincenty, T. (1975). Direct inverse solutions geodesics ellipsoid application nested equations. Survey Review, 23(176), 88<U+2013>93. doi:10.1179/sre.1975.23.176.88 . http://www.movable-type.co.uk/scripts/latlong.html http://www.edwilliams.org/avform147.htm","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Angle along great circle on spherical surface — spherical_angle","text":"","code":"berlin <- c(52.52, 13.41) calgary <- c(51.04, -114.072) orthodrome(berlin[1], berlin[2], calgary[1], calgary[2]) #> [1] 0.8595483 haversine(berlin[1], berlin[2], calgary[1], calgary[2]) #> [1] 0.8595483 vincenty(berlin[1], berlin[2], calgary[1], calgary[2]) #> [1] 0.8595483"},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial interpolation of SHmax — stress2grid","title":"Spatial interpolation of SHmax — stress2grid","text":"Stress field wavelength analysis using kernel (weighted) mean/median standard deviation/IQR stress data","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial interpolation of SHmax — stress2grid","text":"","code":"stress2grid(   x,   stat = c(\"mean\", \"median\"),   grid = NULL,   lon_range = NULL,   lat_range = NULL,   gridsize = 2.5,   min_data = 3,   threshold = 25,   arte_thres = 200,   method_weighting = FALSE,   quality_weighting = TRUE,   dist_weight = c(\"inverse\", \"linear\", \"none\"),   dist_threshold = 0.1,   R_range = seq(50, 1000, 50),   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spatial interpolation of SHmax — stress2grid","text":"https://github.com/MorZieg/Stress2Grid","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial interpolation of SHmax — stress2grid","text":"x sf object containing azi SHmax degree unc Uncertainties SHmax degree type Methods used determination direction SHmax stat direction interpolated SHmax based  circular mean standard deviation (\"mean\", default) circular median interquartile range (\"median\")? grid (optional) Point object class sf. lon_range, lat_range (optional) numeric vector specifying minimum maximum longitudes latitudes (ignored \"grid\" specified). gridsize Numeric. Target spacing regular grid decimal degree. Default 2.5. (ignored \"grid\" specified) min_data Integer. Minimum number data per bin. Default 3 threshold Numeric. Threshold deviation direction. Default 25 arte_thres Numeric. Maximum distance (km) grid point nextdata point. Default 200 method_weighting Logical. method weighting applied: Default FALSE. quality_weighting Logical. quality weighting applied: Default TRUE. dist_weight Distance weighting method used. One \"none\", \"linear\", \"inverse\" (default). dist_threshold Numeric. Distance weight prevent overweight data nearby (0 1). Default 0.1 R_range Numeric value vector specifying kernel half-width(s), .e. search radius (km). Default seq(50, 1000, 50) ... optional arguments dist_greatcircle()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial interpolation of SHmax — stress2grid","text":"sf object containing lon,lat longitude latitude degrees azi Mean SHmax degree sd Standard deviation SHmax degrees R Search radius km mdr Mean distance datapoints per search radius N Number data points search radius","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial interpolation of SHmax — stress2grid","text":"Updated version MATLAB script \"stress2grid\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spatial interpolation of SHmax — stress2grid","text":"Ziegler, M. O. Heidbach, O. (2019). Matlab Script Stress2Grid v1.1. GFZ Data Services. doi:10.5880/wsm.2019.002","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial interpolation of SHmax — stress2grid","text":"","code":"data(\"san_andreas\") stress2grid(san_andreas) #> Simple feature collection with 671 features and 7 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -124.57 ymin: 24.33 xmax: -107.07 ymax: 39.33 #> Geodetic CRS:  WGS 84 #> # A tibble: 671 × 8 #> # Groups:   R [20] #>      lon   lat   azi    sd     R    mdr     N        geometry #>    <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl> <int>     <POINT [°]> #>  1 -115.  24.3   NA   0       50 NA         0 (-114.57 24.33) #>  2 -115.  24.3   NA   0      100 NA         0 (-114.57 24.33) #>  3 -115.  24.3   NA   0      150 NA         0 (-114.57 24.33) #>  4 -115.  24.3   NA   0      200 NA         1 (-114.57 24.33) #>  5 -115.  24.3  179.  5.32   250  0.820     3 (-114.57 24.33) #>  6 -115.  24.3  170. 25.0    350  0.796     9 (-114.57 24.33) #>  7 -115.  24.3  168. 19.3    400  0.816    18 (-114.57 24.33) #>  8 -115.  24.3  171. 14.8    450  0.884    56 (-114.57 24.33) #>  9 -115.  24.3  171. 16.3    500  0.876   107 (-114.57 24.33) #> 10 -115.  24.3  171. 15.5    550  0.832   139 (-114.57 24.33) #> # ℹ 661 more rows"},{"path":"https://tobiste.github.io/tectonicr/reference/stress_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick analysis of a stress data set — stress_analysis","title":"Quick analysis of a stress data set — stress_analysis","text":"Returns converted azimuths, distances plate boundary, statistics model, plots.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick analysis of a stress data set — stress_analysis","text":"","code":"stress_analysis(   x,   PoR,   type = c(\"none\", \"in\", \"out\", \"right\", \"left\"),   pb,   plot = TRUE,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/stress_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick analysis of a stress data set — stress_analysis","text":"x data.frame sf object containing coordinates point(s) (lat, lon), direction \\(\\sigma_{Hmax}\\) azi standard deviation unc (optional) PoR Pole Rotation. data.frame object class \"euler.pole\" containing geographical coordinates Euler pole type Character. Type plate boundary (optional). Can \"\", \"\", \"right\", \"left\" outward, inward, right-lateral, left-lateral moving plate boundaries, respectively. \"none\" (default), PoR-equivalent azimuth returned. pb (optional) sf object plate boundary geometries geographical coordinate system plot (logical). Whether produce plot additional output. ... optional arguments distance_from_pb()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quick analysis of a stress data set — stress_analysis","text":"list containing following values: results data.frame showing coordinate azimuth conversions (lat.PoR, lon.PoR, azi.PoR), predicted azimuths (prd), deviation angle predicted (dev), circular distance (cdist), misfit predicted stress direction (nchisq) , given, distance tested plate boundary (distance) stats array circular (weighted) mean, circular standard deviation, circular variance, circular dispersion, 95% confidence angle, normalized Chi-squared test statistic test list containting test results (weighted) Rayleigh test uniform distribution predicted  orientation.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/stress_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quick analysis of a stress data set — stress_analysis","text":"","code":"# \\donttest{ data(\"nuvel1\") na_pa <- subset(nuvel1, nuvel1$plate.rot == \"na\")  data(\"plates\") plate_boundary <- subset(plates, plates$pair == \"na-pa\")  data(\"san_andreas\") stress_analysis(san_andreas, na_pa, type = \"right\", plate_boundary, plot = TRUE) #> Reject Null Hypothesis #> $result #>          azi.PoR prd           dev       nchisq        cdist  lat.PoR   lon.PoR #> 1    162.2848047 135   27.28480473 9.190871e-02 2.101433e-01 56.93219 -82.67182 #> 2    137.7445836 135    2.74458362 9.299678e-04 2.292849e-03 58.01202 -74.48278 #> 3    119.5839889 135  -15.41601108 2.933993e-02 7.066321e-02 57.93239 -74.80319 #> 4    131.1907568 135   -3.80924316 1.791399e-03 4.413592e-03 57.83707 -75.51138 #> 5    152.3277168 135   17.32771681 3.706787e-02 8.870670e-02 58.17336 -76.62093 #> 6    109.7786005 135  -25.22139952 7.853321e-02 1.815759e-01 57.84485 -76.16849 #> 7    132.9908700 135   -2.00912999 4.983461e-04 1.229116e-03 58.18243 -77.15235 #> 8    128.9961966 135   -6.00380337 4.450081e-03 1.094001e-02 58.11006 -77.20485 #> 9    124.9184543 135  -10.08154567 1.254785e-02 3.064237e-02 58.10225 -77.33607 #> 10   127.1912244 135   -7.80877555 7.528022e-03 1.845993e-02 57.87068 -77.09293 #> 11   152.7282786 135   17.72827865 3.880146e-02 9.272221e-02 58.50180 -78.89173 #> 12   155.7137239 135   20.71372392 5.297017e-02 1.251029e-01 58.46294 -78.94921 #> 13   132.7905257 135   -2.20947432 6.026885e-04 1.486337e-03 57.61320 -77.95832 #> 14   126.0428734 135   -8.95712663 9.904953e-03 2.424104e-02 58.34552 -80.12443 #> 15   138.2288366 135    3.22883662 1.287085e-03 3.172394e-03 58.69163 -81.10158 #> 16   137.4837793 135    2.48377930 7.616246e-04 1.878057e-03 57.46993 -78.57961 #> 17   124.0165800 135  -10.98341999 1.489327e-02 3.629975e-02 57.66073 -80.79202 #> 18   112.0060371 135  -22.99396293 6.527436e-02 1.525950e-01 57.62104 -80.84558 #> 19   156.4068069 135   21.40680688 5.657424e-02 1.332158e-01 56.94041 -79.16714 #> 20   135.2011297 135    0.20112973 4.994218e-06 1.232269e-05 57.11150 -80.99529 #> 21   145.1003203 135   10.10032034 1.259463e-02 3.075542e-02 57.00478 -81.25935 #> 22   166.5621113 135   31.56211133 1.229836e-01 2.739712e-01 58.87777 -75.66724 #> 23   142.4848216 135    7.48482161 6.916365e-03 1.696859e-02 58.17754 -74.76757 #> 24   122.8625351 135  -12.13746490 1.818741e-02 4.420837e-02 57.94671 -74.34495 #> 25   147.5250625 135   12.52506249 1.936755e-02 4.703114e-02 58.10751 -74.75881 #> 26   150.5845248 135   15.58452485 2.998487e-02 7.217802e-02 58.07501 -74.68941 #> 27   119.5848229 135  -15.41517706 2.933675e-02 7.065575e-02 58.00338 -74.74563 #> 28   116.3065241 135  -18.69347593 4.314149e-02 1.027235e-01 57.98817 -75.20398 #> 29   124.3867506 135  -10.61324942 1.390630e-02 3.392177e-02 57.92049 -75.12935 #> 30   124.2679825 135  -10.73201746 1.421928e-02 3.467628e-02 57.91351 -75.32572 #> 31   162.3448460 135   27.34484604 9.231365e-02 2.109978e-01 58.21123 -76.56204 #> 32   117.3905742 135  -17.60942584 3.828295e-02 9.152240e-02 57.63432 -75.35202 #> 33   152.1432565 135   17.14325646 3.628287e-02 8.688454e-02 58.26826 -76.83660 #> 34   127.9951712 135   -7.00482878 6.057732e-03 1.487253e-02 57.82358 -75.83714 #> 35   124.7961349 135  -10.20386509 1.285418e-02 3.138252e-02 57.88265 -76.10932 #> 36   135.0368601 135    0.03686012 1.677369e-07 4.138741e-07 57.75432 -75.82619 #> 37   163.6742114 135   28.67421138 1.015075e-01 2.302355e-01 58.41094 -77.46432 #> 38     3.9856064 135 -131.01439362 2.962456e-01 5.693378e-01 58.25478 -77.09978 #> 39   137.0468222 135    2.04682219 5.172199e-04 1.275646e-03 58.22329 -77.02844 #> 40   130.8209262 135   -4.17907380 2.156131e-03 5.310611e-03 57.77569 -76.15695 #> 41   128.3587915 135   -6.64120855 5.445142e-03 1.337529e-02 57.99416 -76.72024 #> 42   138.2405768 135    3.24057681 1.296461e-03 3.195481e-03 57.47945 -75.71921 #> 43   124.1802064 135  -10.81979358 1.445283e-02 3.523904e-02 58.01610 -76.98868 #> 44   141.7947092 135    6.79470922 5.699762e-03 1.399779e-02 58.16501 -77.48111 #> 45   134.2241082 135   -0.77589180 7.432199e-05 1.833709e-04 57.94656 -76.97641 #> 46   135.5278171 135    0.52781705 3.439393e-05 8.486122e-05 57.78922 -76.61842 #> 47   123.0853132 135  -11.91468678 1.752590e-02 4.262367e-02 57.97176 -77.17837 #> 48   133.1470122 135   -1.85298783 4.238968e-04 1.045559e-03 57.93958 -77.10624 #> 49   130.2076213 135   -4.79237867 2.835419e-03 6.979816e-03 57.90862 -77.03471 #> 50   118.4497525 135  -16.55024750 3.381613e-02 8.114300e-02 57.78313 -76.74937 #> 51   132.8905579 135   -2.10944213 5.493514e-04 1.354858e-03 57.52704 -76.24788 #> 52   132.7626221 135   -2.23737790 6.180074e-04 1.524097e-03 58.08833 -77.59778 #> 53   125.8239143 135   -9.17608566 1.039513e-02 2.543041e-02 58.05763 -77.52556 #> 54   127.1306903 135   -7.86930967 7.645189e-03 1.874543e-02 57.90162 -77.16440 #> 55   140.4330587 135    5.43305867 3.644213e-03 8.964817e-03 57.74523 -76.80782 #> 56   130.6842542 135   -4.31574577 2.299464e-03 5.662979e-03 58.08157 -77.72925 #> 57   120.7468483 135  -14.25315168 2.508053e-02 6.061769e-02 58.05030 -77.65549 #> 58   109.0526368 135  -25.94736315 8.311922e-02 1.914458e-01 57.89518 -77.29547 #> 59   122.0365709 135  -12.96342915 2.074697e-02 5.032354e-02 57.85719 -77.35341 #> 60   124.9600343 135  -10.03996573 1.244456e-02 3.039272e-02 57.85003 -77.48280 #> 61   146.0810295 135   11.08102954 1.515916e-02 3.693971e-02 57.78833 -77.33984 #> 62   117.4130133 135  -17.58698673 3.818544e-02 9.129667e-02 58.05515 -78.18729 #> 63   144.9886391 135    9.98863909 1.231764e-02 3.008591e-02 57.74255 -77.52771 #> 64   144.9125972 135    9.91259718 1.213081e-02 2.963414e-02 57.73533 -77.65668 #> 65   149.9729292 135   14.97292917 2.767761e-02 6.675125e-02 57.70453 -77.58532 #> 66   165.9573072 135   30.95730721 1.183154e-01 2.646066e-01 57.66650 -77.64286 #> 67   132.6451285 135   -2.35487145 6.846197e-04 1.688280e-03 57.70948 -78.11113 #> 68   136.8634077 135    1.86340771 4.286776e-04 1.057347e-03 58.47351 -80.29418 #> 69   137.8201161 135    2.82011607 9.818586e-04 2.420683e-03 57.50569 -78.00227 #> 70   126.6836574 135   -8.31634262 8.538464e-03 2.092028e-02 58.48793 -80.56729 #> 71   141.4501320 135    6.45013203 5.136321e-03 1.261992e-02 58.57016 -80.86305 #> 72   146.2209748 135   11.22097481 1.554448e-02 3.786661e-02 58.21783 -79.95523 #> 73   131.2168987 135   -3.78310129 1.766896e-03 4.353309e-03 58.65186 -81.15761 #> 74   126.2050491 135   -8.79495093 9.549526e-03 2.337803e-02 58.61208 -81.21356 #> 75   147.4004054 135   12.40040536 1.898396e-02 4.611423e-02 58.52511 -80.98392 #> 76   133.5946136 135   -1.40538640 2.438409e-04 6.015325e-04 58.43773 -80.75542 #> 77   152.2530103 135   17.25301026 3.674893e-02 8.796667e-02 58.38975 -81.34501 #> 78   125.6911375 135   -9.30886254 1.069814e-02 2.616515e-02 57.15945 -78.51007 #> 79   130.6780864 135   -4.32191361 2.306042e-03 5.679146e-03 57.12067 -78.56494 #> 80   127.4815482 135   -7.51845181 6.978657e-03 1.712054e-02 58.04101 -81.30444 #> 81   130.7363108 135   -4.26368917 2.244327e-03 5.527440e-03 57.92488 -81.00191 #> 82   123.5347570 135  -11.46524301 1.622862e-02 3.951089e-02 57.97277 -81.28235 #> 83   142.5989184 135    7.59891843 7.128835e-03 1.748680e-02 57.94299 -81.20666 #> 84   123.7246913 135  -11.27530866 1.569538e-02 3.822945e-02 57.88578 -81.05683 #> 85   125.8393541 135   -9.16064592 1.036018e-02 2.534564e-02 57.78804 -80.96189 #> 86   143.2869304 135    8.28693038 8.478175e-03 2.077359e-02 57.00053 -79.31147 #> 87   108.0573327 135  -26.94266727 8.961819e-02 2.052984e-01 57.55250 -80.82522 #> 88   148.1547373 135   13.15473726 2.136384e-02 5.179342e-02 57.02160 -79.51010 #> 89   152.2142822 135   17.21428217 3.658414e-02 8.758413e-02 56.99195 -79.43844 #> 90   147.3340093 135   12.33400934 1.878121e-02 4.562936e-02 56.93128 -79.29495 #> 91   149.3932081 135   14.39320815 2.557586e-02 6.178957e-02 56.90151 -79.22362 #> 92   131.1310545 135   -3.86894548 1.847992e-03 4.552812e-03 56.94313 -79.61852 #> 93   154.5520854 135   19.55208538 4.719556e-02 1.119998e-01 57.20490 -80.33468 #> 94   154.8507037 135   19.85070374 4.864820e-02 1.153081e-01 56.91794 -78.45641 #> 95   163.5616802 135   28.56168021 1.007123e-01 2.285840e-01 56.88395 -78.96153 #> 96   137.7494133 135    2.74941332 9.332437e-04 2.300920e-03 55.25910 -80.07183 #> 97   131.1660496 135   -3.83395043 1.814713e-03 4.470946e-03 57.13615 -81.03021 #> 98   179.3703407 135   44.37034071 2.430527e-01 4.890113e-01 56.91528 -82.54677 #> 99   147.5483583 135   12.54835827 1.943967e-02 4.720345e-02 56.83750 -82.32657 #> 100  139.7044566 135    4.70445663 2.732335e-03 6.726629e-03 56.80121 -82.10264 #> 101  139.6260497 135    4.62604973 2.642017e-03 6.504762e-03 58.22039 -74.50817 #> 102  139.9044019 135    4.90440190 2.969526e-03 7.309133e-03 58.01972 -74.22074 #> 103  150.6052337 135   15.60523372 3.006461e-02 7.236520e-02 58.11191 -74.62709 #> 104  152.4642460 135   17.46424598 3.765431e-02 9.006637e-02 58.14062 -74.82978 #> 105  150.2243091 135   15.22430905 2.861476e-02 6.895802e-02 58.19843 -75.16704 #> 106  118.5648136 135  -16.43518642 3.334757e-02 8.004969e-02 57.89481 -74.86377 #> 107  125.8598452 135   -9.14015485 1.031388e-02 2.523334e-02 57.66077 -74.57342 #> 108  122.2073799 135  -12.79262007 2.020384e-02 4.902810e-02 57.94645 -75.39659 #> 109  169.2542302 135   34.25423018 1.448583e-01 3.168181e-01 58.42200 -76.53129 #> 110  160.3771329 135   25.37713292 7.950603e-02 1.836762e-01 58.35927 -76.38764 #> 111  174.3809267 135   39.38092667 1.914639e-01 4.025563e-01 58.28695 -76.44154 #> 112  168.4431077 135   33.44310774 1.380792e-01 3.037208e-01 58.25457 -76.36909 #> 113  131.1099807 135   -3.89001925 1.868179e-03 4.602469e-03 57.90395 -75.58732 #> 114  136.4284326 135    1.42843258 2.519037e-04 6.214186e-04 57.70835 -75.23171 #> 115  127.0917892 135   -7.90821078 7.720963e-03 1.893004e-02 57.86624 -75.64706 #> 116  133.0727800 135   -1.92721997 4.585403e-04 1.130976e-03 57.82980 -75.70714 #> 117  156.4282608 135   21.42826076 5.668770e-02 1.334704e-01 58.14502 -76.48355 #> 118  124.9139748 135  -10.08602516 1.255900e-02 3.066932e-02 57.89030 -75.91353 #> 119  139.1531345 135    4.15313453 2.129448e-03 5.245006e-03 57.76230 -75.63228 #> 120  134.0547739 135   -0.94522609 1.103028e-04 2.721365e-04 57.79206 -75.76671 #> 121  176.7538806 135   41.75388057 2.152329e-01 4.434657e-01 58.41767 -77.33169 #> 122  169.8156947 135   34.81569470 1.496460e-01 3.259707e-01 58.38633 -77.25978 #> 123  140.0637459 135    5.06374592 3.165620e-03 7.790539e-03 58.26187 -76.96897 #> 124  146.1261605 135   11.12616046 1.528289e-02 3.723742e-02 58.22970 -76.89622 #> 125  140.9167547 135    5.91675466 4.321974e-03 1.062619e-02 57.81857 -75.96750 #> 126  131.1161918 135   -3.88380818 1.862218e-03 4.587806e-03 57.68813 -75.75183 #> 127  148.8612451 135   13.86124510 2.372026e-02 5.739445e-02 58.31763 -77.24530 #> 128  159.3435676 135   24.34356759 7.316164e-02 1.699148e-01 58.52734 -77.89080 #> 129  170.4698792 135   35.46987916 1.553225e-01 3.367189e-01 58.46520 -77.74332 #> 130  172.6578529 135   37.65785288 1.750758e-01 3.732536e-01 58.37229 -77.52333 #> 131  121.2147296 135  -13.78527040 2.346095e-02 5.677916e-02 58.09132 -76.87031 #> 132  162.3277059 135   27.32770586 9.219796e-02 2.107537e-01 58.48863 -77.94941 #> 133  121.1968004 135  -13.80319956 2.352201e-02 5.692408e-02 58.05403 -76.93027 #> 134  142.0028175 135    7.00281751 6.054253e-03 1.486404e-02 57.60768 -76.00033 #> 135  124.0583076 135  -10.94169239 1.478032e-02 3.602781e-02 58.07794 -77.13235 #> 136  138.7097580 135    3.70975804 1.699050e-03 4.186383e-03 58.23066 -77.56118 #> 137  131.4456263 135   -3.55437371 1.559700e-03 3.843472e-03 57.85554 -76.69586 #> 138  140.7160017 135    5.71600169 4.033664e-03 9.919691e-03 58.15829 -77.61288 #> 139  138.7787549 135    3.77875489 1.762838e-03 4.343326e-03 58.12699 -77.53900 #> 140  138.5109581 135    3.51095811 1.521830e-03 3.750269e-03 57.75134 -76.67701 #> 141  166.6305470 135   31.63054703 1.235175e-01 2.750372e-01 57.68891 -76.53556 #> 142  125.2905109 135   -9.70948913 1.163879e-02 2.844371e-02 57.84251 -76.95658 #> 143  130.6999491 135   -4.30005085 2.282770e-03 5.621942e-03 58.11961 -77.67159 #> 144  111.8850808 135  -23.11491920 6.596290e-02 1.541164e-01 58.02689 -77.45347 #> 145  125.9473661 135   -9.05263390 1.011731e-02 2.475642e-02 57.99548 -77.38003 #> 146  155.6136323 135   20.61363235 5.245949e-02 1.239493e-01 57.65104 -76.59418 #> 147  162.6728818 135   27.67288181 9.454178e-02 2.156887e-01 57.61913 -76.52469 #> 148  147.8706163 135   12.87061625 2.045096e-02 4.961765e-02 58.47996 -78.68441 #> 149  129.6227849 135   -5.37721510 3.569684e-03 8.782014e-03 58.11218 -77.80166 #> 150  121.8080636 135  -13.19193640 2.148484e-02 5.208156e-02 58.01961 -77.58334 #> 151  126.9310904 135   -8.06890963 8.037939e-03 1.970205e-02 57.95684 -77.43891 #> 152  126.1132230 135   -8.88677702 9.749976e-03 2.386480e-02 57.86429 -77.22393 #> 153  130.2576726 135   -4.74232736 2.776502e-03 6.835115e-03 57.76664 -77.07303 #> 154  140.7372296 135    5.73722964 4.063679e-03 9.993260e-03 57.51539 -76.50597 #> 155  156.8558020 135   21.85580202 5.897236e-02 1.385864e-01 58.44113 -78.74212 #> 156  130.6072566 135   -4.39274342 2.382246e-03 5.866449e-03 58.07412 -77.85917 #> 157  124.6686483 135  -10.33135166 1.317739e-02 3.216304e-02 58.04353 -77.78682 #> 158  133.9139346 135   -1.08606539 1.456220e-04 3.592648e-04 57.91946 -77.49819 #> 159  135.0970817 135    0.09708171 1.163563e-06 2.870973e-06 57.82631 -77.28193 #> 160  116.8981107 135  -18.10188934 4.045412e-02 9.653932e-02 57.88145 -77.55593 #> 161  129.0205939 135   -5.97940608 4.413987e-03 1.085160e-02 57.81920 -77.41126 #> 162  127.2251918 135   -7.77480820 7.462672e-03 1.830066e-02 57.69073 -77.18915 #> 163  134.0044372 135   -0.99556276 1.223636e-04 3.018897e-04 57.78056 -77.47002 #> 164  142.1262601 135    7.12626006 6.269578e-03 1.538996e-02 57.71817 -77.32597 #> 165  115.5831697 135  -19.41683031 4.654485e-02 1.105151e-01 57.92492 -78.02594 #> 166  111.7064033 135  -23.29359669 6.698662e-02 1.563751e-01 57.86310 -77.88046 #> 167  143.0718443 135    8.07184426 8.043786e-03 1.971629e-02 57.67726 -77.44845 #> 168  159.8970506 135   24.89705058 7.652631e-02 1.772318e-01 57.69729 -77.71416 #> 169  164.8813304 135   29.88133036 1.102338e-01 2.482085e-01 57.65860 -77.77252 #> 170  132.0843407 135   -2.91565931 1.049515e-03 2.587339e-03 57.53170 -77.55126 #> 171  136.7441507 135    1.74415068 3.755632e-04 9.263788e-04 57.68258 -77.97402 #> 172  135.7340287 135    0.73402865 6.651828e-05 1.641183e-04 58.53281 -80.44591 #> 173  137.8378407 135    2.83784070 9.942395e-04 2.451182e-03 58.39479 -80.40688 #> 174  136.4645187 135    1.46451869 2.647920e-04 6.532057e-04 57.61677 -78.48354 #> 175  134.5864954 135   -0.41350456 2.110938e-05 5.208442e-05 57.55511 -78.33906 #> 176  128.7070027 135   -6.29299731 4.889113e-03 1.201497e-02 57.49455 -78.19555 #> 177  133.2699857 135   -1.73001431 3.694999e-04 9.114275e-04 58.58377 -81.13679 #> 178  132.3359190 135   -2.66408100 8.762133e-04 2.160412e-03 58.55417 -81.05952 #> 179  141.5305084 135    6.53050837 5.265128e-03 1.293502e-02 58.46692 -80.83064 #> 180  133.6587965 135   -1.34120352 2.220774e-04 5.478539e-04 58.40915 -80.67939 #> 181  139.7239524 135    4.72395244 2.755028e-03 6.782370e-03 58.37928 -80.60289 #> 182  129.6553924 135   -5.34460760 3.526522e-03 8.676136e-03 57.45205 -78.31601 #> 183  132.7165062 135   -2.28349380 6.437462e-04 1.587539e-03 57.42080 -78.24349 #> 184  146.3239720 135   11.32397200 1.583115e-02 3.855584e-02 58.51440 -81.11554 #> 185  143.3885645 135    8.38856450 8.687409e-03 2.128260e-02 58.48600 -81.03910 #> 186  137.9595659 135    2.95956588 1.081362e-03 2.665781e-03 58.65336 -81.56465 #> 187  139.1169275 135    4.11692752 2.092481e-03 5.154109e-03 58.56141 -81.40105 #> 188  149.1831229 135   14.18312291 2.483469e-02 6.003569e-02 58.53257 -81.32277 #> 189  147.1715330 135   12.17153299 1.828966e-02 4.445315e-02 58.49278 -81.37848 #> 190  155.3018455 135   20.30184545 5.088456e-02 1.203853e-01 58.43491 -81.22490 #> 191  176.5433206 135   41.54332061 2.130676e-01 4.398158e-01 58.74406 -82.13861 #> 192  137.5901797 135    2.59017973 8.282754e-04 2.042296e-03 58.17088 -81.00925 #> 193  146.6417227 135   11.64172274 1.673206e-02 4.071969e-02 58.10254 -80.98979 #> 194  133.7207587 135   -1.27924132 2.020319e-04 4.984109e-04 57.99974 -80.95777 #> 195  119.8769525 135  -15.12304746 2.823538e-02 6.806508e-02 58.33295 -81.99931 #> 196  135.4715679 135    0.47156790 2.745386e-05 6.773816e-05 58.00127 -81.35756 #> 197  119.9287919 135  -15.07120806 2.804214e-02 6.761004e-02 57.72413 -80.87603 #> 198  131.1560325 135   -3.84396752 1.824208e-03 4.494304e-03 57.13367 -79.40893 #> 199  109.8415298 135  -25.15847018 7.814181e-02 1.807298e-01 57.24423 -79.82563 #> 200  152.3463238 135   17.34632380 3.714752e-02 8.889146e-02 56.97080 -79.23997 #> 201  118.6563278 135  -16.34367215 3.297724e-02 7.918495e-02 57.76068 -81.28338 #> 202  141.1427466 135    6.14274663 4.658437e-03 1.145026e-02 56.98204 -79.56481 #> 203  148.2022104 135   13.20221038 2.151832e-02 5.216127e-02 56.95241 -79.49321 #> 204  142.3219992 135    7.32199919 6.618725e-03 1.624234e-02 56.89240 -79.34891 #> 205  141.2497088 135    6.24970880 4.822081e-03 1.185090e-02 56.88384 -79.47555 #> 206  136.3356050 135    1.33560500 2.202272e-04 5.432905e-04 57.17456 -80.71694 #> 207  124.9878166 135  -10.01218337 1.237578e-02 3.022646e-02 56.81220 -79.97115 #> 208  152.7976048 135   17.79760485 3.910552e-02 9.342529e-02 56.76277 -78.67765 #> 209  153.7460275 135   18.74602751 4.338439e-02 1.032811e-01 56.60813 -78.89679 #> 210  145.4618065 135   10.46180652 1.351227e-02 3.297131e-02 56.57299 -79.39861 #> 211  144.3489474 135    9.34894744 1.079047e-02 2.638897e-02 58.10939 -73.44027 #> 212  140.3381412 135    5.33814116 3.517994e-03 8.655215e-03 57.82515 -73.67573 #> 213    0.3278169 135 -134.67218307 2.536557e-01 5.057214e-01 56.92764 -82.60517 #> 214  142.5024885 135    7.50248853 6.949054e-03 1.704833e-02 56.83555 -82.40427 #> 215  166.4583889 135   31.45838885 1.221766e-01 2.723579e-01 56.84078 -82.47223 #> 216  136.0646019 135    1.06460191 1.399231e-04 3.452067e-04 58.02712 -73.95846 #> 217  150.8040420 135   15.80404201 3.083552e-02 7.417350e-02 58.05100 -74.35695 #> 218  149.5444826 135   14.54448265 2.611629e-02 6.306706e-02 58.14507 -74.69799 #> 219  149.3440804 135   14.34408042 2.540156e-02 6.137731e-02 58.13379 -75.02736 #> 220  119.6635454 135  -15.33645456 2.903788e-02 6.995321e-02 57.93676 -74.67204 #> 221  103.6442060 135  -31.35579405 1.213810e-01 2.707651e-01 57.89920 -74.73276 #> 222  155.4937963 135   20.49379627 5.185132e-02 1.225742e-01 58.43969 -76.13539 #> 223  114.2466883 135  -20.75331166 5.317283e-02 1.255604e-01 58.01985 -75.27454 #> 224  119.2865963 135  -15.71340367 3.048285e-02 7.334653e-02 57.95117 -75.26561 #> 225  160.5837522 135   25.58375219 8.080597e-02 1.864771e-01 58.22876 -76.16572 #> 226  124.1889307 135  -10.81106933 1.442953e-02 3.518291e-02 57.90877 -75.45655 #> 227  126.1784133 135   -8.82158674 9.607456e-03 2.351872e-02 58.34343 -76.71762 #> 228  176.1614159 135   41.16141588 2.091682e-01 4.332044e-01 58.30553 -76.77642 #> 229  150.0588247 135   15.05882467 2.799607e-02 6.750155e-02 58.33421 -76.91607 #> 230  150.9407508 135   15.94075085 3.137130e-02 7.542887e-02 58.32419 -77.11288 #> 231  137.9761126 135    2.97611263 1.093487e-03 2.695646e-03 57.78647 -75.89801 #> 232  124.3539758 135  -10.64602418 1.399232e-02 3.412918e-02 57.55896 -75.47158 #> 233    0.6119380 135 -134.38806197 2.568455e-01 5.106795e-01 58.44154 -77.53741 #> 234  127.8381437 135   -7.16185634 6.332369e-03 1.554329e-02 57.81284 -76.09880 #> 235  163.9390160 135   28.93901602 1.033909e-01 2.341383e-01 58.74564 -78.34319 #> 236  175.5959300 135   40.59593000 2.034604e-01 4.234369e-01 58.40352 -77.59538 #> 237  147.7611577 135   12.76115772 2.010459e-02 4.879123e-02 57.80705 -76.22759 #> 238  131.8035025 135   -3.19649746 1.261432e-03 3.109230e-03 57.73788 -76.21602 #> 239  103.3744911 135  -31.62550894 1.234781e-01 2.749587e-01 58.41950 -77.93452 #> 240  147.6655776 135   12.66557759 1.980455e-02 4.807498e-02 57.76333 -76.41762 #> 241  124.0407104 135  -10.95928960 1.482790e-02 3.614237e-02 58.04061 -77.19202 #> 242  130.1634239 135   -4.83657605 2.887959e-03 7.108844e-03 57.97752 -77.04799 #> 243  135.5877465 135    0.58774652 4.264765e-05 1.052252e-04 57.75801 -76.54758 #> 244  145.7724508 135   10.77245083 1.432663e-02 3.493497e-02 57.59045 -76.38717 #> 245  113.0687922 135  -21.93120783 5.937998e-02 1.394971e-01 57.93315 -77.23745 #> 246  133.4757588 135   -1.52424123 2.868286e-04 7.075542e-04 58.20819 -77.95477 #> 247  121.8691534 135  -13.13084657 2.128631e-02 5.160877e-02 57.98888 -77.51130 #> 248  131.3777686 135   -3.62223135 1.619822e-03 3.991429e-03 57.70454 -76.93100 #> 249  129.8565506 135   -5.14344940 3.266058e-03 8.037052e-03 57.45203 -76.36446 #> 250  149.7927498 135   14.79274976 2.701549e-02 6.519005e-02 58.47118 -78.81610 #> 251  143.9187263 135    8.91872633 9.820207e-03 2.403532e-02 58.41104 -78.66826 #> 252  145.7781097 135   10.77810974 1.434169e-02 3.497125e-02 58.43234 -78.87366 #> 253  150.9282317 135   15.92823169 3.132205e-02 7.531351e-02 57.77335 -77.59913 #> 254  115.7593678 135  -19.24063223 4.570394e-02 1.085942e-01 57.72066 -77.91683 #> 255  158.8197958 135   23.81979575 7.004724e-02 1.631040e-01 57.68996 -77.84534 #> 256  137.7290206 135    2.72902058 9.194510e-04 2.266939e-03 57.64450 -78.03114 #> 257  151.7032354 135   16.70323537 3.444421e-02 8.260716e-02 58.12612 -79.26432 #> 258  128.5929583 135   -6.40704167 5.067924e-03 1.245257e-02 57.66698 -78.23211 #> 259  136.7137230 135    1.71372298 3.625736e-04 8.943478e-04 57.60577 -78.08914 #> 260  131.7751494 135   -3.22485057 1.283909e-03 3.164574e-03 57.57447 -78.01638 #> 261  139.6181894 135    4.61818936 2.633046e-03 6.482724e-03 58.51778 -80.64407 #> 262  143.8050942 135    8.80509420 9.571566e-03 2.343156e-02 57.46760 -78.05927 #> 263  134.3208863 135   -0.67911371 5.693771e-05 1.404816e-04 58.62829 -81.01447 #> 264  135.6476984 135    0.64769838 5.179175e-05 1.277856e-04 58.36883 -80.73426 #> 265  135.2459672 135    0.24596724 7.469122e-06 1.842921e-05 58.07061 -80.04824 #> 266  123.2393099 135  -11.76069006 1.707578e-02 4.154439e-02 57.59152 -78.87071 #> 267  153.2476811 135   18.24768112 4.110838e-02 9.804750e-02 58.50362 -81.24706 #> 268  139.4048156 135    4.40481558 2.395358e-03 5.898674e-03 58.41126 -81.08267 #> 269  152.1228496 135   17.12284962 3.619654e-02 8.668400e-02 58.44755 -81.49849 #> 270  155.3813595 135   20.38135946 5.128393e-02 1.212900e-01 58.33236 -81.19356 #> 271  134.6006587 135   -0.39934130 1.968808e-05 4.857761e-05 58.21058 -80.95568 #> 272  141.1858945 135    6.18589449 4.724110e-03 1.161105e-02 57.43612 -79.09375 #> 273  126.6536966 135   -8.34630343 8.600096e-03 2.107022e-02 58.14230 -80.93379 #> 274  136.5943137 135    1.59431368 3.138069e-04 7.740877e-04 57.18626 -78.64530 #> 275  144.3378813 135    9.33788125 1.076494e-02 2.632709e-02 58.17267 -81.41227 #> 276  103.1500529 135  -31.84994707 1.252369e-01 2.784636e-01 57.75535 -80.48922 #> 277  118.3986156 135  -16.60138443 3.402543e-02 8.163107e-02 57.63799 -80.19310 #> 278  153.3747348 135   18.37473482 4.168282e-02 9.937032e-02 57.16058 -79.02702 #> 279  172.2261118 135   37.22611178 1.710844e-01 3.659791e-01 58.15582 -81.60739 #> 280  141.3548143 135    6.35481428 4.985638e-03 1.225121e-02 58.09853 -81.45446 #> 281  145.2517458 135   10.25174583 1.297510e-02 3.167458e-02 57.10863 -79.27411 #> 282  157.3126264 135   22.31262635 6.146337e-02 1.441417e-01 57.07830 -79.20092 #> 283  111.6779027 135  -23.32209730 6.715064e-02 1.567366e-01 57.84019 -81.17464 #> 284  142.2396566 135    7.23965656 6.470695e-03 1.588101e-02 57.06975 -79.32816 #> 285  133.3513861 135   -1.64861392 3.355466e-04 8.276997e-04 57.48067 -80.41243 #> 286  119.0678835 135  -15.93211648 3.133733e-02 7.534930e-02 57.59218 -80.77166 #> 287  139.9866168 135    4.98661677 3.069919e-03 7.555616e-03 57.03710 -79.77254 #> 288  137.1904385 135    2.19043851 5.923483e-04 1.460849e-03 56.91351 -79.54698 #> 289  117.9161376 135  -17.08386245 3.603190e-02 8.630147e-02 57.41793 -81.17914 #> 290  113.4366992 135  -21.56330076 5.740444e-02 1.350775e-01 57.03704 -80.67638 #> 291    1.9675579 135 -133.03244212 2.723397e-01 5.343134e-01 57.06287 -84.71575 #> 292  133.0172261 135   -1.98277392 4.853571e-04 1.197093e-03 57.66836 -74.31364 #> 293  122.9276078 135  -12.07239223 1.799292e-02 4.374263e-02 56.33250 -78.83369 #> 294  143.3848350 135    8.38483496 8.679686e-03 2.126382e-02 58.20770 -74.90327 #> 295  134.3484152 135   -0.65158478 5.241515e-05 1.293236e-04 57.84650 -75.25013 #> 296  128.6255255 135   -6.37447445 5.016534e-03 1.232682e-02 57.64787 -74.96177 #> 297  156.2396645 135   21.23966454 5.569424e-02 1.312395e-01 58.31181 -76.64631 #> 298  166.3633168 135   31.36331684 1.214392e-01 2.708818e-01 58.24846 -76.50160 #> 299  171.4244689 135   36.42446889 1.637953e-01 3.525540e-01 58.21736 -76.42967 #> 300  123.0131059 135  -11.98689409 1.773897e-02 4.313428e-02 57.86132 -75.77763 #> 301  153.9354736 135   18.93547362 4.426570e-02 1.053023e-01 58.39652 -77.06029 #> 302  157.3524978 135   22.35249784 6.168323e-02 1.446309e-01 58.63835 -77.78104 #> 303  121.5490026 135  -13.45099742 2.233695e-02 5.410911e-02 57.49996 -75.20300 #> 304  152.1874751 135   17.18747511 3.647028e-02 8.731979e-02 58.19876 -76.82409 #> 305  148.2712224 135   13.27122242 2.174387e-02 5.269821e-02 58.13269 -76.74525 #> 306  145.2353382 135   10.23533820 1.293360e-02 3.157435e-02 57.62363 -75.61145 #> 307  175.9227227 135   40.92272275 2.067493e-01 4.290781e-01 58.28622 -77.17371 #> 308  116.1358385 135  -18.86416148 4.393291e-02 1.045394e-01 58.08498 -77.00210 #> 309  120.1193200 135  -14.88068000 2.733761e-02 6.594979e-02 58.04704 -77.06045 #> 310   98.2952458 135  -36.70475424 1.663258e-01 3.572353e-01 58.41244 -78.06690 #> 311  149.6472630 135   14.64726299 2.648671e-02 6.394199e-02 57.72612 -76.47785 #> 312  159.6910826 135   24.69108264 7.526538e-02 1.744947e-01 57.65635 -76.46457 #> 313  117.6137672 135  -17.38623275 3.731865e-02 8.928831e-02 58.00108 -77.91134 #> 314  122.6985525 135  -12.30144752 1.868217e-02 4.539246e-02 57.93614 -77.83060 #> 315  130.6278589 135   -4.37214110 2.359953e-03 5.811657e-03 57.43305 -76.75145 #> 316  156.0944719 135   21.09447191 5.493540e-02 1.295329e-01 58.50340 -79.89906 #> 317  126.8814715 135   -8.11852853 8.137099e-03 1.994348e-02 57.47497 -77.92885 #> 318  125.0237162 135   -9.97628375 1.228719e-02 3.001228e-02 57.37893 -77.77927 #> 319  132.7476878 135   -2.25231216 6.262852e-04 1.544501e-03 58.45864 -80.49217 #> 320  146.8661164 135   11.86611635 1.738330e-02 4.228184e-02 57.43625 -77.98688 #> 321  137.5415062 135    2.54150616 7.974387e-04 1.966311e-03 58.50725 -80.77585 #> 322  150.4649644 135   15.46496444 2.952656e-02 7.110173e-02 58.49666 -80.90753 #> 323  143.2594495 135    8.25944949 8.422038e-03 2.063700e-02 58.54340 -81.19119 #> 324  125.0095525 135   -9.99044754 1.232210e-02 3.009669e-02 57.15585 -77.99217 #> 325  128.5371250 135   -6.46287498 5.156636e-03 1.266962e-02 58.23977 -81.03042 #> 326  139.9174992 135    4.91749920 2.985407e-03 7.348128e-03 58.49287 -81.78303 #> 327  174.2102636 135   39.21026360 1.898080e-01 3.996365e-01 58.23000 -81.56312 #> 328  133.6868527 135   -1.31314729 2.128834e-04 5.251769e-04 57.04748 -78.61384 #> 329  117.4183356 135  -17.58166442 3.816234e-02 9.124317e-02 58.07012 -81.37893 #> 330  151.3721776 135   16.37217758 3.309237e-02 7.945385e-02 57.04855 -79.12930 #> 331  163.3597001 135   28.35970005 9.929291e-02 2.256301e-01 57.00904 -79.18442 #> 332  149.1665866 135   14.16658661 2.477681e-02 5.989864e-02 57.06049 -79.45626 #> 333  152.2274225 135   17.22742252 3.664001e-02 8.771384e-02 57.03022 -79.38309 #> 334  104.9067054 135  -30.09329462 1.118033e-01 2.514115e-01 57.64533 -80.98443 #> 335  117.1549833 135  -17.84501666 3.931415e-02 9.390749e-02 57.52865 -80.68828 #> 336  102.9943158 135  -32.00568423 1.264647e-01 2.809036e-01 57.58195 -80.90056 #> 337  139.2749199 135    4.27491989 2.256165e-03 5.556543e-03 56.96165 -79.36544 #> 338  151.2615601 135   16.26156013 3.264671e-02 7.841272e-02 56.92273 -79.42172 #> 339  138.3067035 135    3.30670353 1.349912e-03 3.327078e-03 57.32264 -80.62912 #> 340  106.5857165 135  -28.41428345 9.967549e-02 2.264270e-01 58.26511 -84.13135 #> 341  132.3252019 135   -2.67479808 8.832771e-04 2.177816e-03 56.86831 -81.01431 #> 342  142.8035259 135    7.80352590 7.517903e-03 1.843527e-02 56.63462 -80.43555 #> 343  165.6968875 135   30.69688750 1.163332e-01 2.606064e-01 56.56244 -77.36122 #> 344  125.2172591 135   -9.78274089 1.181506e-02 2.887031e-02 57.11849 -80.96239 #> 345  166.7408774 135   31.74087739 1.243807e-01 2.767586e-01 58.31215 -75.84653 #> 346  135.5039075 135    0.50390749 3.134849e-05 7.734730e-05 58.22278 -76.29823 #> 347  161.3023284 135   26.30232837 8.540895e-02 1.963444e-01 58.28016 -76.57265 #> 348  130.8569703 135   -4.14302973 2.119098e-03 5.219559e-03 57.84999 -76.03813 #> 349  165.5260331 135   30.52603309 1.150418e-01 2.579927e-01 58.50766 -77.61760 #> 350  107.1524478 135  -27.84755221 9.573903e-02 2.182017e-01 58.12291 -76.94367 #> 351  124.8398545 135  -10.16014550 1.274427e-02 3.111699e-02 58.09564 -77.46770 #> 352  151.9252350 135   16.92523504 3.536587e-02 8.475294e-02 58.52282 -78.55991 #> 353  137.0096655 135    2.00966551 4.986118e-04 1.229771e-03 57.46347 -76.10664 #> 354  142.2007702 135    7.20077016 6.401369e-03 1.571176e-02 57.88446 -78.67700 #> 355  128.6534018 135   -6.34659822 4.972754e-03 1.221968e-02 57.63639 -78.16057 #> 356  105.1519382 135  -29.84806181 1.099885e-01 2.477070e-01 58.68079 -81.23366 #> 357  134.5184873 135   -0.48151271 2.862401e-05 7.062525e-05 58.42783 -80.88596 #> 358  147.9928868 135   12.99288681 2.084137e-02 5.054857e-02 58.18819 -80.34761 #> 359  125.4278584 135   -9.57214163 1.131184e-02 2.765214e-02 57.31530 -78.80512 #> 360  136.2898764 135    1.28987635 2.054051e-04 5.067311e-04 58.12750 -81.53163 #> 361  137.6723086 135    2.67230862 8.816337e-04 2.173767e-03 57.95477 -81.07743 #> 362  174.0602558 135   39.06025575 1.883585e-01 3.970731e-01 58.20747 -81.82474 #> 363  154.6599591 135   19.65995914 4.771778e-02 1.131900e-01 56.97050 -78.72464 #> 364  147.0950779 135   12.09507791 1.806061e-02 4.390473e-02 57.05120 -79.58188 #> 365   88.7943667 135  -46.20563333 2.635754e-01 5.210361e-01 57.08711 -80.04355 #> 366  105.5784791 135  -29.42152089 1.068674e-01 2.413079e-01 57.05800 -80.42432 #> 367  142.5099155 135    7.50991551 6.962819e-03 1.708191e-02 56.72915 -79.18207 #> 368  150.7448385 135   15.74483847 3.060493e-02 7.363286e-02 58.08363 -74.42607 #> 369  143.6646318 135    8.66463181 9.268623e-03 2.269560e-02 58.07936 -74.55777 #> 370  125.6039230 135   -9.39607705 1.089954e-02 2.665331e-02 58.59128 -80.59909 #> 371  135.3148559 135    0.31485592 1.223880e-05 3.019771e-05 57.09583 -80.82291 #> 372  173.1096766 135   38.10967661 1.793022e-01 3.808973e-01 57.24079 -82.66440 #> 373  153.5954848 135   18.59548484 4.269038e-02 1.016874e-01 57.22427 -81.88394 #> 374  175.5323336 135   40.53233358 2.028235e-01 4.223402e-01 58.43469 -77.67003 #> 375  118.9186732 135  -16.08132678 3.192705e-02 7.672984e-02 57.29490 -78.02201 #> 376  164.9136462 135   29.91364617 1.104724e-01 2.486959e-01 57.19393 -83.03097 #> 377  130.4541214 135   -4.54587855 2.551236e-03 6.281725e-03 58.42715 -77.80108 #> 378  122.2247885 135  -12.77521150 2.014889e-02 4.889697e-02 56.95089 -81.10405 #> 379   14.7147224 135 -120.28527761 4.402282e-01 7.456757e-01 57.66276 -91.02055 #> 380  153.7436148 135   18.74361485 4.337322e-02 1.032555e-01 57.20037 -81.66354 #> 381  142.1374328 135    7.13743277 6.289253e-03 1.543800e-02 56.58057 -83.25449 #> 382  161.9003993 135   26.90039925 8.933722e-02 2.047028e-01 57.00406 -81.58915 #> 383   56.5936741 135  -78.40632589 7.589570e-01 9.596112e-01 62.53564 -69.72308 #> 384  167.7993608 135   32.79936079 1.328146e-01 2.934376e-01 58.34835 -77.31801 #> 385  134.1974447 135   -0.80255534 7.951791e-05 1.961897e-04 57.91335 -80.26887 #> 386  143.1221096 135    8.12210956 8.144279e-03 1.996096e-02 56.80834 -89.69253 #> 387  169.8386395 135   34.83863952 1.498433e-01 3.263462e-01 57.18117 -83.16644 #> 388  132.7886735 135   -2.21132651 6.036994e-04 1.488829e-03 57.85651 -80.98060 #> 389    3.9972916 135 -131.00270835 2.963870e-01 5.695397e-01 57.13449 -82.95101 #> 390  169.8119433 135   34.81194334 1.496138e-01 3.259094e-01 57.19215 -83.19960 #> 391  128.4191462 135   -6.58085382 5.346622e-03 1.313435e-02 59.83234 -87.47639 #> 392  140.1338130 135    5.13381298 3.253832e-03 8.007045e-03 57.28061 -79.31558 #> 393  133.8776566 135   -1.12234337 1.555129e-04 3.836637e-04 58.35560 -77.18700 #> 394  132.3121993 135   -2.68780066 8.918855e-04 2.199025e-03 58.45055 -78.00696 #> 395  137.1992689 135    2.19926892 5.971338e-04 1.472645e-03 57.00815 -81.09338 #> 396  127.2171830 135   -7.78281700 7.478054e-03 1.833815e-02 57.02166 -81.05148 #> 397   11.9310274 135 -123.06897259 4.001410e-01 7.022680e-01 56.99873 -81.54368 #> 398  122.2086781 135  -12.79132190 2.019974e-02 4.901831e-02 57.04075 -81.04792 #> 399   22.3065605 135 -112.69343946 5.592806e-01 8.511580e-01 57.13429 -80.80136 #> 400  135.3022738 135    0.30227378 1.128018e-05 2.783246e-05 58.12994 -81.50943 #> 401  111.9513979 135  -23.04860209 6.558495e-02 1.532815e-01 54.79221 -66.52546 #> 402  153.4514961 135   18.45149613 4.203182e-02 1.001733e-01 60.98074 -83.19241 #> 403  155.2848525 135   20.28485252 5.079941e-02 1.201924e-01 60.27499 -81.08872 #> 404  150.2587026 135   15.25870261 2.874420e-02 6.926253e-02 62.09931 -79.42806 #> 405   52.5263137 135  -82.47368632 8.397418e-01 9.828438e-01 66.80636 -78.87857 #> 406  122.0296749 135  -12.97032510 2.076905e-02 5.037617e-02 57.94755 -77.28823 #> 407  116.8139607 135  -18.18603932 4.083111e-02 9.740856e-02 57.75279 -77.80116 #> 408  126.1578872 135   -8.84211284 9.652217e-03 2.362743e-02 57.45935 -79.11892 #> 409  112.4026605 135  -22.59733952 6.304194e-02 1.476499e-01 56.93726 -80.82343 #> 410   99.0541204 135  -35.94587956 1.595193e-01 3.445934e-01 58.72856 -84.51298 #> 411  164.1836542 135   29.18365417 1.051464e-01 2.377641e-01 57.16387 -79.33703 #> 412   74.4711742 135  -60.52882579 4.523134e-01 7.579502e-01 63.06172 -72.42366 #> 413  109.0603110 135  -25.93968902 8.307006e-02 1.913405e-01 55.93624 -62.39722 #> 414  141.0603110 135    6.06031098 4.534243e-03 1.114614e-02 55.93624 -62.39722 #> 415  102.2190378 135  -32.78096219 1.326656e-01 2.931452e-01 54.80362 -56.17234 #> 416  138.9513979 135    3.95139791 1.927598e-03 4.748622e-03 54.79221 -66.52546 #> 417  163.4214690 135   28.42146900 9.972591e-02 2.265320e-01 54.76868 -65.75303 #> 418  111.5713623 135  -23.42863773 6.776556e-02 1.580910e-01 56.54355 -66.09599 #> 419  108.2828975 135  -26.71710250 8.812390e-02 2.021273e-01 56.16182 -63.53769 #> 420  139.2828975 135    4.28289750 2.264594e-03 5.577262e-03 56.16182 -63.53769 #> 421  140.4388081 135    5.43880810 3.651930e-03 8.983744e-03 56.11345 -63.31120 #> 422   99.6108326 135  -35.38916743 1.546164e-01 3.353881e-01 54.39376 -55.70635 #> 423  116.4306344 135  -18.56936556 4.257054e-02 1.014120e-01 55.84837 -61.84148 #> 424  139.4306344 135    4.43063444 2.423521e-03 5.967889e-03 55.84837 -61.84148 #> 425  138.6178744 135    3.61787438 1.615928e-03 3.981846e-03 55.83262 -61.54513 #> 426  126.0341549 135   -8.96584509 9.924244e-03 2.428787e-02 55.70380 -60.93456 #> 427  109.0992776 135  -25.90072243 8.282067e-02 1.908057e-01 54.67807 -58.05670 #> 428   98.0402871 135  -36.95971290 1.686445e-01 3.615056e-01 56.46264 -67.01008 #> 429  118.3162770 135  -16.68372304 3.436378e-02 8.241975e-02 55.47427 -63.86774 #> 430   61.8681831 135  -73.13181687 6.602793e-01 9.158009e-01 58.75520 -84.78047 #> 431  165.0866851 135   30.08668509 1.117542e-01 2.513114e-01 56.40505 -86.85729 #> 432  104.5148290 135  -30.48517100 1.147340e-01 2.573689e-01 56.39275 -87.82897 #> 433  149.5511919 135   14.55119194 2.614039e-02 6.312401e-02 58.16210 -76.27269 #> 434  151.4173114 135   16.41731143 3.327508e-02 7.988045e-02 56.44219 -86.26468 #> 435  158.9115097 135   23.91150966 7.058769e-02 1.642885e-01 56.18412 -82.33958 #> 436  145.0716515 135   10.07165149 1.252323e-02 3.058287e-02 57.34592 -80.99176 #> 437  158.6393940 135   23.63939397 6.899024e-02 1.607841e-01 57.24574 -86.71106 #> 438  146.5939405 135   11.59394053 1.659499e-02 4.039068e-02 57.23972 -81.87194 #> 439  136.2801132 135    1.28011324 2.023074e-04 4.990904e-04 56.21787 -81.68970 #> 440  135.9144766 135    0.91447658 1.032429e-04 2.547200e-04 56.99941 -81.57030 #> 441  161.4731918 135   26.47319180 8.652221e-02 1.987189e-01 57.19028 -87.04273 #> 442  148.6881462 135   13.68814624 2.313152e-02 5.599714e-02 56.98037 -81.96094 #> 443  147.1076815 135   12.10768155 1.809827e-02 4.399492e-02 57.11933 -81.14151 #> 444  177.6041395 135   42.60413946 2.240880e-01 4.582331e-01 56.93872 -78.84399 #> 445  147.9751700 135   12.97517001 2.078457e-02 5.041317e-02 56.79741 -81.65830 #> 446  144.1328023 135    9.13280228 1.029729e-02 2.519310e-02 57.16731 -81.05609 #> 447  174.9157935 135   39.91579350 1.967001e-01 4.117289e-01 57.02983 -81.53981 #> 448    0.3156904 135 -134.68430964 2.535200e-01 5.055097e-01 56.17380 -81.67094 #> 449   10.0022331 135 -124.99776693 3.734871e-01 6.710467e-01 56.69584 -80.05130 #> 450  101.2535583 135  -33.74644167 1.405953e-01 3.086009e-01 57.71845 -72.28509 #> 451  163.6488001 135   28.64880011 1.013276e-01 2.298622e-01 55.77124 -81.48170 #> 452    1.3337400 135 -133.66626000 2.650389e-01 5.232697e-01 57.08353 -80.80315 #> 453  176.9471514 135   41.94715145 2.172301e-01 4.468185e-01 57.05747 -81.46253 #> 454  144.6309830 135    9.63098297 1.145134e-02 2.798993e-02 56.93015 -78.80728 #> 455  141.2545507 135    6.25455068 4.829556e-03 1.186919e-02 56.57073 -79.74446 #> 456   14.4537492 135 -120.54625076 4.363887e-01 7.416985e-01 56.69485 -84.27939 #> 457  138.9387857 135    3.93878567 1.915313e-03 4.718405e-03 56.94021 -81.58537 #> 458   90.7018246 135  -44.29817540 2.422628e-01 4.877521e-01 54.59597 -60.39465 #> 459  113.7598661 135  -21.24013393 5.569670e-02 1.312450e-01 64.38452 -79.46341 #> 460  163.4253497 135   28.42534971 9.975315e-02 2.265887e-01 60.91414 -65.13952 #> 461   11.3149806 135 -123.68501937 3.915280e-01 6.923890e-01 57.11520 -80.80500 #> 462  166.1404455 135   31.14044548 1.197194e-01 2.674313e-01 57.08826 -79.47461 #> 463    3.4413603 135 -131.55863967 2.896994e-01 5.599187e-01 56.16509 -81.46817 #> 464  166.6540834 135   31.65408343 1.237014e-01 2.754042e-01 57.13218 -88.45253 #> 465  176.6374060 135   41.63740600 2.140338e-01 4.414463e-01 57.37381 -83.30883 #> 466    2.9557084 135 -132.04429159 2.839197e-01 5.514954e-01 56.48984 -83.64562 #> 467  116.6570651 135  -18.34293492 4.153867e-02 9.903850e-02 57.43216 -81.58843 #> 468   74.2346807 135  -60.76531928 4.558548e-01 7.614772e-01 61.71573 -73.85637 #> 469   99.0470904 135  -35.95290957 1.595817e-01 3.447101e-01 58.16478 -73.87963 #> 470  140.0831041 135    5.08310412 3.189870e-03 7.850061e-03 57.04293 -81.25242 #> 471  169.3881335 135   34.38813351 1.459931e-01 3.189946e-01 57.35759 -88.64064 #> 472    3.0023780 135 -131.99762200 2.844726e-01 5.523055e-01 56.35288 -87.05391 #> 473  167.8111296 135   32.81112961 1.329099e-01 2.936247e-01 56.47653 -83.89999 #> 474  178.1503888 135   43.15038878 2.298711e-01 4.677406e-01 57.43942 -84.03984 #> 475  147.2343806 135   12.23438063 1.847902e-02 4.490638e-02 57.76173 -70.67948 #> 476  151.9599475 135   16.95994754 3.551109e-02 8.509072e-02 57.00936 -78.19850 #> 477    5.0250253 135 -129.97497470 3.089510e-01 5.872542e-01 57.30484 -87.65538 #> 478  160.9263099 135   25.92630995 8.298439e-02 1.911568e-01 57.16075 -87.97348 #> 479  178.1187803 135   43.11878033 2.295345e-01 4.671901e-01 57.36879 -84.16161 #> 480  158.4721620 135   23.47216203 6.801758e-02 1.586456e-01 57.12217 -87.11693 #> 481  164.6833521 135   29.68335215 1.087779e-01 2.452292e-01 57.20636 -83.39680 #> 482    5.9495202 135 -129.05047981 3.204758e-01 6.030939e-01 57.22131 -86.22766 #> 483  147.4349561 135   12.43495610 1.908989e-02 4.636751e-02 56.94852 -82.40849 #> 484  171.2882661 135   36.28826607 1.625726e-01 3.502842e-01 56.21297 -81.68058 #> 485   15.1460131 135 -119.85398689 4.466102e-01 7.522037e-01 56.75079 -79.76449 #> 486  176.0806602 135   41.08066023 2.083482e-01 4.318078e-01 57.20060 -82.75052 #> 487  165.5873965 135   30.58739646 1.155048e-01 2.589304e-01 57.21757 -83.54327 #> 488    2.4907844 135 -132.50921558 2.784413e-01 5.434176e-01 57.01755 -82.25098 #> 489  171.3617866 135   36.36178664 1.632320e-01 3.515090e-01 56.21548 -81.55502 #> 490  117.4191462 135  -17.58085382 3.815882e-02 9.123502e-02 59.83234 -87.47639 #> 491  133.2445148 135   -1.75548520 3.804603e-04 9.384544e-04 58.53094 -81.22659 #> 492  125.2434344 135   -9.75656560 1.175192e-02 2.871752e-02 58.53532 -81.22423 #> 493  135.2445148 135    0.24451480 7.381171e-06 1.821220e-05 58.53094 -81.22659 #> 494  153.2258251 135   18.22582510 4.100996e-02 9.782074e-02 56.84555 -84.50719 #> 495  172.0007294 135   37.00072940 1.690190e-01 3.621936e-01 57.14956 -82.93084 #> 496  152.4784040 135   17.47840397 3.771538e-02 9.020790e-02 57.11212 -82.18182 #> 497  164.7928291 135   29.79282910 1.095818e-01 2.468752e-01 56.90301 -81.86091 #> 498  120.2141194 135  -14.78588064 2.699040e-02 6.513087e-02 57.11258 -80.97298 #> 499  108.2570166 135  -26.74298337 8.829471e-02 2.024902e-01 57.53207 -78.89399 #> 500  165.9868087 135   30.98680869 1.185410e-01 2.650610e-01 56.94608 -83.15029 #> 501  100.3005781 135  -34.69942191 1.486481e-01 3.240697e-01 58.00100 -75.20324 #> 502  169.4393190 135   34.43931899 1.464280e-01 3.198277e-01 56.40926 -84.58812 #> 503    9.5054829 135 -125.49451710 3.667713e-01 6.628746e-01 57.00976 -82.23415 #> 504  150.3096673 135   15.30966735 2.893653e-02 6.971490e-02 58.55451 -81.10095 #> 505    5.5549108 135 -129.44508923 3.155307e-01 5.963451e-01 57.73640 -78.23381 #> 506  165.9846123 135   30.98461228 1.185242e-01 2.650271e-01 57.17297 -87.86435 #> 507    8.3342911 135 -126.66570885 3.511786e-01 6.434176e-01 57.39112 -85.42172 #> 508  144.7366962 135    9.73669616 1.170411e-02 2.860180e-02 56.95365 -78.61309 #> 509  126.0732362 135   -8.92676385 9.837915e-03 2.407831e-02 56.49050 -80.11709 #> 510  142.2228502 135    7.22285015 6.440687e-03 1.580775e-02 57.04122 -81.02418 #> 511  172.6049523 135   37.60495229 1.745843e-01 3.723607e-01 57.22674 -86.78765 #> 512  154.7082112 135   19.70821116 4.795229e-02 1.137242e-01 57.24381 -86.60016 #> 513  155.8552162 135   20.85521615 5.369630e-02 1.267415e-01 56.95001 -81.71402 #> 514  152.5072238 135   17.50722383 3.783986e-02 9.049631e-02 57.21937 -82.03320 #> 515  168.1325065 135   33.13250649 1.355263e-01 2.987466e-01 56.19568 -80.28201 #> 516   19.4114208 135 -115.58857918 5.122014e-01 8.134572e-01 55.83210 -81.82704 #> 517    4.3094416 135 -130.69055844 3.001754e-01 5.749306e-01 55.84798 -81.98470 #> 518  149.4902067 135   14.49020666 2.592174e-02 6.260731e-02 57.05119 -77.29366 #> 519  108.2029055 135  -26.79709449 8.865238e-02 2.032497e-01 57.82656 -88.42528 #> 520  154.5684720 135   19.56847197 4.727470e-02 1.121802e-01 64.57625 -82.35469 #> 521  150.4248514 135   15.42485142 2.937359e-02 7.074231e-02 63.74769 -69.06308 #> 522  135.8467075 135    0.84670749 8.850785e-05 2.183685e-04 63.61943 -80.06097 #> 523  137.2277947 135    2.22779466 6.127246e-04 1.511076e-03 58.69351 -82.68730 #> 524   69.2002128 135  -65.79978721 5.345200e-01 8.319603e-01 62.16523 -73.54300 #> 525  127.8599176 135   -7.14008238 6.293923e-03 1.544941e-02 57.51802 -74.68539 #> 526  138.3903408 135    3.39034084 1.419063e-03 3.497313e-03 58.45822 -77.87593 #> 527  152.0050307 135   17.00503068 3.570013e-02 8.553032e-02 56.71332 -80.03104 #> 528  146.7451177 135   11.74511773 1.703059e-02 4.143599e-02 56.92225 -78.62637 #> 529  142.6571910 135    7.65719096 7.238589e-03 1.775442e-02 56.94097 -82.04905 #> 530  148.0801557 135   13.08015566 2.112228e-02 5.121801e-02 56.04296 -82.18900 #> 531  126.8736832 135   -8.12631684 8.152719e-03 1.998150e-02 57.15296 -78.21693 #> 532  134.9579050 135   -0.04209499 2.187640e-07 5.397784e-07 56.78967 -81.69409 #> 533  137.1930037 135    2.19300371 5.937365e-04 1.464271e-03 57.03506 -81.07893 #> 534  148.1054013 135   13.10540126 2.120389e-02 5.141244e-02 57.12118 -81.14354 #> 535  152.4215189 135   17.42151891 3.747029e-02 8.963986e-02 56.90170 -80.82482 #> 536  179.8487560 135   44.84875596 2.483223e-01 4.973603e-01 55.92301 -82.69263 #> 537    3.2003019 135 -131.79969808 2.868233e-01 5.557397e-01 56.96299 -81.13326 #> 538  145.1330105 135   10.13301052 1.267628e-02 3.095274e-02 57.36089 -80.87780 #> 539    4.1133021 135 -130.88669788 2.977922e-01 5.715443e-01 56.91003 -82.97626 #> 540  156.9791448 135   21.97914483 5.963985e-02 1.400773e-01 56.69786 -80.08772 #> 541  162.7655456 135   27.76554557 9.517599e-02 2.170205e-01 57.28288 -79.91529 #> 542    2.8305297 135 -132.16947030 2.824395e-01 5.493217e-01 58.70719 -84.88890 #> 543   78.8682989 135  -56.13170113 3.889837e-01 6.894326e-01 58.75585 -84.77962 #> 544  124.2442083 135  -10.75579175 1.428235e-02 3.482827e-02 58.53119 -81.22685 #> 545  136.2442083 135    1.24420825 1.911178e-04 4.714901e-04 58.53119 -81.22685 #> 546  172.1014918 135   37.10149184 1.699408e-01 3.638849e-01 57.30012 -87.53517 #> 547  171.2845696 135   36.28456958 1.625395e-01 3.502226e-01 57.10777 -80.86172 #> 548  171.3705884 135   36.37058837 1.633111e-01 3.516557e-01 56.73157 -81.06474 #> 549  179.5150269 135   44.51502689 2.446404e-01 4.915360e-01 57.42836 -83.45550 #> 550  153.5967092 135   18.59670921 4.269600e-02 1.017003e-01 56.92334 -87.12319 #> 551  173.4850630 135   38.48506296 1.828519e-01 3.872705e-01 56.36700 -84.55377 #> 552  150.8218467 135   15.82184671 3.090504e-02 7.433645e-02 56.63636 -82.06321 #> 553  169.4079060 135   34.40790597 1.461610e-01 3.193164e-01 56.35670 -84.69332 #> 554    5.3556429 135 -129.64435710 3.130482e-01 5.929301e-01 56.98677 -80.85561 #> 555   17.1398633 135 -117.86013670 4.767114e-01 7.816169e-01 57.04897 -79.51032 #> 556   75.0084431 135  -59.99155687 4.443194e-01 7.498724e-01 57.46053 -80.98935 #> 557  168.8967021 135   33.89670214 1.418502e-01 3.110263e-01 56.90987 -83.33421 #> 558  148.3097341 135   13.30973412 2.187025e-02 5.299898e-02 58.55513 -81.10027 #> 559  151.7379685 135   16.73796852 3.458760e-02 8.294123e-02 56.21400 -82.60251 #> 560  150.2083579 135   15.20835794 2.855483e-02 6.881700e-02 56.54006 -79.84836 #> 561  125.2390753 135   -9.76092467 1.176243e-02 2.874294e-02 58.51542 -81.24975 #> 562  173.2401662 135   38.24016619 1.805321e-01 3.831104e-01 59.05548 -85.46364 #> 563    1.0581952 135 -133.94180483 2.618960e-01 5.184648e-01 60.50445 -78.16683 #> 564  147.6095576 135   12.60955757 1.962975e-02 4.765752e-02 59.38025 -84.55317 #> 565  163.6073880 135   28.60738802 1.010349e-01 2.292543e-01 59.73632 -85.74431 #> 566  152.2330167 135   17.23301674 3.666381e-02 8.776909e-02 61.68018 -84.31053 #> 567  150.6113865 135   15.61138646 3.008832e-02 7.242085e-02 63.39714 -80.60932 #> 568  152.5258368 135   17.52583678 3.792036e-02 9.068279e-02 63.82044 -80.32836 #> 569    3.0753175 135 -131.92468249 2.853378e-01 5.535714e-01 61.13839 -80.59498 #> 570  156.9969896 135   21.99698958 5.973673e-02 1.402936e-01 62.38235 -79.55181 #> 571  171.4686188 135   36.46861881 1.641926e-01 3.532905e-01 61.28913 -81.36361 #> 572  155.8559034 135   20.85590343 5.369984e-02 1.267495e-01 61.26967 -85.29329 #> 573  138.3819547 135    3.38195468 1.412052e-03 3.480053e-03 58.83268 -88.62675 #> 574  137.2774450 135    2.27744500 6.403402e-04 1.579144e-03 59.55746 -87.99386 #> 575  122.1702429 135  -12.82975715 2.032132e-02 4.930839e-02 56.77751 -89.64748 #> 576  109.5014808 135  -25.49851918 8.026845e-02 1.853197e-01 58.63401 -88.65754 #> 577  127.0967143 135   -7.90328566 7.711349e-03 1.890662e-02 58.75325 -81.25341 #> 578  152.4480683 135   17.44806834 3.758458e-02 8.990477e-02 60.23087 -80.87996 #> 579  148.5845068 135   13.58450679 2.278257e-02 5.516828e-02 57.61335 -81.53718 #> 580  167.3330663 135   32.33306634 1.290651e-01 2.860539e-01 56.98154 -80.89757 #> 581  119.0783374 135  -15.92166261 3.129621e-02 7.525301e-02 57.40161 -90.73203 #> 582  173.3788593 135   38.37885933 1.818441e-01 3.854654e-01 57.14855 -83.95357 #> 583  147.9541543 135   12.95415433 2.071730e-02 5.025279e-02 56.93405 -78.27246 #> 584  108.0909445 135  -26.90905555 8.939472e-02 2.048247e-01 53.89241 -56.77092 #> 585   71.3887240 135  -63.61127595 4.995549e-01 8.024563e-01 65.35651 -80.45134 #> 586   96.5076949 135  -38.49230509 1.829207e-01 3.873936e-01 64.46661 -78.33258 #> 587   47.2303527 135  -87.76964733 9.510507e-01 9.984855e-01 65.86986 -77.43199 #> 588  111.0739299 135  -23.92607011 7.067368e-02 1.644769e-01 58.77807 -81.26625 #> 589  160.8932636 135   25.89326355 8.277297e-02 1.907034e-01 56.80500 -86.75739 #> 590  141.6869898 135    6.68698979 5.520473e-03 1.355949e-02 56.90752 -86.99064 #> 591  144.4171120 135    9.41711202 1.094839e-02 2.677170e-02 56.95217 -87.38937 #> 592  131.5302040 135   -3.46979595 1.486356e-03 3.662955e-03 56.95274 -87.20181 #> 593  172.7588390 135   37.75883896 1.760160e-01 3.749594e-01 56.53158 -83.93308 #> 594  162.8012107 135   27.80121068 9.542066e-02 2.175339e-01 58.36695 -77.29929 #> 595  131.7781031 135   -3.22189687 1.281558e-03 3.158786e-03 57.73850 -76.25649 #> 596  124.8592376 135  -10.14076244 1.269569e-02 3.099962e-02 57.83206 -76.04913 #> 597  116.9791211 135  -18.02087889 4.009285e-02 9.570580e-02 57.79607 -75.88535 #> 598  117.9796613 135  -17.02033874 3.576444e-02 8.567982e-02 57.82297 -75.86261 #> 599  106.0076632 135  -28.99233684 1.037723e-01 2.349270e-01 57.80498 -75.83213 #> 600  106.8166033 135  -28.18339666 9.806220e-02 2.230629e-01 57.81220 -76.13403 #> 601  137.8163778 135    2.81637781 9.792573e-04 2.414275e-03 57.83462 -76.11605 #> 602  122.7823827 135  -12.21761728 1.842842e-02 4.478528e-02 57.80706 -76.19338 #> 603  123.7468095 135  -11.25319052 1.563386e-02 3.808155e-02 57.79230 -76.26282 #> 604  153.7073406 135   18.70734057 4.320551e-02 1.028705e-01 57.63908 -76.45252 #> 605  169.6909542 135   34.69095425 1.485756e-01 3.239314e-01 57.72942 -76.40461 #> 606  146.8043094 135   11.80430940 1.720268e-02 4.184875e-02 57.74621 -76.20789 #> 607  137.6412157 135    2.64121572 8.612371e-04 2.123513e-03 57.77289 -76.44904 #> 608  126.5685520 135   -8.43144805 8.776459e-03 2.149918e-02 57.76564 -76.57223 #> 609  127.5220317 135   -7.47796829 6.903705e-03 1.693771e-02 57.80330 -76.61608 #> 610  138.6360477 135    3.63604768 1.632203e-03 4.021896e-03 57.09295 -75.38541 #> 611  162.7225707 135   27.72257067 9.488160e-02 2.164025e-01 57.05926 -83.47587 #> 612  143.4523592 135    8.45235918 8.820046e-03 2.160518e-02 56.93383 -84.04475 #> 613  175.1597666 135   40.15976661 1.991120e-01 4.159233e-01 57.08444 -86.02437 #> 614    3.9358377 135 -131.06416231 2.956440e-01 5.684774e-01 57.22031 -86.25117 #> 615   14.2310940 135 -120.76890604 4.331262e-01 7.382893e-01 57.63472 -90.21504 #> 616  100.8360977 135  -34.16390234 1.440953e-01 3.153521e-01 57.54912 -90.95570 #> 617  162.6057650 135   27.60576505 9.408374e-02 2.147258e-01 56.99864 -83.72769 #> 618    2.2440688 135 -132.75593116 2.755558e-01 5.391263e-01 56.16743 -81.79705 #> 619  139.3585417 135    4.35854173 2.345295e-03 5.775629e-03 56.73963 -86.05342 #> 620  135.0851954 135    0.08519538 8.960805e-07 2.210988e-06 56.72849 -86.51922 #> 621  145.9635527 135   10.96355272 1.483944e-02 3.617015e-02 56.75627 -83.37289 #> 622  127.2791677 135   -7.72083232 7.359414e-03 1.804898e-02 57.85521 -75.35454 #> 623  173.0091188 135   38.00911885 1.783572e-01 3.791935e-01 61.58218 -74.30225 #> 624   77.5919293 135  -57.40807072 4.068749e-01 7.098539e-01 61.05607 -73.85321 #> 625  163.0886728 135   28.08867276 9.740414e-02 2.216879e-01 61.03000 -80.67661 #> 626  152.5448321 135   17.54483209 3.800261e-02 9.087328e-02 60.03307 -87.06721 #> 627  125.2937569 135   -9.70624310 1.163101e-02 2.842488e-02 59.32024 -83.54462 #> 628   30.7936784 135 -104.20632163 7.092200e-01 9.397718e-01 59.86656 -80.68822 #> 629  141.2417645 135    6.24176450 4.809830e-03 1.182091e-02 56.05960 -85.27242 #> 630  121.5386118 135  -13.46138817 2.237148e-02 5.419120e-02 56.15472 -84.67611 #> 631  175.9368517 135   40.93685167 2.068921e-01 4.293222e-01 56.29796 -80.51733 #> 632  130.5955891 135   -4.40441087 2.394918e-03 5.897593e-03 57.03955 -67.36673 #> 633  135.7830320 135    0.78303202 7.569619e-05 1.867612e-04 55.39602 -55.00817 #> 634  119.5335638 135  -15.46643622 2.953218e-02 7.111494e-02 55.32261 -57.05826 #> 635  135.5077682 135    0.50776823 3.183069e-05 7.853702e-05 56.52477 -59.75213 #> 636  130.5307753 135   -4.46922468 2.465922e-03 6.072089e-03 56.58010 -59.68735 #> 637  126.2337377 135   -8.76626235 9.487328e-03 2.322695e-02 56.96731 -67.99832 #> 638  129.4896166 135   -5.51038341 3.748682e-03 9.221020e-03 56.92729 -64.38210 #> 639  126.9888833 135   -8.01111673 7.923209e-03 1.942267e-02 56.82849 -62.02910 #> 640  131.6551734 135   -3.34482660 1.381218e-03 3.404149e-03 56.65590 -61.05242 #> 641  166.2329468 135   31.23294685 1.204317e-01 2.688617e-01 57.71066 -70.71800 #> 642  154.2052050 135   19.20520502 4.553579e-02 1.082097e-01 57.83956 -70.67099 #> 643  139.1952407 135    4.19524072 2.172845e-03 5.351706e-03 56.22375 -57.19329 #> 644  159.1781815 135   24.17818149 7.217092e-02 1.677522e-01 56.35107 -58.76295 #> 645  133.0831016 135   -1.91689841 4.536419e-04 1.118899e-03 55.99949 -57.47690 #> 646  137.1622217 135    2.16222169 5.771855e-04 1.423472e-03 56.27434 -57.22275 #> 647  113.3387487 135  -21.66125130 5.792714e-02 1.362483e-01 56.88408 -72.76432 #> 648  117.1861178 135  -17.81388224 3.917709e-02 9.359071e-02 57.82113 -85.22281 #> 649  145.3289288 135   10.32892884 1.317121e-02 3.214812e-02 59.34175 -83.46837 #> 650  149.7841047 135   14.78410473 2.698392e-02 6.511557e-02 60.11246 -86.61582 #> 651  143.9450580 135    8.94505805 9.878279e-03 2.417629e-02 56.10023 -84.04572 #> 652  164.8537943 135   29.85379430 1.100307e-01 2.477934e-01 59.48755 -82.50680 #> 653  160.3634902 135   25.36349023 7.942057e-02 1.834918e-01 63.62246 -67.80125 #> 654  167.0784130 135   32.07841305 1.270401e-01 2.820453e-01 62.95165 -68.70475 #> 655  156.1631418 135   21.16314184 5.529365e-02 1.303389e-01 64.00431 -69.24641 #> 656  173.8469326 135   38.84693258 1.863067e-01 3.934325e-01 63.10892 -68.92667 #> 657  158.6629794 135   23.66297938 6.912797e-02 1.610867e-01 63.18255 -80.73991 #> 658  159.0990430 135   24.09904300 7.169924e-02 1.667213e-01 57.89330 -85.28979 #> 659  120.8148369 135  -14.18516308 2.484183e-02 6.005261e-02 57.70008 -76.22869 #> 660  165.2368257 135   30.23682574 1.128723e-01 2.535881e-01 57.09457 -87.53397 #> 661  143.2939974 135    8.29399736 8.492641e-03 2.080879e-02 57.00825 -87.53254 #> 662  122.8991507 135  -12.10084934 1.807785e-02 4.394602e-02 56.59195 -85.30574 #> 663  127.6802735 135   -7.31972647 6.614617e-03 1.623231e-02 58.81686 -86.59500 #> 664  126.5517926 135   -8.44820742 8.811384e-03 2.158411e-02 58.55768 -85.48446 #> 665  154.1919283 135   19.19192828 4.547285e-02 1.080658e-01 59.05505 -83.96787 #> 666  143.2719551 135    8.27195509 8.447561e-03 2.069910e-02 58.52521 -84.37183 #> 667  172.1803123 135   37.18031231 1.706637e-01 3.652092e-01 58.49710 -82.95324 #> 668  150.4013637 135   15.40136365 2.928420e-02 7.053224e-02 58.46911 -81.03441 #> 669  138.8114400 135    3.81144003 1.793466e-03 4.418677e-03 58.07968 -74.32262 #> 670  139.4886028 135    4.48860276 2.487352e-03 6.124751e-03 62.62628 -69.80980 #> 671   82.9574873 135  -52.04251274 3.343732e-01 6.216808e-01 61.87102 -74.14280 #> 672  126.8519103 135   -8.14808972 8.196465e-03 2.008800e-02 61.76811 -77.36395 #> 673  163.7567626 135   28.75676256 1.020928e-01 2.314497e-01 62.35394 -74.04404 #> 674  161.4692040 135   26.46920402 8.649614e-02 1.986634e-01 60.60527 -74.40366 #> 675  132.5352366 135   -2.46476338 7.500072e-04 1.849427e-03 58.80776 -71.03810 #> 676  116.0167927 135  -18.98320729 4.448916e-02 1.058142e-01 64.39352 -81.90750 #> 677  148.8043094 135   13.80430940 2.352580e-02 5.693306e-02 57.74621 -76.20789 #> 678  118.8654972 135  -16.13450277 3.213854e-02 7.722461e-02 57.73789 -76.11598 #> 679  112.3035026 135  -22.69649736 6.359642e-02 1.488799e-01 57.97609 -89.70961 #> 680  135.3970423 135    0.39704232 1.946205e-05 4.801992e-05 64.52644 -82.64399 #> 681  128.4427420 135   -6.55725796 5.308350e-03 1.304074e-02 64.87222 -80.84435 #> 682  134.0330245 135   -0.96697548 1.154372e-04 2.848029e-04 56.73575 -86.59830 #> 683   52.6635911 135  -82.33640893 8.369487e-01 9.822161e-01 62.34254 -75.66487 #> 684  114.6320249 135  -20.36797514 5.121659e-02 1.211375e-01 59.98847 -86.98117 #> 685  149.8647265 135   14.86472652 2.727902e-02 6.581165e-02 63.66492 -79.99223 #> 686    4.6648200 135 -130.33517995 3.045178e-01 5.810572e-01 51.34628 -83.80554 #> 687  144.4537958 135    9.45379581 1.103386e-02 2.697878e-02 58.44535 -80.97289 #> 688  145.4421861 135   10.44218608 1.346164e-02 3.284913e-02 58.25804 -81.16546 #> 689  126.0851267 135   -8.91487326 9.811724e-03 2.401472e-02 55.33374 -57.78048 #> 690  120.0924228 135  -14.90757719 2.743653e-02 6.618301e-02 55.26079 -57.80207 #> 691  137.6956868 135    2.69568680 8.971268e-04 2.211939e-03 56.38364 -59.52136 #> 692  157.0402587 135   22.04025875 5.997198e-02 1.408186e-01 56.55130 -60.48878 #> 693  141.9731794 135    6.97317942 6.003115e-03 1.473910e-02 56.52384 -57.40854 #> 694  128.0035267 135   -6.99647328 6.043289e-03 1.483725e-02 56.57900 -85.14494 #> 695  111.8825937 135  -23.11740631 6.597710e-02 1.541477e-01 58.41182 -85.10719 #> 696  136.0128652 135    1.01286525 1.266538e-04 3.124732e-04 58.49861 -84.81118 #> 697  166.3157061 135   31.31570610 1.210708e-01 2.701435e-01 55.63354 -55.65902 #> 698  137.8613460 135    2.86134599 1.010778e-03 2.491922e-03 55.47430 -54.84935 #> 699  148.1659036 135   13.16590360 2.140013e-02 5.187984e-02 56.65132 -58.63606 #> 700  149.5289587 135   14.52895870 2.606057e-02 6.293540e-02 56.71710 -67.68100 #> 701  134.8491839 135   -0.15081608 2.808085e-06 6.928657e-06 58.62800 -89.69737 #> 702  150.3338188 135   15.33381881 2.902790e-02 6.992975e-02 58.72711 -77.73428 #> 703  167.2544667 135   32.25446668 1.284383e-01 2.848148e-01 59.88027 -83.05346 #> 704  144.4988985 135    9.49889853 1.113939e-02 2.723445e-02 58.54366 -80.81001 #> 705  158.8342066 135   23.83420661 7.013203e-02 1.632899e-01 55.83043 -56.34665 #> 706  153.3563707 135   18.35637073 4.159955e-02 9.917864e-02 56.17034 -58.56433 #> 707  135.2367561 135    0.23675612 6.920181e-06 1.707476e-05 55.52223 -55.83423 #> 708  134.3929539 135   -0.60704615 4.549445e-05 1.122488e-04 55.71233 -55.50092 #> 709  137.7629120 135    2.76291205 9.424300e-04 2.323551e-03 56.24225 -61.09585 #> 710   95.3434634 135  -39.65653657 1.941532e-01 4.072788e-01 57.88004 -73.62502 #> 711  130.8804406 135   -4.11955938 2.095157e-03 5.160690e-03 57.91356 -72.73848 #> 712  147.7223931 135   12.72239307 1.998263e-02 4.850013e-02 57.69347 -73.15817 #> 713  136.7221955 135    1.72219545 3.661676e-04 9.032102e-04 57.78372 -77.92292 #> 714  135.5831322 135    0.58313221 4.198064e-05 1.035795e-04 55.17254 -53.81157 #> 715  134.6336080 135   -0.36639204 1.657323e-05 4.089224e-05 55.05091 -53.77881 #> 716  145.6927395 135   10.69273945 1.411539e-02 3.442587e-02 56.27845 -57.97273 #> 717  135.8356502 135    0.83565016 8.621126e-05 2.127027e-04 56.40164 -60.89543 #> 718  131.8196589 135   -3.18034106 1.248712e-03 3.077911e-03 56.71654 -83.65035 #> 719  131.8483695 135   -3.15163047 1.226268e-03 3.022646e-03 56.72451 -83.59491 #> 720  132.9470300 135   -2.05296998 5.203316e-04 1.283317e-03 56.67760 -83.47687 #> 721  129.4221861 135   -5.57781389 3.840989e-03 9.447358e-03 59.08162 -85.15078 #> 722  137.4232728 135    2.42327281 7.249693e-04 1.787724e-03 59.08819 -85.14233 #> 723  140.7098934 135    5.70989341 4.025047e-03 9.898572e-03 56.21051 -84.33240 #> 724  120.5055724 135  -14.49442761 2.593684e-02 6.264300e-02 56.80567 -66.04239 #> 725  141.1288527 135    6.12885267 4.637387e-03 1.139872e-02 55.15639 -71.02889 #> 726  133.6752586 135   -1.32474136 2.166592e-04 5.344899e-04 55.47388 -55.14887 #> 727  133.3017844 135   -1.69821556 3.560415e-04 8.782399e-04 54.29861 -61.20434 #> 728  139.3421132 135    4.34211316 2.327648e-03 5.732254e-03 54.22160 -61.17556 #> 729  160.4664927 135   25.46649268 8.006694e-02 1.848855e-01 55.57531 -55.44158 #> 730  172.4437887 135   37.44378875 1.730910e-01 3.696431e-01 55.48077 -55.51858 #> 731  154.0732789 135   19.07327895 4.491234e-02 1.067833e-01 56.17762 -83.75397 #> 732  134.7334701 135   -0.26652992 8.770148e-06 2.163932e-05 56.90182 -67.23156 #> 733  133.0113248 135   -1.98867524 4.882505e-04 1.204226e-03 56.69361 -86.67870 #> 734  148.4256404 135   13.42564040 2.225282e-02 5.390904e-02 58.26878 -74.78953 #> 735  152.1441896 135   17.14418960 3.628682e-02 8.689371e-02 56.76836 -89.70109 #> 736   88.2634775 135  -46.73652253 2.696670e-01 5.302895e-01 57.03610 -80.96207 #> 737  101.2397311 135  -33.76026888 1.407106e-01 3.088239e-01 55.44056 -57.48097 #> 738  102.2987499 135  -32.70125008 1.320212e-01 2.918794e-01 55.47714 -57.36877 #> 739  112.2651833 135  -22.73481665 6.381134e-02 1.493564e-01 55.57377 -57.37907 #> 740  111.2924729 135  -23.70752713 6.938850e-02 1.616587e-01 55.47158 -57.38146 #> 741  111.1236120 135  -23.87638797 7.038048e-02 1.638345e-01 55.65423 -57.57096 #> 742  122.1774410 135  -12.82255898 2.029852e-02 4.925400e-02 55.60685 -57.50574 #> 743  123.1908204 135  -11.80917960 1.721688e-02 4.188280e-02 55.53952 -57.51495 #> 744  123.1934885 135  -11.80651146 1.720910e-02 4.186415e-02 55.52605 -57.51679 #> 745  135.5053390 135    0.50533903 3.152686e-05 7.778738e-05 56.20777 -58.30704 #> 746  131.3243847 135   -3.67561530 1.667919e-03 4.109784e-03 56.23086 -60.19572 #> 747  136.0158685 135    1.01586846 1.274060e-04 3.143288e-04 55.43386 -54.61773 #> 748  136.0985756 135    1.09857555 1.489961e-04 3.675880e-04 56.24513 -58.94243 #> 749  133.4836488 135   -1.51635116 2.838668e-04 7.002497e-04 56.23686 -58.32794 #> 750  132.4055830 135   -2.59441700 8.309876e-04 2.048979e-03 55.63153 -55.51540 #> 751  127.5865054 135   -7.41349455 6.785173e-03 1.664852e-02 56.87796 -62.64751 #> 752  132.3444755 135   -2.65552452 8.705939e-04 2.146567e-03 56.32388 -61.72866 #> 753  136.6223926 135    1.62239261 3.249577e-04 8.015868e-04 55.88376 -56.66311 #> 754  134.2394793 135   -0.76052066 7.140638e-05 1.761778e-04 56.44569 -61.83298 #> 755  134.2675435 135   -0.73245648 6.623364e-05 1.634161e-04 56.40375 -61.81019 #> 756  131.2051355 135   -3.79486447 1.777901e-03 4.380383e-03 56.77283 -64.93163 #> 757  132.3785765 135   -2.62142352 8.483779e-04 2.091828e-03 55.51806 -55.60761 #> 758  135.3243847 135    0.32438470 1.299079e-05 3.205316e-05 56.23086 -60.19572 #> 759  137.4206789 135    2.42067891 7.234181e-04 1.783901e-03 56.20556 -60.05329 #> 760  141.2456506 135    6.24565062 4.815821e-03 1.183557e-02 56.27325 -60.30106 #> 761  138.5405466 135    3.54054662 1.547589e-03 3.813665e-03 54.74443 -65.56809 #> 762  141.5451883 135    6.54518833 5.288826e-03 1.299299e-02 54.76983 -65.54565 #> 763  147.3302869 135   12.33028693 1.876987e-02 4.560225e-02 56.23659 -60.18329 #> 764  144.7143932 135    9.71439320 1.165055e-02 2.847217e-02 57.54312 -70.06242 #> 765  148.2125446 135   13.21254465 2.155202e-02 5.224151e-02 56.25800 -60.36220 #> 766  142.4151947 135    7.41519465 6.788285e-03 1.665612e-02 56.82339 -69.42184 #> 767  151.1294181 135   16.12941813 3.211829e-02 7.717724e-02 56.26196 -60.49419 #> 768  149.1199160 135   14.11991603 2.461383e-02 5.951264e-02 57.03739 -69.75615 #> 769  150.1557130 135   15.15571299 2.835749e-02 6.835254e-02 57.18282 -69.59892 #> 770  162.4778253 135   27.47782532 9.321369e-02 2.128948e-01 57.89673 -73.39666 #> 771  139.3440555 135    4.34405548 2.329731e-03 5.737374e-03 56.24226 -58.54945 #> 772  129.1621316 135   -5.83786844 4.207495e-03 1.034570e-02 56.21496 -58.85498 #> 773  153.4879333 135   18.48793327 4.219798e-02 1.005555e-01 56.09873 -56.78170 #> 774  131.5010083 135   -3.49899165 1.511474e-03 3.724780e-03 56.79256 -64.44255 #> 775  155.5155928 135   20.51559283 5.196167e-02 1.228238e-01 56.81308 -64.40704 #> 776  168.6935026 135   33.69350257 1.401546e-01 3.077477e-01 55.86374 -58.16760 #> 777  130.6308180 135   -4.36918198 2.356759e-03 5.803808e-03 56.79924 -62.62002 #> 778    5.4099837 135 -129.59001635 3.137243e-01 5.938618e-01 56.18489 -58.47117 #> 779  165.8527351 135   30.85273513 1.175174e-01 2.629979e-01 55.33252 -54.92247 #> 780  141.5503026 135    6.55030262 5.297094e-03 1.301321e-02 56.81247 -64.35144 #> 781  120.7092748 135  -14.29072522 2.521294e-02 6.093105e-02 56.78580 -62.50140 #> 782  132.9335469 135   -2.06645315 5.271887e-04 1.300222e-03 55.12421 -54.87874 #> 783  179.8567715 135   44.85677153 2.484111e-01 4.975002e-01 56.60301 -62.36457 #> 784  137.3444931 135    2.34449306 6.785985e-04 1.673440e-03 56.38396 -61.69658 #> 785  125.1636039 135   -9.83639607 1.194502e-02 2.918474e-02 56.82128 -63.35880 #> 786  135.6442335 135    0.64423345 5.123910e-05 1.264221e-04 56.37673 -61.21692 #> 787  126.3088235 135   -8.69117655 9.325500e-03 2.283381e-02 56.82152 -63.12512 #> 788  134.3147584 135   -0.68524163 5.796989e-05 1.430281e-04 56.36218 -61.75621 #> 789  116.2234822 135  -18.77651775 4.352563e-02 1.036052e-01 56.18077 -63.62364 #> 790  136.1189938 135    1.11899382 1.545861e-04 3.813774e-04 56.15071 -63.81053 #> 791  139.2016713 135    4.20167131 2.179511e-03 5.368096e-03 56.16558 -63.66765 #> 792  110.0702284 135  -24.92977162 7.672759e-02 1.776682e-01 56.14786 -63.89150 #> 793  130.1388466 135   -4.86115338 2.917384e-03 7.181102e-03 56.11519 -63.79830 #> 794  125.1369029 135   -9.86309709 1.200996e-02 2.934183e-02 56.13731 -63.78897 #> 795  139.9820253 135    4.98202531 3.064269e-03 7.541744e-03 55.39186 -54.68959 #> 796  124.3466870 135  -10.65331305 1.401149e-02 3.417539e-02 56.34559 -61.71351 #> 797  126.1509269 135   -8.84907310 9.667419e-03 2.366434e-02 56.13074 -63.76985 #> 798  132.0299833 135   -2.97001669 1.089012e-03 2.684624e-03 56.77720 -63.59892 #> 799  127.4407540 135   -7.55924598 7.054593e-03 1.730575e-02 55.37959 -55.56674 #> 800  133.2953495 135   -1.70465048 3.587448e-04 8.849063e-04 56.81065 -63.15291 #> 801  145.0422872 135   10.04228724 1.245031e-02 3.040663e-02 56.45815 -62.14437 #> 802  132.4278335 135   -2.57216650 8.167951e-04 2.014008e-03 57.89129 -73.48102 #> 803  145.4517202 135   10.45172025 1.348623e-02 3.290847e-02 57.87805 -73.45281 #> 804  129.4123560 135   -5.58764404 3.854539e-03 9.480581e-03 57.89158 -73.50563 #> 805  129.4158822 135   -5.58411777 3.849675e-03 9.468656e-03 57.89790 -73.49513 #> 806  127.9821078 135   -7.01789221 6.080347e-03 1.492778e-02 56.84204 -68.48810 #> 807  108.4057017 135  -26.59429834 8.731564e-02 2.004085e-01 56.16063 -68.23988 #> 808  145.5435058 135   10.54350575 1.372414e-02 3.348244e-02 57.81872 -73.35073 #> 809  134.2199393 135   -0.78006068 7.512280e-05 1.853466e-04 59.07315 -88.61557 #> 810  140.3532355 135    5.35323551 3.537917e-03 8.704090e-03 55.72991 -57.16583 #> 811  171.3643795 135   36.36437953 1.632553e-01 3.515522e-01 57.02470 -69.36846 #> 812  120.8954357 135  -14.10456425 2.456034e-02 5.938592e-02 57.29141 -78.06290 #> 813  131.7738716 135   -3.22612844 1.284927e-03 3.167080e-03 56.35736 -61.01807 #> 814  135.8046333 135    0.80463335 7.993023e-05 1.972070e-04 56.40538 -60.94343 #> 815  156.1646029 135   21.16460288 5.530129e-02 1.303560e-01 58.69224 -78.03238 #> 816  138.7544910 135    3.75449099 1.740272e-03 4.287806e-03 55.38786 -55.05756 #> 817  135.5147720 135    0.51477202 3.271484e-05 8.071847e-05 54.81188 -55.68780 #> 818  154.2465726 135   19.24657255 4.573217e-02 1.086587e-01 58.19320 -75.13568 #> 819  141.7471734 135    6.74717335 5.620290e-03 1.380353e-02 56.13390 -57.95377 #> 820  155.8502122 135   20.85021220 5.367054e-02 1.266834e-01 55.96903 -57.86564 #> 821  142.9477381 135    7.94773811 7.798338e-03 1.911853e-02 55.89593 -57.74277 #> 822  132.6356572 135   -2.36434284 6.901379e-04 1.701881e-03 56.70981 -67.51232 #> 823  132.3168007 135   -2.68319935 8.888344e-04 2.191508e-03 57.01933 -66.21573 #> 824  155.2867319 135   20.28673190 5.080883e-02 1.202137e-01 56.88700 -67.96459 #> 825  134.5458303 135   -0.45416975 2.546545e-05 6.283217e-05 56.88909 -67.54345 #> 826  121.5410300 135  -13.45896997 2.236344e-02 5.417209e-02 57.86991 -73.31571 #> 827  139.7680658 135    4.76806581 2.806722e-03 6.909338e-03 58.70678 -81.81793 #> 828  123.7680658 135  -11.23193419 1.557486e-02 3.793966e-02 58.70678 -81.81793 #> 829  131.7680658 135   -3.23193419 1.289555e-03 3.178477e-03 58.70678 -81.81793 #> 830  132.0587958 135   -2.94120415 1.067985e-03 2.632835e-03 55.33412 -54.58995 #> 831  148.6398589 135   13.63985895 2.296861e-02 5.561023e-02 55.30925 -55.27544 #> 832  131.3690211 135   -3.63097886 1.627655e-03 4.010705e-03 56.34177 -60.06756 #> 833  128.3158319 135   -6.68416806 5.515815e-03 1.354810e-02 56.81410 -66.34414 #> 834  144.5050541 135    9.50505406 1.115383e-02 2.726944e-02 57.97290 -73.29492 #> 835  129.6362051 135   -5.36379487 3.551888e-03 8.738361e-03 57.81681 -73.20329 #> 836  123.0151865 135  -11.98481352 1.773281e-02 4.311953e-02 57.73173 -74.26753 #> 837  134.0204322 135   -0.97956783 1.184634e-04 2.922681e-04 57.71246 -74.27409 #> 838  158.1286589 135   23.12865885 6.604134e-02 1.542896e-01 57.77303 -72.44528 #> 839  122.7156136 135  -12.28438641 1.863039e-02 4.526857e-02 57.76395 -73.11575 #> 840  125.1243573 135   -9.87564266 1.204053e-02 2.941578e-02 57.79232 -72.43785 #> 841  125.0084892 135   -9.99151080 1.232473e-02 3.010304e-02 57.71902 -74.28822 #> 842  122.0084892 135  -12.99151080 2.083696e-02 5.053805e-02 57.71902 -74.28822 #> 843  107.0816041 135  -27.91839593 9.622677e-02 2.192239e-01 57.71159 -74.17621 #> 844  137.5578600 135    2.55785999 8.077343e-04 1.991681e-03 56.14174 -58.25419 #> 845  124.9360661 135  -10.06393389 1.250405e-02 3.053650e-02 57.66879 -74.44419 #> 846  154.3321603 135   19.33216033 4.613981e-02 1.095902e-01 55.38817 -55.73824 #> 847  133.8888327 135   -1.11116733 1.524312e-04 3.760618e-04 57.77183 -76.05062 #> 848  127.8472953 135   -7.15270474 6.316196e-03 1.550380e-02 57.74816 -72.91597 #> 849  114.9988411 135  -20.00115888 4.938844e-02 1.169908e-01 56.77692 -68.50369 #> 850  122.4006467 135  -12.59935332 1.959799e-02 4.758167e-02 58.03880 -73.41169 #> 851  137.0083055 135    2.00830548 4.979371e-04 1.228108e-03 55.77608 -56.09098 #> 852  141.8940389 135    6.89403889 5.867626e-03 1.440805e-02 55.78809 -56.26929 #> 853  139.9299846 135    4.92998456 3.000586e-03 7.385396e-03 55.71030 -56.24588 #> 854  147.8709554 135   12.87095543 2.045204e-02 4.962022e-02 56.04682 -56.19149 #> 855  137.7214355 135    2.72143546 9.143470e-04 2.254365e-03 55.87461 -56.50811 #> 856  147.7975999 135   12.79759993 2.021958e-02 4.906564e-02 55.78400 -56.42613 #> 857  130.7555118 135   -4.24448819 2.224158e-03 5.477858e-03 55.81035 -56.48206 #> 858  127.7846268 135   -7.21537318 6.427359e-03 1.577522e-02 55.77300 -56.45189 #> 859  135.5769611 135    0.57696115 4.109681e-05 1.013989e-04 54.96253 -53.90542 #> 860  162.5882622 135   27.58826222 9.396447e-02 2.144750e-01 56.03978 -58.25382 #> 861  114.7927893 135  -20.20721070 5.041128e-02 1.193124e-01 57.76222 -72.99300 #> 862  136.7296402 135    1.72964021 3.693402e-04 9.110335e-04 56.04835 -59.63357 #> 863  151.2181165 135   16.21811651 3.247251e-02 7.800555e-02 63.36906 -79.76387 #> 864  136.1790479 135    1.17904790 1.716239e-04 4.234053e-04 56.40087 -61.95456 #> 865  125.9818966 135   -9.01810339 1.004027e-02 2.456947e-02 57.76406 -72.68772 #> 866  133.9478809 135   -1.05211907 1.366611e-04 3.371597e-04 56.21511 -57.59359 #> 867  153.7563965 135   18.75639650 4.343240e-02 1.033913e-01 56.12605 -57.94266 #> 868  148.7802385 135   13.78023847 2.344382e-02 5.673852e-02 56.05096 -57.93973 #> 869  137.6983002 135    2.69830020 8.988672e-04 2.216227e-03 56.24316 -57.98054 #> 870  132.9097799 135   -2.09022014 5.393852e-04 1.330289e-03 56.18167 -57.67033 #> 871  117.9000919 135  -17.09990813 3.609961e-02 8.645881e-02 59.26427 -85.78037 #> 872  125.7064391 135   -9.29356087 1.066300e-02 2.607996e-02 56.85890 -62.46559 #> 873  129.6769980 135   -5.32300196 3.498068e-03 8.606333e-03 56.70093 -62.60015 #> 874  127.5260537 135   -7.47394634 6.896281e-03 1.691960e-02 56.66921 -66.09274 #> 875  132.5275701 135   -2.47242994 7.546802e-04 1.860943e-03 56.74240 -62.81759 #> 876  121.2410001 135  -13.75899987 2.337161e-02 5.656714e-02 55.88424 -57.27609 #> 877  141.0373409 135    6.03734090 4.499936e-03 1.106212e-02 56.03243 -57.53516 #> 878  120.0531564 135  -14.94684357 2.758125e-02 6.652417e-02 56.64067 -84.99982 #> 879  128.0788970 135   -6.92110297 5.913786e-03 1.452085e-02 58.76343 -89.18186 #> 880  122.8951716 135  -12.10482845 1.808974e-02 4.397449e-02 55.37109 -61.33220 #> 881  132.2786481 135   -2.72135187 9.142909e-04 2.254226e-03 57.45163 -69.21790 #> 882  134.3850008 135   -0.61499916 4.669432e-05 1.152092e-04 56.63541 -66.34227 #> 883  132.6142001 135   -2.38579992 7.027211e-04 1.732893e-03 55.48442 -55.24267 #> 884  110.7320878 135  -24.26791222 7.270760e-02 1.689242e-01 57.73801 -73.10888 #> 885  137.2941255 135    2.29412553 6.497546e-04 1.602349e-03 55.99354 -57.14060 #> 886  142.6763030 135    7.67630302 7.274769e-03 1.784263e-02 58.11952 -74.50744 #> 887  138.0476568 135    3.04765677 1.146693e-03 2.826684e-03 57.70568 -74.23550 #> 888  136.2490194 135    1.24901939 1.925987e-04 4.751430e-04 57.36361 -69.32531 #> 889  127.8807933 135   -7.11920669 6.257173e-03 1.535967e-02 55.40388 -58.07975 #> 890  140.0854715 135    5.08547152 3.192842e-03 7.857356e-03 55.22268 -57.83083 #> 891  128.8986836 135   -6.10131638 4.595810e-03 1.129691e-02 55.38814 -58.05801 #> 892  137.9951946 135    2.99519463 1.107554e-03 2.730293e-03 55.47699 -54.63306 #> 893  131.9444389 135   -3.05556110 1.152649e-03 2.841351e-03 55.46624 -54.71911 #> 894  135.0996499 135    0.09964989 1.225938e-06 3.024878e-06 55.91876 -57.48763 #> 895  146.0064076 135   11.00640762 1.495568e-02 3.644998e-02 54.03163 -61.83075 #> 896  142.3804566 135    7.38045655 6.724832e-03 1.650129e-02 56.75114 -84.34509 #> 897  118.2919555 135  -16.70804453 3.446404e-02 8.265337e-02 55.17108 -57.51863 #> 898  164.5518806 135   29.55188056 1.078165e-01 2.432575e-01 54.28582 -76.06196 #> 899  168.2758790 135   33.27587895 1.367017e-01 3.010398e-01 55.46323 -55.79668 #> 900  135.1210032 135    0.12100316 1.807625e-06 4.460130e-06 56.18361 -58.93639 #> 901  136.7915326 135    1.79153258 3.962456e-04 9.773781e-04 56.27367 -59.42203 #> 902  128.9659863 135   -6.03401369 4.494978e-03 1.104997e-02 56.38651 -59.08602 #> 903  167.4960101 135   32.49601009 1.303692e-01 2.886278e-01 59.50225 -84.60643 #> 904  157.8660228 135   22.86602284 6.455000e-02 1.509926e-01 56.16947 -80.75203 #> 905  148.6334033 135   13.63340334 2.294687e-02 5.555860e-02 56.97787 -68.96384 #> 906  138.4052598 135    3.40525978 1.431580e-03 3.528124e-03 55.58568 -55.53562 #> 907  138.6970308 135    3.69703078 1.687412e-03 4.157747e-03 56.66862 -59.37676 #> 908  114.6504765 135  -20.34952346 5.112384e-02 1.209274e-01 56.68864 -72.39795 #> 909  137.1314498 135    2.13144979 5.608739e-04 1.383262e-03 56.79347 -89.69384 #> 910   12.5912858 135 -122.40871417 4.094761e-01 7.127520e-01 54.28513 -75.99432 #> 911  173.2353206 135   38.23532061 1.804864e-01 3.830282e-01 58.25619 -81.49840 #> 912  164.2789589 135   29.27895886 1.058343e-01 2.391818e-01 57.29167 -69.32586 #> 913  174.1143224 135   39.11432242 1.888803e-01 3.979967e-01 57.26171 -69.61196 #> 914  158.3978384 135   23.39783838 6.758751e-02 1.576989e-01 57.32377 -69.11247 #> 915  131.8848958 135   -3.11510423 1.198009e-03 2.953058e-03 57.22702 -78.13518 #> 916  149.9545673 135   14.95456726 2.760976e-02 6.659137e-02 61.87966 -66.69981 #> 917  171.7891116 135   36.78911163 1.670912e-01 3.586470e-01 55.63598 -71.26641 #> 918  145.4424930 135   10.44249299 1.346243e-02 3.285104e-02 55.58594 -55.47562 #> 919  132.9563558 135   -2.04364424 5.156150e-04 1.271690e-03 56.06327 -59.26042 #> 920  125.4364876 135   -9.56351236 1.129145e-02 2.760277e-02 56.80978 -62.92647 #> 921  145.9702080 135   10.97020796 1.485746e-02 3.621354e-02 56.85819 -88.23076 #> 922  160.0134053 135   25.01340529 7.724326e-02 1.787855e-01 57.25393 -69.78027 #> 923  149.0245853 135   14.02458530 2.428259e-02 5.872781e-02 57.24698 -69.76697 #> 924  140.9715018 135    5.97150185 4.402325e-03 1.082303e-02 57.33276 -69.79377 #> 925  142.1743545 135    7.17435453 6.354489e-03 1.559730e-02 57.23307 -69.53454 #> 926  153.0669136 135   18.06691361 4.029795e-02 9.617906e-02 57.30888 -69.65623 #> 927  137.9083431 135    2.90834306 1.044254e-03 2.574382e-03 55.51204 -54.75803 #> 928  159.3824303 135   24.38243027 7.339542e-02 1.704246e-01 61.83606 -73.53874 #> 929  147.9083750 135   12.90837500 2.057113e-02 4.990425e-02 55.87734 -56.20675 #> 930  152.3615115 135   17.36151147 3.721260e-02 8.904239e-02 56.56802 -84.55931 #> 931  124.3169967 135  -10.68300326 1.408970e-02 3.436393e-02 57.19209 -72.57189 #> 932  151.8432550 135   16.84325500 3.502410e-02 8.395763e-02 59.50635 -82.50502 #> 933  138.9685878 135    3.96858778 1.944406e-03 4.789962e-03 55.23179 -54.77762 #> 934  162.7604081 135   27.76040809 9.514077e-02 2.169466e-01 56.84711 -89.75100 #> 935  147.1896190 135   12.18961895 1.834405e-02 4.458335e-02 56.83846 -89.71236 #> 936  170.4063502 135   35.40635025 1.547666e-01 3.356713e-01 56.70063 -89.67431 #> 937  160.2527524 135   25.25275238 7.872858e-02 1.819980e-01 56.83775 -89.60849 #> 938  155.0668466 135   20.06684665 4.971337e-02 1.177288e-01 56.83852 -89.75006 #> 939  142.8597560 135    7.85975598 7.626638e-03 1.870023e-02 56.82514 -89.61110 #> 940  156.7992548 135   21.79925481 5.866759e-02 1.379051e-01 56.70257 -89.68392 #> 941  159.9874041 135   24.98740412 7.708276e-02 1.784378e-01 56.80759 -89.75098 #> 942  139.6552047 135    4.65520468 2.675424e-03 6.586830e-03 56.82547 -89.61828 #> 943  145.3514506 135   10.35145064 1.322871e-02 3.228693e-02 56.80082 -89.65234 #> 944  143.6245205 135    8.62452052 9.183007e-03 2.248755e-02 56.81542 -89.68053 #> 945  140.9007024 135    5.90070243 4.298554e-03 1.056881e-02 56.84055 -89.69163 #> 946  146.6623102 135   11.66231018 1.679129e-02 4.086184e-02 56.82122 -89.61129 #> 947  145.8217168 135   10.82171685 1.445797e-02 3.525142e-02 56.81657 -89.68388 #> 948  138.6372868 135    3.63728681 1.633315e-03 4.024634e-03 56.79991 -89.67688 #> 949  163.8582255 135   28.85822549 1.028145e-01 2.329452e-01 56.84514 -89.75685 #> 950  151.6935389 135   16.69353894 3.440423e-02 8.251400e-02 56.81599 -89.73128 #> 951  117.0287847 135  -17.97121527 3.987217e-02 9.519641e-02 56.78639 -89.70627 #> 952  160.2837978 135   25.28379776 7.892228e-02 1.824163e-01 56.70962 -89.70166 #> 953  145.7460460 135   10.74604599 1.425648e-02 3.476593e-02 56.82127 -89.63821 #> 954  149.7565797 135   14.75657971 2.688354e-02 6.487871e-02 56.81352 -89.62949 #> 955   39.5164263 135  -95.48357370 8.818551e-01 9.908682e-01 56.82749 -89.51447 #> 956  152.3476513 135   17.34765135 3.715321e-02 8.890465e-02 56.84648 -89.60710 #> 957  135.0227558 135    0.02275581 6.392925e-08 1.577391e-07 56.83327 -89.66329 #> 958  139.7234914 135    4.72349141 2.754490e-03 6.781049e-03 56.79884 -89.70098 #> 959  118.7267290 135  -16.27327100 3.269375e-02 7.852264e-02 56.81960 -89.67215 #> 960  134.3676402 135   -0.63235981 4.936777e-05 1.218051e-04 56.81384 -89.61078 #> 961  138.6552940 135    3.65529403 1.649528e-03 4.064528e-03 56.83273 -89.60994 #> 962  166.7891010 135   31.78910103 1.247589e-01 2.775120e-01 56.85259 -89.69725 #> 963  135.7195713 135    0.71957133 6.392381e-05 1.577174e-04 56.79670 -89.70991 #> 964  130.4489144 135   -4.55108562 2.557084e-03 6.296094e-03 56.84331 -89.60858 #> 965   35.7164059 135  -99.28359411 8.043380e-01 9.739755e-01 56.82617 -89.51599 #> 966   27.5164059 135 -107.48359411 6.492135e-01 9.097402e-01 56.82617 -89.51599 #> 967  153.3582843 135   18.35828431 4.160822e-02 9.919860e-02 56.81105 -89.62945 #> 968  134.8147696 135   -0.18523037 4.235838e-06 1.045148e-05 56.81556 -89.69655 #> 969  148.2850816 135   13.28508164 2.178931e-02 5.280636e-02 56.84043 -89.71765 #> 970  133.0995136 135   -1.90048643 4.459072e-04 1.099829e-03 57.39203 -80.90388 #> 971  145.6552048 135   10.65520481 1.401647e-02 3.418739e-02 55.14823 -78.62019 #> 972    8.9995358 135 -126.00046419 3.599938e-01 6.545008e-01 56.68739 -80.06332 #> 973   38.5539027 135  -96.44609733 8.618833e-01 9.873958e-01 57.73382 -78.23767 #> 974   77.8826330 135  -57.11736704 4.027646e-01 7.052380e-01 63.80396 -78.40840 #> 975   12.3939009 135 -122.60609907 4.066741e-01 7.096294e-01 56.06259 -81.64269 #> 976   37.3310081 135  -97.66899193 8.368389e-01 9.821911e-01 54.71560 -83.01469 #> 977  163.5243814 135   28.52438142 1.004494e-01 2.280375e-01 55.64358 -81.81066 #> 978  144.9985168 135    9.99851679 1.234202e-02 3.014484e-02 55.63986 -74.25887 #> 979   46.7758876 135  -88.22411239 9.609252e-01 9.990396e-01 65.11779 -77.36184 #> 980  146.0062488 135   11.00624884 1.495525e-02 3.644894e-02 56.10620 -82.25387 #> 981  145.1139186 135   10.11391864 1.262856e-02 3.083743e-02 57.39251 -80.87994 #> 982  174.5036471 135   39.50364707 1.926590e-01 4.046580e-01 56.39018 -84.49953 #> 983    3.5928923 135 -131.40710765 2.915147e-01 5.625435e-01 56.54246 -85.86726 #> 984  179.2423630 135   44.24236304 2.416527e-01 4.867783e-01 56.64399 -81.35794 #> 985  156.3788362 135   21.37883620 5.642650e-02 1.328842e-01 56.28397 -81.46314 #> 986   76.1053884 135  -58.89461157 4.282192e-01 7.331101e-01 57.01858 -79.59386 #> 987  179.5775110 135   44.57751098 2.453277e-01 4.926264e-01 56.54598 -85.88930 #> 988  168.8548124 135   33.85481239 1.414998e-01 3.103496e-01 56.99007 -81.67727 #> 989  156.9981601 135   21.99816007 5.974309e-02 1.403078e-01 56.94036 -78.19473 #> 990  131.3096673 135   -3.69033265 1.681303e-03 4.142716e-03 58.55451 -81.10095 #> 991  141.8573232 135    6.85732324 5.805294e-03 1.425573e-02 56.87963 -81.77633 #> 992  131.9302114 135   -3.06978858 1.163408e-03 2.867848e-03 57.76312 -79.22036 #> 993    2.0470904 135 -132.95290957 2.732628e-01 5.356981e-01 58.16478 -73.87963 #> 994   21.3005781 135 -113.69942191 5.426872e-01 8.384454e-01 58.00100 -75.20324 #> 995   99.3881335 135  -35.61186649 1.565685e-01 3.390632e-01 57.35759 -88.64064 #> 996   88.0250253 135  -46.97497470 2.724257e-01 5.344425e-01 57.30484 -87.65538 #> 997   68.9263099 135  -66.07369005 5.389793e-01 8.355200e-01 57.16075 -87.97348 #> 998   90.5150269 135  -44.48497311 2.443102e-01 4.910116e-01 57.42836 -83.45550 #> 999   28.1960035 135 -106.80399653 6.614389e-01 9.164220e-01 60.70241 -82.33987 #> 1000  64.1187803 135  -70.88121967 6.202651e-01 8.927257e-01 57.36879 -84.16161 #> 1001  62.1096766 135  -72.89032339 6.559258e-01 9.134453e-01 57.24079 -82.66440 #> 1002 112.9868087 135  -22.01319131 5.982476e-02 1.404901e-01 56.94608 -83.15029 #> 1003  99.0806602 135  -35.91933977 1.592838e-01 3.441532e-01 57.20060 -82.75052 #> 1004  69.4799042 135  -65.52009580 5.299855e-01 8.282941e-01 57.11886 -87.10771 #> 1005  76.7082112 135  -58.29178884 4.194979e-01 7.237514e-01 57.24381 -86.60016 #> 1006 147.0097887 135   12.00978868 1.780679e-02 4.329679e-02 57.46510 -80.98295 #> 1007  79.1503888 135  -55.84961122 3.850838e-01 6.848671e-01 57.43942 -84.03984 #> 1008  96.5775110 135  -38.42248902 1.822577e-01 3.862067e-01 56.54598 -85.88930 #> 1009  81.5036471 135  -53.49635293 3.533160e-01 6.461250e-01 56.39018 -84.49953 #> 1010  69.9557084 135  -65.04429159 5.223160e-01 8.219856e-01 56.48984 -83.64562 #> 1011  58.1133021 135  -76.88669788 7.298228e-01 9.485266e-01 56.91003 -82.97626 #> 1012  71.9144766 135  -63.08552342 4.913313e-01 7.950989e-01 56.99941 -81.57030 #> 1013  70.3330663 135  -64.66693366 5.162731e-01 8.169191e-01 56.98154 -80.89757 #> 1014  51.1374328 135  -83.86256723 8.682630e-01 9.885695e-01 56.58057 -83.25449 #> 1015  18.2927937 135 -116.70720629 4.945652e-01 7.980115e-01 57.10223 -80.85329 #> 1016  87.1788748 135  -47.82112524 2.823284e-01 5.491584e-01 57.16249 -79.34608 #> 1017  93.1053884 135  -41.89461157 2.166862e-01 4.459068e-01 57.01858 -79.59386 #> 1018  94.1460131 135  -40.85398689 2.060553e-01 4.278908e-01 56.75079 -79.76449 #> 1019 142.1926276 135    7.19262763 6.386900e-03 1.567644e-02 57.03376 -81.08075 #> 1020 176.4790467 135   41.47904674 2.124088e-01 4.387024e-01 57.02611 -82.26220 #> 1021 177.0543965 135   42.05439651 2.183423e-01 4.486801e-01 57.38405 -80.98484 #> 1022  23.2332286 135 -111.76677136 5.747869e-01 8.624856e-01 57.75378 -90.07557 #> 1023 103.9981601 135  -31.00183993 1.186561e-01 2.652926e-01 56.94036 -78.19473 #> 1024 146.0737814 135   11.07378138 1.513934e-02 3.689200e-02 60.68131 -64.30760 #> 1025 113.7680324 135  -21.23196764 5.565388e-02 1.311488e-01 56.86022 -73.71551 #> 1026  47.5314795 135  -87.46852052 9.445361e-01 9.980492e-01 65.25291 -80.35379 #> 1027  47.2344027 135  -87.76559726 9.509630e-01 9.984800e-01 57.63245 -88.58797 #> 1028 170.0185852 135   35.01858520 1.513952e-01 3.292948e-01 60.52898 -78.20558 #> 1029 155.0209489 135   20.02094888 4.948622e-02 1.172129e-01 60.17527 -87.71555 #> 1030 167.7920245 135   32.79202453 1.327552e-01 2.933210e-01 60.17833 -86.53381 #> 1031 171.2092746 135   36.20927457 1.618656e-01 3.489694e-01 60.60199 -64.15214 #> 1032 138.5522078 135    3.55220782 1.557800e-03 3.838795e-03 63.23432 -80.85004 #> 1033 122.6455233 135  -12.35447673 1.884359e-02 4.577857e-02 57.47395 -84.82916 #> 1034 133.5128533 135   -1.48714674 2.730377e-04 6.735423e-04 58.17624 -89.14835 #> 1035 149.5743711 135   14.57437109 2.622374e-02 6.332091e-02 58.39801 -84.01700 #> 1036 162.9679875 135   27.96798749 9.656893e-02 2.199405e-01 60.52765 -78.28396 #> 1037 158.3225503 135   23.32255025 6.715325e-02 1.567423e-01 61.88510 -70.61228 #> 1038 115.2026347 135  -19.79736531 4.838712e-02 1.147141e-01 60.52162 -70.30105 #> 1039 119.9761409 135  -15.02385915 2.786622e-02 6.719566e-02 57.13081 -73.17161 #> 1040 122.8030274 135  -12.19697261 1.836619e-02 4.463634e-02 56.98119 -73.56659 #> 1041 114.6935938 135  -20.30640617 5.090742e-02 1.204371e-01 57.08609 -73.66549 #> 1042 103.1303293 135  -31.86967070 1.253921e-01 2.787722e-01 62.11521 -79.60289 #> 1043   8.7670576 135 -126.23294244 3.569008e-01 6.506368e-01 62.66625 -79.62485 #> 1044 119.3335208 135  -15.66647924 3.030106e-02 7.292008e-02 57.86345 -84.94132 #> 1045 104.8381659 135  -30.16183413 1.123131e-01 2.524501e-01 59.93575 -85.18176 #> 1046  48.0604946 135  -86.93950544 9.331454e-01 9.971495e-01 59.43239 -85.35594 #> 1047 137.0915642 135    2.09156417 5.400791e-04 1.332000e-03 57.86988 -72.43276 #> 1048 161.1839314 135   26.18393143 8.464176e-02 1.947053e-01 57.98359 -85.06064 #> 1049 135.5585167 135    0.55851674 3.851123e-05 9.501964e-05 56.70929 -89.07864 #> 1050 172.1713155 135   37.17131546 1.705811e-01 3.650580e-01 56.70539 -86.40026 #> 1051 125.7597590 135   -9.24024102 1.054099e-02 2.578415e-02 56.59113 -73.93354 #> 1052  69.0268160 135  -65.97318402 5.373409e-01 8.342173e-01 64.12585 -76.48773 #> 1053 150.2835345 135   15.28353448 2.883783e-02 6.948277e-02 64.32023 -81.60456 #> 1054 134.1428456 135   -0.85715436 9.070538e-05 2.237899e-04 64.30530 -81.81712 #> 1055 125.0696160 135   -9.93038398 1.217439e-02 2.973951e-02 57.93508 -77.23450 #> 1056 138.9089205 135    3.90892050 1.886378e-03 4.647234e-03 58.26471 -75.61710 #> 1057 161.5541617 135   26.55416172 8.705228e-02 1.998480e-01 58.16851 -76.26266 #> 1058 170.1338664 135   35.13386645 1.523937e-01 3.311873e-01 58.15352 -76.94776 #> 1059 150.1576805 135   15.15768054 2.836485e-02 6.836987e-02 58.17292 -76.89338 #> 1060 142.8433048 135    7.84330480 7.594744e-03 1.862252e-02 57.57067 -84.40960 #> 1061 154.3077850 135   19.30778500 4.602353e-02 1.093245e-01 56.83090 -82.73077 #> 1062 169.9932136 135   34.99321359 1.511759e-01 3.288786e-01 56.17355 -83.89258 #> 1063 169.3122386 135   34.31223860 1.453493e-01 3.177605e-01 56.30605 -83.22808 #> 1064 176.7794039 135   41.77940393 2.154961e-01 4.439083e-01 56.51318 -83.91689 #> 1065 125.5664779 135   -9.43352214 1.098659e-02 2.686424e-02 56.66409 -84.12255 #> 1066 143.4255285 135    8.42552852 8.764140e-03 2.146922e-02 58.24140 -78.00652 #> 1067 179.3401916 135   44.34019163 2.427225e-01 4.884852e-01 57.08923 -85.72226 #> 1068 144.7672081 135    9.76720809 1.177757e-02 2.877959e-02 57.02811 -86.73046 #> 1069 139.9675446 135    4.96754456 3.046481e-03 7.498076e-03 57.03511 -88.04221 #> 1070  40.7566811 135  -94.24331887 9.079270e-01 9.945252e-01 57.44841 -89.57113 #> 1071 147.6091329 135   12.60913288 1.962842e-02 4.765437e-02 57.38081 -89.88863 #> 1072 119.1653933 135  -15.83460675 3.095491e-02 7.445333e-02 58.92379 -84.14088 #> 1073 148.4323438 135   13.43234375 2.227504e-02 5.396190e-02 57.02148 -87.29001 #> 1074 134.4983598 135   -0.50164018 3.106702e-05 7.665284e-05 56.66973 -85.89335 #> 1075 153.7154808 135   18.71548081 4.324311e-02 1.029569e-01 58.42490 -77.38670 #> 1076 169.9012412 135   34.90124122 1.503823e-01 3.273712e-01 60.06367 -81.87859 #> 1077 178.8945169 135   43.89451691 2.378677e-01 4.807105e-01 60.55123 -78.37511 #> 1078  90.8280555 135  -44.17194452 2.408840e-01 4.855497e-01 64.51234 -70.76068 #> 1079 154.9538626 135   19.95386259 4.915514e-02 1.164607e-01 55.96354 -84.16566 #> 1080 154.0446492 135   19.04464918 4.477761e-02 1.064749e-01 56.09822 -83.87993 #> 1081 137.3787590 135    2.37875896 6.985795e-04 1.722686e-03 56.57524 -79.53439 #> 1082 142.2613375 135    7.26133750 6.509509e-03 1.597576e-02 62.17127 -73.83609 #>          distance #> 1    -0.159653371 #> 2     0.086887852 #> 3     0.149867724 #> 4     0.382969772 #> 5    -0.044245390 #> 6     0.336843088 #> 7    -0.123975672 #> 8    -0.075039154 #> 9    -0.114088366 #> 10    0.187778514 #> 11   -0.935468137 #> 12   -0.910133187 #> 13    0.187068364 #> 14   -1.162720179 #> 15   -1.793638144 #> 16    0.185882514 #> 17   -0.677652680 #> 18   -0.656377931 #> 19    0.558324429 #> 20   -0.183661915 #> 21   -0.118221591 #> 22   -0.668687489 #> 23   -0.093269270 #> 24    0.052738091 #> 25   -0.023241856 #> 26    0.015283573 #> 27    0.082893390 #> 28    0.240915590 #> 29    0.307964881 #> 30    0.317475687 #> 31   -0.070340748 #> 32    0.596671784 #> 33   -0.174470964 #> 34    0.380026731 #> 35    0.304520567 #> 36    0.449282642 #> 37   -0.469640461 #> 38   -0.196328866 #> 39   -0.153061735 #> 40    0.406011567 #> 41    0.123173625 #> 42    0.729631959 #> 43    0.065903990 #> 44   -0.223703117 #> 45    0.135450400 #> 46    0.339897947 #> 47    0.063260642 #> 48    0.118879096 #> 49    0.161610016 #> 50    0.322434947 #> 51    0.649183317 #> 52   -0.193887419 #> 53   -0.139757939 #> 54    0.133404579 #> 55    0.360336101 #> 56   -0.233992104 #> 57   -0.179288999 #> 58    0.116416184 #> 59    0.130970073 #> 60    0.091271934 #> 61    0.199833415 #> 62   -0.302649943 #> 63    0.175327528 #> 64    0.135686686 #> 65    0.189915710 #> 66    0.227942678 #> 67    0.054960596 #> 68   -1.335330486 #> 69    0.282637842 #> 70   -1.431198866 #> 71   -1.605491105 #> 72   -0.968100383 #> 73   -1.753866681 #> 74   -1.725523315 #> 75   -1.597270174 #> 76   -1.436240926 #> 77   -1.514627096 #> 78    0.515923856 #> 79    0.535137732 #> 80   -1.154446666 #> 81   -1.015456819 #> 82   -1.086215311 #> 83   -1.044993155 #> 84   -0.976348086 #> 85   -0.860201757 #> 86    0.455656804 #> 87   -0.587828944 #> 88    0.357080826 #> 89    0.417728185 #> 90    0.524909535 #> 91    0.583695439 #> 92    0.404538776 #> 93   -0.089034150 #> 94    0.767220847 #> 95    0.668862833 #> 96    1.946017133 #> 97   -0.226723872 #> 98   -0.137105013 #> 99   -0.048047310 #> 100   0.005310529 #> 101  -0.121589973 #> 102  -0.020740255 #> 103  -0.015581188 #> 104  -0.060367686 #> 105   0.030020596 #> 106   0.256631586 #> 107   0.437678252 #> 108   0.279062368 #> 109  -0.281110404 #> 110  -0.194823709 #> 111  -0.134287043 #> 112  -0.090124498 #> 113   0.310607795 #> 114   0.521376020 #> 115   0.348320678 #> 116   0.379283534 #> 117   0.007643794 #> 118   0.307830525 #> 119   0.452258256 #> 120   0.411539687 #> 121  -0.429503217 #> 122  -0.374735660 #> 123  -0.179863271 #> 124  -0.135913582 #> 125   0.374083619 #> 126   0.520948368 #> 127  -0.306032917 #> 128  -0.715134712 #> 129  -0.617614327 #> 130  -0.454417254 #> 131   0.002463552 #> 132  -0.688360618 #> 133   0.027974913 #> 134   0.584967323 #> 135  -0.019480869 #> 136  -0.312782937 #> 137   0.261802723 #> 138  -0.263846521 #> 139  -0.209121750 #> 140   0.366002148 #> 141   0.451984217 #> 142   0.239494602 #> 143  -0.248601236 #> 144  -0.085587662 #> 145  -0.030748111 #> 146   0.478075379 #> 147   0.521755980 #> 148  -0.853500349 #> 149  -0.288028342 #> 150  -0.125170059 #> 151  -0.015537569 #> 152   0.170738349 #> 153   0.303593168 #> 154   0.625498760 #> 155  -0.824456946 #> 156  -0.261912321 #> 157  -0.219374651 #> 158   0.021839795 #> 159   0.185281547 #> 160   0.036423659 #> 161   0.145532576 #> 162   0.344296714 #> 163   0.160747807 #> 164   0.269999032 #> 165  -0.148539681 #> 166  -0.050888479 #> 167   0.264040133 #> 168   0.150293646 #> 169   0.188984198 #> 170   0.386173285 #> 171   0.105740611 #> 172  -1.439253900 #> 173  -1.301236061 #> 174   0.068389803 #> 175   0.161563258 #> 176   0.257946492 #> 177  -1.685775674 #> 178  -1.644738789 #> 179  -1.502256246 #> 180  -1.389245809 #> 181  -1.340957578 #> 182   0.264620399 #> 183   0.319757378 #> 184  -1.616406037 #> 185  -1.576576372 #> 186  -1.789665586 #> 187  -1.686289149 #> 188  -1.646012317 #> 189  -1.617651350 #> 190  -1.548348347 #> 191  -1.937543958 #> 192  -1.261448340 #> 193  -1.174703847 #> 194  -1.071899243 #> 195  -1.514992747 #> 196  -1.126145626 #> 197  -0.759464112 #> 198   0.276007862 #> 199   0.027815307 #> 200   0.500891048 #> 201  -0.874123872 #> 202   0.381131003 #> 203   0.441770159 #> 204   0.548286391 #> 205   0.510338846 #> 206  -0.173064076 #> 207   0.415221130 #> 208   0.863687459 #> 209   0.958197866 #> 210   0.852195200 #> 211  -0.129169079 #> 212   0.170733138 #> 213  -0.149466352 #> 214  -0.046105104 #> 215  -0.056971544 #> 216  -0.029069701 #> 217  -0.021535939 #> 218  -0.054769906 #> 219   0.092759470 #> 220   0.155549277 #> 221   0.187072670 #> 222  -0.257991465 #> 223   0.210505695 #> 224   0.279183894 #> 225  -0.047060639 #> 226   0.316742867 #> 227  -0.226088281 #> 228  -0.199968554 #> 229  -0.252198025 #> 230  -0.265735809 #> 231   0.411662062 #> 232   0.661074009 #> 233  -0.523669723 #> 234   0.374331479 #> 235  -1.028970751 #> 236  -0.509080095 #> 237   0.374652072 #> 238   0.443818677 #> 239  -0.619237696 #> 240   0.389333008 #> 241  -0.005581317 #> 242   0.092708576 #> 243   0.382880414 #> 244   0.573993462 #> 245   0.078440583 #> 246  -0.407920025 #> 247  -0.071010366 #> 248   0.377464503 #> 249   0.712418564 #> 250  -0.877809793 #> 251  -0.774797790 #> 252  -0.852484915 #> 253   0.121088081 #> 254   0.079608192 #> 255   0.134189251 #> 256   0.131881122 #> 257  -0.654431959 #> 258   0.073579421 #> 259   0.158675352 #> 260   0.213852155 #> 261  -1.497871787 #> 262   0.308782331 #> 263  -1.718865260 #> 264  -1.367337261 #> 265  -0.865493827 #> 266  -0.011666271 #> 267  -1.617062006 #> 268  -1.501828638 #> 269  -1.583861915 #> 270  -1.434370022 #> 271  -1.282735163 #> 272   0.076127812 #> 273  -1.196043958 #> 274   0.449982523 #> 275  -1.297544727 #> 276  -0.680206451 #> 277  -0.477502475 #> 278   0.378705562 #> 279  -1.303567485 #> 280  -1.223408504 #> 281   0.363061186 #> 282   0.406909775 #> 283  -0.942199067 #> 284   0.370932027 #> 285  -0.387111983 #> 286  -0.609102160 #> 287   0.257251427 #> 288   0.449667665 #> 289  -0.519938192 #> 290  -0.017134596 #> 291  -0.400219747 #> 292   0.330938907 #> 293   1.260870621 #> 294   0.017586391 #> 295   0.383226146 #> 296   0.578046467 #> 297  -0.182694198 #> 298  -0.107569088 #> 299  -0.064694809 #> 300   0.342281954 #> 301  -0.326287134 #> 302  -0.790767740 #> 303   0.729122697 #> 304  -0.093196254 #> 305  -0.027124440 #> 306   0.590932976 #> 307  -0.251194172 #> 308  -0.014748716 #> 309   0.023191340 #> 310  -0.636052478 #> 311   0.426543928 #> 312   0.496314462 #> 313  -0.200811098 #> 314  -0.111993472 #> 315   0.672514291 #> 316  -1.253661641 #> 317   0.325299395 #> 318   0.468649822 #> 319  -1.383491480 #> 320   0.352078942 #> 321  -1.524174035 #> 322  -1.550408807 #> 323  -1.645408975 #> 324   0.632475416 #> 325  -1.330341828 #> 326  -1.652045586 #> 327  -1.366307847 #> 328   0.598547768 #> 329  -1.194992708 #> 330   0.463699501 #> 331   0.476166084 #> 332   0.333686113 #> 333   0.394960353 #> 334  -0.717493473 #> 335  -0.508740257 #> 336  -0.635699189 #> 337   0.463532827 #> 338   0.486947122 #> 339  -0.284322305 #> 340  -1.562681380 #> 341   0.041117943 #> 342   0.458941012 #> 343   1.425723038 #> 344  -0.190649070 #> 345  -0.108547042 #> 346  -0.046556430 #> 347  -0.139268224 #> 348   0.342661202 #> 349  -0.613213368 #> 350  -0.040903334 #> 351  -0.154337331 #> 352  -0.857230773 #> 353   0.723706991 #> 354  -0.257997473 #> 355   0.116107223 #> 356  -1.794229754 #> 357  -1.481579124 #> 358  -1.072322537 #> 359   0.278068538 #> 360  -1.263806403 #> 361  -1.045341097 #> 362  -1.366651776 #> 363   0.646169592 #> 364   0.311975967 #> 365   0.118006838 #> 366   0.035555224 #> 367   0.756064575 #> 368   0.015622241 #> 369   0.019205274 #> 370  -1.552963982 #> 371  -0.131167998 #> 372  -0.468256594 #> 373  -0.394877477 #> 374  -0.563679988 #> 375   0.481483088 #> 376  -0.438309436 #> 377  -0.602994834 #> 378  -0.052900400 #> 379  -1.263727034 #> 380  -0.348115294 #> 381   0.163779650 #> 382  -0.151801003 #> 383  -5.108565164 #> 384  -0.360187078 #> 385  -0.775175229 #> 386  -0.478872896 #> 387  -0.431184022 #> 388  -0.928665968 #> 389  -0.373232272 #> 390  -0.442165213 #> 391  -3.448234454 #> 392   0.175573762 #> 393  -0.320570593 #> 394  -0.662223556 #> 395  -0.110159567 #> 396  -0.112234969 #> 397  -0.135037874 #> 398  -0.131319731 #> 399  -0.151206114 #> 400  -1.266250113 #> 401   1.894675705 #> 402  -4.230749228 #> 403  -3.376996502 #> 404  -4.689632294 #> 405  -9.226504808 #> 406   0.064046459 #> 407   0.071357879 #> 408   0.052901334 #> 409   0.027406639 #> 410  -2.047739478 #> 411   0.276811525 #> 412  -5.142441204 #> 413   0.558921692 #> 414   0.558921692 #> 415   0.759315975 #> 416   1.894675705 #> 417   1.906117601 #> 418   0.128992354 #> 419   0.564017480 #> 420   0.564017480 #> 421   0.618742055 #> 422   1.134515033 #> 423   0.434970008 #> 424   0.434970008 #> 425   0.454311513 #> 426   0.595543634 #> 427   1.237043267 #> 428   0.300302913 #> 429   1.239186827 #> 430  -2.092548978 #> 431   0.027608129 #> 432  -0.016932933 #> 433   0.014118793 #> 434   0.062626400 #> 435   0.605331693 #> 436  -0.418084101 #> 437  -0.799675584 #> 438  -0.410327372 #> 439   0.634391805 #> 440  -0.135719406 #> 441  -0.771012821 #> 442  -0.162414507 #> 443  -0.221332700 #> 444   0.641126885 #> 445   0.054842320 #> 446  -0.257877487 #> 447  -0.166137173 #> 448   0.678453252 #> 449   0.509270020 #> 450   0.208927352 #> 451   1.092448517 #> 452  -0.100448107 #> 453  -0.193775533 #> 454   0.663221881 #> 455   0.723625853 #> 456  -0.002786501 #> 457  -0.087953478 #> 458   1.730027774 #> 459  -6.990342710 #> 460  -4.232646383 #> 461  -0.132116716 #> 462   0.305915384 #> 463   0.698603316 #> 464  -0.770934865 #> 465  -0.629466382 #> 466   0.233319956 #> 467  -0.579898964 #> 468  -3.718639628 #> 469  -0.167292226 #> 470  -0.156372000 #> 471  -1.000315693 #> 472   0.059682642 #> 473   0.236262830 #> 474  -0.731808513 #> 475   0.142350941 #> 476   0.731195524 #> 477  -0.924050137 #> 478  -0.786588114 #> 479  -0.671545094 #> 480  -0.709603388 #> 481  -0.467652245 #> 482  -0.716494537 #> 483  -0.159068247 #> 484   0.639285134 #> 485   0.543570338 #> 486  -0.428067997 #> 487  -0.489226270 #> 488  -0.222461564 #> 489   0.648208345 #> 490  -3.448234454 #> 491  -1.644383515 #> 492  -1.648755883 #> 493  -1.644383515 #> 494  -0.164724841 #> 495  -0.388294551 #> 496  -0.305597459 #> 497  -0.073623625 #> 498  -0.184736877 #> 499   0.034263465 #> 500  -0.196096390 #> 501   0.228084875 #> 502   0.265503712 #> 503  -0.214670160 #> 504  -1.656518390 #> 505   0.004153313 #> 506  -0.797148773 #> 507  -0.782182435 #> 508   0.692373368 #> 509   0.692300664 #> 510  -0.131789791 #> 511  -0.787381839 #> 512  -0.791048917 #> 513  -0.109189787 #> 514  -0.401418000 #> 515   0.942495590 #> 516   0.997289026 #> 517   0.969974206 #> 518   0.960401568 #> 519  -1.465314610 #> 520  -7.786805925 #> 521  -6.365733756 #> 522  -6.414315537 #> 523  -1.920974998 #> 524  -4.170549410 #> 525   0.572274329 #> 526  -0.646009637 #> 527   0.491790080 #> 528   0.723776407 #> 529  -0.123016388 #> 530   0.763565397 #> 531   0.587596198 #> 532   0.062591996 #> 533  -0.125632121 #> 534  -0.223191312 #> 535   0.062965432 #> 536   0.849523652 #> 537  -0.064995870 #> 538  -0.396226967 #> 539  -0.148765856 #> 540   0.507255914 #> 541  -0.033148466 #> 542  -2.056659425 #> 543  -2.093206125 #> 544  -1.644628904 #> 545  -1.644628904 #> 546  -0.917666933 #> 547  -0.143105733 #> 548   0.177853848 #> 549  -0.694827072 #> 550  -0.517473138 #> 551   0.307761122 #> 552   0.181596494 #> 553   0.312005841 #> 554  -0.022106553 #> 555   0.329709939 #> 556  -0.532692379 #> 557  -0.171161599 #> 558  -1.657139469 #> 559   0.564168912 #> 560   0.731985322 #> 561  -1.628856556 #> 562  -2.446541754 #> 563  -2.751949327 #> 564  -2.705483216 #> 565  -3.162091001 #> 566  -4.988116270 #> 567  -6.358817919 #> 568  -6.704567313 #> 569  -4.100073713 #> 570  -5.019177798 #> 571  -4.414001746 #> 572  -4.643374504 #> 573  -2.475414534 #> 574  -3.184963965 #> 575  -0.448039386 #> 576  -2.276737034 #> 577  -1.866688770 #> 578  -3.284619803 #> 579  -0.749660873 #> 580  -0.035284835 #> 581  -1.014044563 #> 582  -0.440931536 #> 583   0.794561342 #> 584   2.008897350 #> 585  -8.262956575 #> 586  -6.749940163 #> 587  -7.905125742 #> 588  -1.891512974 #> 589  -0.365643323 #> 590  -0.488254806 #> 591  -0.566402484 #> 592  -0.553580347 #> 593   0.181220765 #> 594  -0.378787538 #> 595   0.437717013 #> 596   0.355119040 #> 597   0.402059863 #> 598   0.375162160 #> 599   0.398623306 #> 600   0.374973886 #> 601   0.352553954 #> 602   0.374636205 #> 603   0.383924622 #> 604   0.513591511 #> 605   0.435025066 #> 606   0.435488799 #> 607   0.379774199 #> 608   0.375248898 #> 609   0.325819128 #> 610   1.132566079 #> 611  -0.325727245 #> 612  -0.231400216 #> 613  -0.562269409 #> 614  -0.715493541 #> 615  -1.274978930 #> 616  -1.153903433 #> 617  -0.275479367 #> 618   0.673397881 #> 619  -0.217461874 #> 620  -0.258381582 #> 621  -0.017554470 #> 622   0.375779158 #> 623  -3.582884457 #> 624  -3.058981233 #> 625  -4.010091677 #> 626  -3.620511398 #> 627  -2.591893404 #> 628  -2.846654327 #> 629   0.566686325 #> 630   0.513984468 #> 631   0.777181628 #> 632  -0.272273979 #> 633   0.085561612 #> 634   0.577430030 #> 635  -0.360236979 #> 636  -0.410942105 #> 637  -0.175633576 #> 638  -0.229481333 #> 639  -0.333978818 #> 640  -0.359124240 #> 641   0.196378493 #> 642   0.064521677 #> 643  -0.325193153 #> 644  -0.158092326 #> 645  -0.102752682 #> 646  -0.376527831 #> 647   1.014957291 #> 648  -1.188776440 #> 649  -2.608219439 #> 650  -3.659705101 #> 651   0.602199885 #> 652  -2.703741427 #> 653  -6.844720511 #> 654  -5.867767985 #> 655  -6.610601114 #> 656  -6.015273206 #> 657  -6.181054820 #> 658  -1.267004715 #> 659   0.481618977 #> 660  -0.712121560 #> 661  -0.625798907 #> 662   0.034342981 #> 663  -2.364100550 #> 664  -1.966094250 #> 665  -2.347438657 #> 666  -1.838323426 #> 667  -1.735837334 #> 668  -1.559678812 #> 669  -0.080385435 #> 670  -5.191173371 #> 671  -3.872349050 #> 672  -3.779949064 #> 673  -4.355576755 #> 674  -2.505902087 #> 675  -0.882580702 #> 676  -7.564127304 #> 677   0.435488799 #> 678   0.449288567 #> 679  -1.641573580 #> 680  -7.748267082 #> 681  -7.907553970 #> 682  -0.282986735 #> 683  -4.133463400 #> 684  -3.569203275 #> 685  -6.437498450 #> 686   5.371704747 #> 687  -1.517513555 #> 688  -1.360048273 #> 689   0.576285478 #> 690   0.651132786 #> 691  -0.207553668 #> 692  -0.228505784 #> 693  -0.629006975 #> 694   0.059412318 #> 695  -1.773405568 #> 696  -1.842019126 #> 697  -0.108029034 #> 698  -0.002085141 #> 699  -0.455008844 #> 700   0.056567473 #> 701  -2.293482927 #> 702  -0.879523445 #> 703  -3.124645933 #> 704  -1.560579648 #> 705   0.040082530 #> 706   0.027626576 #> 707   0.017921519 #> 708  -0.195099658 #> 709   0.053243438 #> 710   0.115438715 #> 711  -0.010471098 #> 712   0.180685469 #> 713   0.016544218 #> 714  -0.175175178 #> 715  -0.041379023 #> 716  -0.363846070 #> 717  -0.101008281 #> 718   0.006620670 #> 719   0.003838134 #> 720   0.055928032 #> 721  -2.449266021 #> 722  -2.449781909 #> 723   0.481559440 #> 724  -0.134918538 #> 725   2.768784041 #> 726   0.020184587 #> 727   1.994322061 #> 728   2.072608720 #> 729  -0.063596010 #> 730   0.036464534 #> 731   0.540359889 #> 732  -0.137105440 #> 733  -0.247553689 #> 734  -0.186519734 #> 735  -0.433842249 #> 736  -0.108255757 #> 737   0.458070046 #> 738   0.418438804 #> 739   0.321810791 #> 740   0.423996465 #> 741   0.248205965 #> 742   0.291785519 #> 743   0.359114994 #> 744   0.372582089 #> 745  -0.007913940 #> 746  -0.064923379 #> 747   0.023659808 #> 748  -0.054707286 #> 749  -0.036503974 #> 750  -0.114298227 #> 751  -0.104254931 #> 752  -0.039107965 #> 753   0.016959595 #> 754  -0.162346431 #> 755  -0.119691394 #> 756  -0.089570785 #> 757   0.004694528 #> 758  -0.064923379 #> 759  -0.041013061 #> 760   0.054060409 #> 761   1.932796554 #> 762   1.907396532 #> 763  -0.070649020 #> 764  -0.081478820 #> 765   0.068432121 #> 766   0.581858283 #> 767   0.060833311 #> 768   0.392406568 #> 769   0.236068500 #> 770  -0.036011701 #> 771  -0.043464518 #> 772  -0.022830441 #> 773  -0.197229786 #> 774  -0.096204144 #> 775  -0.115270549 #> 776   0.051896293 #> 777  -0.023753416 #> 778   0.016399226 #> 779   0.142809075 #> 780  -0.112699326 #> 781  -0.001411843 #> 782   0.348004103 #> 783  -0.136835176 #> 784  -0.098468214 #> 785  -0.091210950 #> 786  -0.083799599 #> 787  -0.082972608 #> 788  -0.077407010 #> 789   0.540825811 #> 790   0.564695483 #> 791   0.553901046 #> 792   0.565595058 #> 793   0.600213868 #> 794   0.580054225 #> 795   0.069855885 #> 796  -0.060819083 #> 797   0.586624178 #> 798  -0.053476769 #> 799   0.140406376 #> 800  -0.072103531 #> 801   0.026918639 #> 802   0.102987430 #> 803   0.115822180 #> 804   0.102698557 #> 805   0.096371450 #> 806   0.231845120 #> 807   0.906280173 #> 808   0.045354982 #> 809  -2.715875754 #> 810   0.168642988 #> 811   0.377829203 #> 812   0.484973507 #> 813  -0.059292011 #> 814  -0.106038172 #> 815  -0.915853487 #> 816   0.096839836 #> 817   0.716396017 #> 818   0.035252695 #> 819  -0.219560409 #> 820  -0.055208004 #> 821   0.014102297 #> 822   0.060021714 #> 823  -0.343198449 #> 824  -0.098112155 #> 825  -0.117980174 #> 826  -0.005838140 #> 827  -1.865958524 #> 828  -1.865958524 #> 829  -1.865958524 #> 830   0.121303343 #> 831   0.191052411 #> 832  -0.176762493 #> 833  -0.134386917 #> 834  -0.105461555 #> 835   0.053981620 #> 836   0.267410867 #> 837   0.286677273 #> 838   0.146249194 #> 839   0.113559154 #> 840   0.126958706 #> 841   0.280270678 #> 842   0.280270678 #> 843   0.287233474 #> 844  -0.225585808 #> 845   0.430347968 #> 846   0.142860526 #> 847   0.415344492 #> 848   0.142783191 #> 849   0.298123767 #> 850  -0.181440469 #> 851  -0.217700351 #> 852  -0.216039159 #> 853  -0.142807790 #> 854  -0.479323401 #> 855   0.026576417 #> 856   0.118322732 #> 857   0.091120041 #> 858   0.129036609 #> 859   0.032620190 #> 860  -0.123632647 #> 861   0.125370627 #> 862   0.120807720 #> 863  -6.074708808 #> 864  -0.118966044 #> 865   0.139025821 #> 866  -0.312681404 #> 867  -0.211707047 #> 868  -0.136613459 #> 869  -0.328562700 #> 870  -0.275442101 #> 871  -2.707394210 #> 872  -0.170926723 #> 873   0.076333491 #> 874   0.003328504 #> 875   0.018583473 #> 876   0.012824129 #> 877  -0.131893479 #> 878   0.003797685 #> 879  -2.422045506 #> 880   0.919274117 #> 881  -0.057917777 #> 882   0.044298159 #> 883   0.015887205 #> 884   0.139498513 #> 885  -0.094241571 #> 886  -0.020726490 #> 887   0.293300284 #> 888   0.035978337 #> 889   0.511241631 #> 890   0.691150688 #> 891   0.526978122 #> 892  -0.017366103 #> 893  -0.002423979 #> 894  -0.020128365 #> 895   2.251707179 #> 896  -0.059072715 #> 897   0.727549725 #> 898   3.901349948 #> 899   0.072361017 #> 900   0.006821076 #> 901  -0.095271922 #> 902  -0.198627974 #> 903  -2.827489383 #> 904   0.832025622 #> 905   0.398211402 #> 906  -0.068452261 #> 907  -0.487912951 #> 908   1.234685386 #> 909  -0.458958059 #> 910   3.907522644 #> 911  -1.392503798 #> 912   0.107919907 #> 913   0.157176263 #> 914   0.064065787 #> 915   0.537422574 #> 916  -5.114361826 #> 917   2.301472355 #> 918  -0.071467494 #> 919   0.122062902 #> 920  -0.057216869 #> 921  -0.489001253 #> 922   0.181175266 #> 923   0.182817360 #> 924   0.102346767 #> 925   0.180361214 #> 926   0.115468395 #> 927  -0.046126948 #> 928  -3.841382154 #> 929  -0.309849913 #> 930   0.106748639 #> 931   0.719088946 #> 932  -2.722540458 #> 933   0.236227476 #> 934  -0.512597092 #> 935  -0.503948319 #> 936  -0.371159296 #> 937  -0.508281269 #> 938  -0.504003892 #> 939  -0.495673735 #> 940  -0.373100533 #> 941  -0.473071095 #> 942  -0.495999109 #> 943  -0.471353043 #> 944  -0.485953021 #> 945  -0.511076619 #> 946  -0.491751903 #> 947  -0.487104238 #> 948  -0.470443345 #> 949  -0.510623600 #> 950  -0.481479685 #> 951  -0.451878894 #> 952  -0.375107589 #> 953  -0.491805700 #> 954  -0.484048045 #> 955  -0.494046673 #> 956  -0.517008513 #> 957  -0.503798457 #> 958  -0.464328969 #> 959  -0.490128838 #> 960  -0.484366794 #> 961  -0.503257665 #> 962  -0.518071313 #> 963  -0.462183692 #> 964  -0.513836928 #> 965  -0.492726953 #> 966  -0.492726953 #> 967  -0.481583305 #> 968  -0.481047791 #> 969  -0.505919739 #> 970  -0.445774233 #> 971   2.497791902 #> 972   0.517719667 #> 973   0.006737403 #> 974  -6.099231339 #> 975   0.789671591 #> 976   2.040027864 #> 977   1.197242367 #> 978   2.359278694 #> 979  -7.129627086 #> 980   0.688885881 #> 981  -0.446256853 #> 982   0.290647883 #> 983   0.014422217 #> 984   0.231131258 #> 985   0.579725697 #> 986   0.329093916 #> 987  -0.006451665 #> 988  -0.137814071 #> 989   0.812137995 #> 990  -1.656518390 #> 991  -0.038806247 #> 992  -0.277913588 #> 993  -0.167292226 #> 994   0.228084875 #> 995  -1.000315693 #> 996  -0.924050137 #> 997  -0.786588114 #> 998  -0.694827072 #> 999  -3.912959369 #> 1000 -0.671545094 #> 1001 -0.468256594 #> 1002 -0.196096390 #> 1003 -0.428067997 #> 1004 -0.706293859 #> 1005 -0.791048917 #> 1006 -0.537254520 #> 1007 -0.731808513 #> 1008 -0.006451665 #> 1009  0.290647883 #> 1010  0.233319956 #> 1011 -0.148765856 #> 1012 -0.135719406 #> 1013 -0.035284835 #> 1014  0.163779650 #> 1015 -0.137561913 #> 1016  0.278199564 #> 1017  0.329093916 #> 1018  0.543570338 #> 1019 -0.124328316 #> 1020 -0.231023141 #> 1021 -0.456207496 #> 1022 -1.399086157 #> 1023  0.812137995 #> 1024 -3.981541444 #> 1025  1.136063985 #> 1026 -8.137036435 #> 1027 -1.275183622 #> 1028 -2.788421095 #> 1029 -3.796133613 #> 1030 -3.708222390 #> 1031 -3.896359674 #> 1032 -6.269653708 #> 1033 -0.817359772 #> 1034 -1.834853505 #> 1035 -1.690399496 #> 1036 -2.799033629 #> 1037 -4.363824595 #> 1038 -3.034489271 #> 1039  0.743342981 #> 1040  1.013892704 #> 1041  0.909797484 #> 1042 -4.767543033 #> 1043 -5.318574573 #> 1044 -1.212922100 #> 1045 -3.303402111 #> 1046 -2.823453603 #> 1047  0.049393973 #> 1048 -1.339123107 #> 1049 -0.363940199 #> 1050 -0.217927948 #> 1051  1.406758166 #> 1052 -5.973184715 #> 1053 -7.467968429 #> 1054 -7.464478343 #> 1055  0.076509852 #> 1056 -0.050155591 #> 1057  0.007708582 #> 1058 -0.071516206 #> 1059 -0.079137315 #> 1060 -0.883788054 #> 1061 -0.058364134 #> 1062  0.539245098 #> 1063  0.438294336 #> 1064  0.199616268 #> 1065  0.038341694 #> 1066 -0.453079115 #> 1067 -0.514995736 #> 1068 -0.588749353 #> 1069 -0.662605777 #> 1070 -1.114972837 #> 1071 -1.036204300 #> 1072 -2.221354599 #> 1073 -0.629015339 #> 1074 -0.130203879 #> 1075 -0.460169563 #> 1076 -3.234277944 #> 1077 -2.846498442 #> 1078 -6.602338029 #> 1079  0.733714075 #> 1080  0.614576870 #> 1081  0.803436113 #> 1082 -4.174179044 #>  #> $stats #>                    [,1] #> mean       138.89370624 #> sd          37.12227404 #> var          0.18932742 #> dispersion   0.09840187 #> conf95       4.97276197 #> norm_chisq   0.03296388 #>  #> $test #> $test$statistic #> [1] 0.8031963 #>  #> $test$p.value #> [1] 3.607527e-47 #>  #>  # }"},{"path":"https://tobiste.github.io/tectonicr/reference/stress_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Color palette for stress regime — stress_colors","title":"Color palette for stress regime — stress_colors","text":"Color palette stress regime","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color palette for stress regime — stress_colors","text":"","code":"stress_colors()"},{"path":"https://tobiste.github.io/tectonicr/reference/stress_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Color palette for stress regime — stress_colors","text":"function","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color palette for stress regime — stress_colors","text":"","code":"stress_colors() #>         N        NS         S        TS         T         U  #> \"#D55E00\" \"#E69F00\" \"#009E73\" \"#56B4E9\" \"#0072B2\"  \"grey60\""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Theoretical Plate Tectonic Stress Paths — stress_paths","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"Construct \\(\\sigma_{Hmax}\\) lines following small circles, great circles, loxodromes Euler pole relative plate motion.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"","code":"eulerpole_paths(x, type = c(\"sc\", \"gc\", \"ld\"), n = 10, angle, cw)  eulerpole_smallcircles(x, n = 10)  eulerpole_greatcircles(x, n = 10)  eulerpole_loxodromes(x, n = 10, angle = 45, cw)"},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"x Either object class \"euler.pole\" \"data.frame\" containing coordinates Euler pole lat, lon, rotation angle (optional). type Character string specifying type curves export. Either \"sm\" small circles (default), \"gc\" great circles, \"ld\" loxodromes. n Number equally spaced curves; n = 10 default (angular distance curves: 180 / n) angle Direction loxodromes; angle = 45 default. cw logical. Sense loxodromes: TRUE clockwise loxodromes (left-lateral displaced plate boundaries). FALSE counterclockwise loxodromes (right-lateral displaced plate boundaries).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"sf object","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"Maximum horizontal stress can aligned three types curves related relative plate motion: Small circles Lines constant distance Euler pole. x contains angle, output additionally gives absolute velocity small circle (degree/Myr -> km/Myr). Great circles Paths shortest distance Euler pole antipodal position. Loxodromes Lines constant bearing, .e. curves cutting small circles constant angle.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"","code":"data(\"nuvel1\") por <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to # Pacific plate  eulerpole_smallcircles(por) #> Simple feature collection with 11 features and 2 fields #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -84.709 xmax: 180 ymax: 84.709 #> Geodetic CRS:  WGS 84 #> # A tibble: 11 × 3 #>                                                           geometry     d abs_vel #>  *                                                  <GEOMETRY [°]> <dbl>   <dbl> #>  1 LINESTRING (101.833 -48.709, 101.833 -48.709, 101.833 -48.709,…     0     0   #>  2 LINESTRING (101.833 -30.709, 102.4799 -30.71571, 103.1265 -30.…   -18    26.9 #>  3 LINESTRING (101.833 -12.709, 102.9175 -12.72024, 104.0016 -12.…   -36    51.2 #>  4 MULTILINESTRING ((101.833 5.291, 103.2953 5.275842, 104.757 5.…   -54    70.4 #>  5 MULTILINESTRING ((101.833 23.291, 103.6965 23.27168, 105.5586 …   -72    82.8 #>  6 MULTILINESTRING ((101.833 41.291, 104.228 41.26618, 106.6194 4…    90    87.1 #>  7 MULTILINESTRING ((101.833 59.291, 105.1832 59.25627, 108.521 5…    72    82.8 #>  8 MULTILINESTRING ((101.833 77.291, 108.4309 77.22258, 114.9037 …    54    70.4 #>  9 LINESTRING (-78.167 84.709, -89.46284 84.59139, -99.79473 84.2…    36    51.2 #> 10 LINESTRING (-78.167 66.709, -79.57283 66.69442, -80.97315 66.6…    18    26.9 #> 11 LINESTRING (-78.167 48.709, -78.167 48.709, -78.167 48.709, -7…     0     0   eulerpole_greatcircles(por) #> Simple feature collection with 11 features and 1 field #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -89.991 xmax: 180 ymax: 89.991 #> Geodetic CRS:  WGS 84 #> # A tibble: 11 × 2 #>        d                                                                geometry #>  * <dbl>                                                          <GEOMETRY [°]> #>  1     0 LINESTRING (101.833 -48.709, 101.833 -48.609, 101.833 -48.509, 101.833… #>  2    36 LINESTRING (101.833 -48.709, 101.7441 -48.62806, 101.6554 -48.54706, 1… #>  3    72 LINESTRING (101.833 -48.709, 101.689 -48.67801, 101.5451 -48.64684, 10… #>  4   108 LINESTRING (101.833 -48.709, 101.6888 -48.73981, 101.5444 -48.77044, 1… #>  5   144 LINESTRING (101.833 -48.709, 101.7438 -48.78987, 101.6543 -48.87067, 1… #>  6     0 LINESTRING (101.833 -48.709, 101.833 -48.809, 101.833 -48.909, 101.833… #>  7    36 MULTILINESTRING ((101.833 -48.709, 101.9222 -48.78987, 102.0117 -48.87… #>  8    72 MULTILINESTRING ((101.833 -48.709, 101.9772 -48.73981, 102.1216 -48.77… #>  9   108 MULTILINESTRING ((101.833 -48.709, 101.977 -48.67801, 102.1209 -48.646… #> 10   144 MULTILINESTRING ((101.833 -48.709, 101.9219 -48.62806, 102.0106 -48.54… #> 11     0 MULTILINESTRING ((101.833 -48.709, 101.833 -48.609, 101.833 -48.509, 1… eulerpole_loxodromes(x = por, angle = 45, n = 10, cw = FALSE) #> Simple feature collection with 15 features and 1 field #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -82.82221 xmax: 180 ymax: 82.82221 #> Geodetic CRS:  WGS 84 #> # A tibble: 15 × 2 #>        d                                                                geometry #>  * <dbl>                                                          <GEOMETRY [°]> #>  1   108 LINESTRING (-78.07054 66.58404, -78.01693 66.51323, -77.96404 66.44238… #>  2   144 LINESTRING (101.6024 77.35336, 101.3391 77.42378, 101.0733 77.49398, 1… #>  3     0 LINESTRING (101.833 41.291, 101.7388 41.36167, 101.6444 41.43227, 101.… #>  4    36 LINESTRING (101.3044 5.933699, 101.2458 6.003953, 101.1871 6.074159, 1… #>  5    72 LINESTRING (101.6185 -30.1275, 101.5917 -30.05698, 101.5648 -29.98648,… #>  6   108 LINESTRING (101.7399 -48.5214, 101.7063 -48.4543, 101.6725 -48.38724, … #>  7   144 LINESTRING (101.5909 -48.59325, 101.5042 -48.55193, 101.4174 -48.5107,… #>  8     0 LINESTRING (101.5338 -48.70929, 101.4266 -48.70954, 101.3195 -48.70986… #>  9    36 LINESTRING (101.591 -48.82535, 101.5043 -48.86716, 101.4177 -48.90905,… #> 10    72 MULTILINESTRING ((101.7412 -48.89695, 101.7086 -48.96434, 101.6762 -49… #> 11   108 MULTILINESTRING ((101.9268 -48.89653, 101.961 -48.96356, 101.9956 -49.… #> 12   144 LINESTRING (102.0762 -48.82424, 102.1639 -48.86512, 102.2519 -48.9058,… #> 13     0 LINESTRING (102.1322 -48.70793, 102.2393 -48.70703, 102.3465 -48.70586… #> 14    36 LINESTRING (102.0739 -48.59215, 102.1596 -48.54991, 102.245 -48.50747,… #> 15    72 LINESTRING (101.9241 -48.52098, 101.9561 -48.45352, 101.9878 -48.38601… eulerpole_loxodromes(x = por, angle = 30, cw = TRUE) #> Simple feature collection with 13 features and 1 field #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -85.21953 xmax: 180 ymax: 85.21953 #> Geodetic CRS:  WGS 84 #> # A tibble: 13 × 2 #>        d                                                                geometry #>  * <dbl>                                                          <GEOMETRY [°]> #>  1   144 LINESTRING (101.5141 -47.93824, 101.4813 -47.85449, 101.4487 -47.77068… #>  2     0 LINESTRING (100.8943 -48.20753, 100.7944 -48.15215, 100.6949 -48.09657… #>  3    36 LINESTRING (100.6237 -48.6678, 100.4929 -48.66181, 100.3621 -48.65551,… #>  4    72 LINESTRING (100.8139 -49.14575, 100.7018 -49.19187, 100.5894 -49.23775… #>  5   108 LINESTRING (101.4023 -49.45697, 101.3538 -49.53763, 101.3048 -49.61821… #>  6   144 LINESTRING (102.1618 -49.47885, 102.1969 -49.5624, 102.2319 -49.64599,… #>  7     0 MULTILINESTRING ((102.7905 -49.20269, 102.8946 -49.25631, 102.9989 -49… #>  8    36 MULTILINESTRING ((103.044 -48.73753, 103.1752 -48.74063, 103.3065 -48.… #>  9    72 MULTILINESTRING ((102.8344 -48.26342, 102.9424 -48.21527, 103.0504 -48… #> 10   108 MULTILINESTRING ((102.251 -47.95948, 102.2967 -47.87845, 102.3424 -47.… #> 11   144 MULTILINESTRING ((101.833 -21.06283, 101.8579 -20.97623, 101.883 -20.8… #> 12     0 MULTILINESTRING ((101.833 41.291, 101.8996 41.37758, 101.9664 41.46413… #> 13    36 LINESTRING (-78.167 76.35517, -78.26446 76.26854, -78.36015 76.18185, … eulerpole_smallcircles(data.frame(lat = 30, lon = 10)) #> Simple feature collection with 11 features and 1 field #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -84 xmax: 180 ymax: 84 #> Geodetic CRS:  WGS 84 #> # A tibble: 11 × 2 #>                                                                   geometry     d #>  *                                                          <GEOMETRY [°]> <dbl> #>  1 LINESTRING (-170 -30, -170 -30, -170 -30, -170 -30, -170 -30, -170 -30…     0 #>  2 MULTILINESTRING ((-170 -12, -169.4314 -12.00774, -168.8632 -12.03093, …   -18 #>  3 MULTILINESTRING ((-170 6, -168.9363 5.985529, -167.8735 5.942134, -166…   -36 #>  4 MULTILINESTRING ((-170 24, -168.4063 23.97832, -166.8145 23.91332, -16…   -54 #>  5 MULTILINESTRING ((-170 42, -167.6973 41.96867, -165.3999 41.87482, -16…   -72 #>  6 MULTILINESTRING ((-170 60, -166.4035 59.95107, -162.8282 59.80475, -15…    90 #>  7 MULTILINESTRING ((-170 78, -161.8144 77.88851, -153.9057 77.56006, -14…    72 #>  8 LINESTRING (10 84, -3.638991 83.81339, -15.74781 83.28465, -25.60532 8…    54 #>  9 LINESTRING (10 66, 7.401912 65.96464, 4.822514 65.85889, 2.279844 65.6…    36 #> 10 LINESTRING (10 48, 9.169016 47.98869, 8.339768 47.9548, 7.51398 47.898…    18 #> 11 LINESTRING (10 30, 10 30, 10 30, 10 30, 10 30, 10 30, 10 30, 10 30, 10…     0"},{"path":"https://tobiste.github.io/tectonicr/reference/superimposed_shmax.html","id":null,"dir":"Reference","previous_headings":"","what":"SHmax direction resulting from multiple plate boundaries — superimposed_shmax","title":"SHmax direction resulting from multiple plate boundaries — superimposed_shmax","text":"Calculates \\(\\sigma_{Hmax}\\) direction given coordinates, sourced multiple plate boundaries. first-order approximation circular mean superimposed theoretical directions, weighted rotation rates underlying PoRs.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/superimposed_shmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SHmax direction resulting from multiple plate boundaries — superimposed_shmax","text":"","code":"superimposed_shmax(df, PoRs, types, absolute = TRUE, PoR_weighting = NULL)"},{"path":"https://tobiste.github.io/tectonicr/reference/superimposed_shmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SHmax direction resulting from multiple plate boundaries — superimposed_shmax","text":"df data.frame containing coordinates point(s) (lat, lon), direction \\(\\sigma_{Hmax}\\) azi (degrees) PoRs multirow data.frame \"euler.pole\" object must contain lat, lon angle types character vector length equal number rows PoRs. Type plate boundary. Must \"\", \"\", \"right\", \"left\" outward, inward, right-lateral, left-lateral moving plate boundaries, respectively. absolute logical. Whether resultant azimuth weighted using absolute rotation points angular rotation PoRs. PoR_weighting (optional) numeric vector length equal number rows PoRs. Extra weightings used PoRs.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/superimposed_shmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SHmax direction resulting from multiple plate boundaries — superimposed_shmax","text":"numeric. Resultant azimuth degrees geographical CRS","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/superimposed_shmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SHmax direction resulting from multiple plate boundaries — superimposed_shmax","text":"","code":"data(san_andreas) data(nuvel1) pors <- subset(nuvel1, plate.rot %in% c(\"eu\", \"na\")) superimposed_shmax(san_andreas, pors, types = c(\"in\", \"right\"), PoR_weighting = c(2, 1)) #>    [1] 109.21942 105.14570 105.29746 105.64951 106.30982 105.99733 106.59449 #>    [8] 106.60588 106.67391 106.49172 107.60195 107.62350 106.89011 108.22912 #>   [15] 108.85049 107.18473 108.41171 108.43000 107.36505 108.37538 108.48727 #>   [22] 105.95590 105.32995 105.05988 105.31072 105.26741 105.28205 105.52004 #>   [29] 105.46640 105.56822 106.28700 105.52233 106.44585 105.81804 105.97444 #>   [36] 105.79719 106.81349 106.58299 106.53782 105.97598 106.32228 105.68125 #>   [43] 106.46959 106.76564 106.44727 106.22236 106.56014 106.51451 106.46954 #>   [50] 106.29014 105.96883 106.81003 106.76445 106.53667 106.31245 106.87850 #>   [57] 106.83192 106.60468 106.62665 106.69360 106.60358 107.11657 106.69245 #>   [64] 106.75908 106.71411 106.73569 106.99389 108.35382 106.88792 108.50592 #>   [71] 108.68834 108.10523 108.87066 108.89074 108.74245 108.59518 108.90347 #>   [78] 107.07293 107.09243 108.78846 108.59415 108.75831 108.70947 108.61343 #>   [85] 108.53647 107.45594 108.40106 107.56589 107.52069 107.43000 107.38509 #>   [92] 107.60331 108.04889 106.98642 107.24309 107.41083 108.40049 109.14794 #>   [99] 109.00890 108.87981 105.20211 105.00968 105.24228 105.35503 105.54516 #>  [106] 105.32141 105.12042 105.61257 106.31765 106.22719 106.23982 106.19412 #>  [113] 105.70390 105.47507 105.72721 105.75095 106.23055 105.87284 105.69696 #>  [120] 105.77411 106.74407 106.69844 106.51490 106.46888 105.88560 105.74370 #>  [127] 106.67498 107.06921 106.97554 106.83614 106.42381 107.09162 106.44720 #>  [134] 105.85664 106.55998 106.82356 106.27818 106.83434 106.78769 106.24478 #>  [141] 106.15618 106.41312 106.85665 106.71898 106.67268 106.17857 106.13483 #>  [148] 107.48489 106.92427 106.78637 106.69504 106.55966 106.45743 106.10177 #>  [155] 107.50659 106.94601 106.90028 106.71787 106.58166 106.73969 106.64854 #>  [162] 106.50143 106.67072 106.58006 106.99969 106.90774 106.63537 106.78062 #>  [169] 106.80246 106.65587 106.91483 108.45149 108.39477 107.16928 107.07787 #>  [176] 106.98744 108.84131 108.79132 108.64371 108.54642 108.49712 107.04097 #>  [183] 106.99517 108.81141 108.76225 109.09391 108.97980 108.92934 108.94917 #>  [190] 108.85001 109.43376 108.66302 108.63447 108.59007 109.24509 108.80661 #>  [197] 108.47346 107.54056 107.78890 107.41090 108.70227 107.58480 107.53963 #>  [204] 107.44869 107.51314 108.24405 107.75579 107.06468 107.14143 107.39496 #>  [211] 104.61843 104.68492 109.18257 109.04971 109.08734 104.87359 105.08763 #>  [218] 105.28651 105.45777 105.22949 105.25354 106.11066 105.56394 105.54461 #>  [225] 106.08044 105.63607 106.39939 106.42220 106.50309 106.60580 105.84199 #>  [232] 105.56879 106.85969 105.95353 107.36442 106.88193 106.02014 105.99875 #>  [239] 107.06739 106.11064 106.58316 106.49228 106.17798 106.05609 106.58264 #>  [246] 107.02856 106.74093 106.36825 106.01334 107.55373 107.45956 107.57532 #>  [253] 106.73745 106.89350 106.84838 106.93608 107.71037 107.04795 106.95761 #>  [260] 106.91167 108.55541 106.90901 108.78621 108.56572 108.11795 107.36868 #>  [267] 108.88032 108.76629 109.00261 108.80577 108.64444 107.44888 108.61462 #>  [274] 107.15066 108.88210 108.27394 108.08505 107.34564 108.98356 108.88514 #>  [281] 107.46315 107.41702 108.66486 107.48199 108.16165 108.38280 107.70829 #>  [288] 107.55818 108.55487 108.18647 110.35544 104.98625 107.04100 105.40784 #>  [295] 105.51418 105.32084 106.35432 106.26319 106.21805 105.79491 106.59418 #>  [302] 107.03614 105.41566 106.42351 106.36672 105.65604 106.62959 106.49237 #>  [309] 106.51473 107.13675 106.13409 106.11151 106.95664 106.89841 106.21220 #>  [316] 108.14708 106.84188 106.74036 108.45752 106.86335 108.62441 108.69336 #>  [323] 108.86036 106.79972 108.69266 109.17031 108.97946 107.10041 108.83659 #>  [330] 107.37190 107.39115 107.54724 107.50108 108.51089 108.32153 108.44918 #>  [337] 107.47467 107.49456 108.23609 110.39610 108.32098 107.95433 106.33127 #>  [344] 108.35975 105.92930 106.14945 106.30804 105.92971 106.91797 106.46994 #>  [351] 106.74245 107.42813 105.88069 107.33688 107.00273 108.91991 108.66359 #>  [358] 108.30952 107.26642 108.93479 108.64281 109.11574 107.13990 107.61120 #>  [365] 107.86428 108.05837 107.32051 105.13067 105.19905 108.54996 108.27966 #>  [372] 109.30240 108.87957 106.92915 106.84838 109.48603 106.99763 108.39046 #>  [379] 114.04815 108.75527 109.42961 108.66237 103.41618 106.72085 108.19641 #>  [386] 112.98909 109.55519 108.56460 109.42615 109.57618 112.77471 107.52786 #>  [393] 106.65253 107.11356 108.40005 108.38139 108.63675 108.38457 108.27834 #>  [400] 108.92340 100.53711 110.63940 109.25548 108.75668 109.36141 106.61289 #>  [407] 106.83973 107.46796 108.23817 110.74513 107.51012 104.99090  98.65584 #>  [414]  98.65584  95.47403 100.53711 100.15395 100.58437  99.25156  99.25156 #>  [421]  99.13247  95.20891  98.36966  98.36966  98.22115  97.90407  96.37962 #>  [428] 101.03158  99.32329 110.90244 111.30380 111.82460 106.12249 110.99682 #>  [435] 108.83374 108.43560 111.49893 108.87738 108.50194 108.65109 111.66267 #>  [442] 108.85380 108.45522 107.19482 108.64302 108.42253 108.64310 108.48012 #>  [449] 107.76818 103.94010 108.27232 108.26593 108.60944 107.17345 107.57536 #>  [456] 110.00990 108.64307  97.51008 109.27422 100.72200 108.27525 107.56388 #>  [463] 108.37159 112.41896 109.68729 109.61121 108.77789 105.54526 104.86003 #>  [470] 108.49380 112.60137 111.39259 109.74258 110.10215 103.11680 106.87316 #>  [477] 112.03784 112.16450 110.14728 111.68088 109.68640 111.22647 109.08350 #>  [484] 108.49582 107.63149 109.33730 109.76856 109.01868 108.43070 112.77471 #>  [491] 108.87638 108.87625 108.87638 110.17733 109.41961 109.00796 108.77936 #>  [498] 108.36381 107.36649 109.47911 105.52237 110.08896 109.00754 108.81403 #>  [505] 107.06542 112.10853 110.83974 107.07724 107.75002 108.37209 111.53473 #>  [512] 111.43754 108.71410 108.95808 107.76022 108.46846 108.55495 106.40912 #>  [519] 112.64356 111.04523 103.23423 109.46508 109.72225 105.45540 105.14917 #>  [526] 107.04504 107.76201 107.07659 108.88987 108.71552 106.91715 108.65988 #>  [533] 108.39953 108.45680 108.22953 108.94566 108.40918 108.37873 109.37574 #>  [540] 107.78784 107.84628 110.94859 110.90216 108.87659 108.87659 111.96995 #>  [547] 108.30342 108.31131 109.78231 111.61861 110.05790 108.81340 110.12911 #>  [554] 108.26827 107.57287 108.46465 109.56712 108.81382 108.98037 107.62198 #>  [561] 108.88491 111.37729 107.67912 110.96098 111.74566 111.48246 109.73814 #>  [568] 109.66651 109.19380 108.89241 109.66995 111.94294 113.10401 112.98437 #>  [575] 112.95308 113.05325 108.94990 109.12695 108.79932 108.28912 113.78696 #>  [582] 109.96957 106.89391  95.67736 110.05826 108.62394 108.34411 108.96350 #>  [589] 111.38057 111.54110 111.77359 111.67127 109.77644 106.71511 106.02020 #>  [596] 105.93157 105.83742 105.83132 105.81135 105.97196 105.96741 106.00211 #>  [603] 106.03545 106.10131 106.09622 105.99631 106.12933 106.19270 106.22429 #>  [610] 105.42368 109.68632 109.95517 111.07195 111.23900 113.58187 113.96857 #>  [617] 109.80392 108.54446 110.97801 111.22649 109.54340 105.57092 105.76603 #>  [624] 105.41796 109.21334 112.60176 110.37595 108.92686 110.34598 110.05867 #>  [631] 107.90958 101.30121  94.96085  95.95741  97.41411  97.38821 101.61004 #>  [638]  99.77794  98.58509  98.07635 103.12757 103.12629  96.11467  96.90419 #>  [645]  96.23166  96.13436 104.02722 110.86367 110.33932 112.36478 109.70857 #>  [652] 109.84159 102.52349 102.92278 103.37176 103.06715 109.76602 110.92278 #>  [659] 105.99706 111.90043 111.87071 110.52881 111.94184 111.23583 110.53665 #>  [666] 110.60614 109.81374 108.75525 105.07548 103.47766 105.73299 107.51105 #>  [673] 105.76860 105.63058 103.49083 110.73444 105.99631 105.94608 113.42005 #>  [680] 111.20933 110.19762 111.27170 106.67343 112.53756 109.43458 108.20258 #>  [687] 108.71549 108.77080  96.31235  96.31540  97.28362  97.78331  96.25180 #>  [694] 110.43852 110.98069 110.84234  95.30180  94.89025  96.87392 101.40950 #>  [701] 113.64683 107.03162 110.25718 108.65251  95.65838  96.78635  95.37717 #>  [708]  95.23164  98.04821 104.66942 104.21330 104.38896 106.91160  94.35614 #>  [715]  94.32966  96.50542  97.96777 109.67997 109.65270 109.57606 111.20879 #>  [722] 111.20602 109.89319 100.59627 102.82606  95.03687  97.86983  97.84677 #>  [729]  95.18970  95.21859 109.57721 101.21128 111.30157 105.36058 112.97935 #>  [736] 108.33777  96.17647  96.12516  96.14003  96.13082  96.24251  96.20561 #>  [743]  96.20324  96.20277  96.66319  97.60048  94.77321  96.98147  96.67663 #>  [750]  95.23116  98.90086  98.37247  95.81926  98.43946  98.42291 100.03256 #>  [757]  95.26571  97.60048  97.52700  97.65762 100.05963 100.05225  97.59499 #>  [764] 102.76029  97.68616 102.30901  97.75207 102.51584 102.46055 104.55343 #>  [771]  96.78675  96.93490  95.89902  99.78964  99.77466  96.55788  98.87697 #>  [778]  96.74187  94.91313  99.74665  98.81590  94.87286  98.72422  98.36394 #>  [785]  99.24985  98.12455  99.13278  98.39091  99.29687  99.38589  99.31675 #>  [792]  99.42583  99.37502  99.37335  94.80459  98.36762  99.36296  99.36433 #>  [799]  95.23269  99.14527  98.59610 104.59642 104.57905 104.60933 104.60511 #>  [806] 101.83814 101.60197 104.51400 113.18006  96.05110 102.31603 106.86909 #>  [813]  98.02341  97.99207 107.18408  94.98427  95.23874 105.52749  96.48086 #>  [820]  96.42013  96.35197 101.32315 100.71553 101.58006 101.36711 104.50586 #>  [827] 109.24726 109.24726 109.24726  94.75066  95.08363  97.54974 100.74964 #>  [834] 104.51534 104.43673 104.97518 104.97465 104.03370 104.38073 104.03352 #>  [841] 104.98338 104.98338 104.92334  96.63005 105.05454  95.31745 105.91913 #>  [848] 104.27365 101.83538 104.58946  95.52745  95.61623  95.59718  95.60310 #>  [855]  95.74210  95.69291  95.72298  95.70449  94.38376  96.61903 104.31648 #>  [862]  97.30142 109.23611  98.49441 104.15800  96.31146  96.47455  96.46523 #>  [869]  96.50557  96.34589 111.62089  98.80732  98.85440 100.60139  98.96849 #>  [876]  96.12097  96.26377 110.37964 113.39853  98.06019 102.31131 100.72190 #>  [883]  95.08378 104.37206  96.06533 105.18088 104.95310 102.35143  96.46635 #>  [890]  96.32555  96.45405  94.78460  94.82576  96.22866  98.14225 110.06194 #>  [897]  96.16748 105.15864  95.35317  96.97174  97.22206  97.06813 111.02716 #>  [904] 107.99851 102.10219  95.23677  97.24382 103.80182 112.98444 105.12487 #>  [911] 108.95128 102.33953 102.48071 102.23586 106.89182 101.68467 103.03176 #>  [918]  95.20738  97.11866  99.03174 112.20244 102.56547 102.55747 102.58597 #>  [925] 102.43624 102.51145  94.84895 105.39240  95.59415 110.12155 103.98775 #>  [932] 109.84575  94.83319 113.03543 113.01094 112.94009 112.95330 113.03179 #>  [939] 112.95020 112.94609 113.02109 112.95428 112.96419 112.98502 113.00024 #>  [946] 112.94889 112.98729 112.97740 113.03795 113.01326 112.98874 112.95841 #>  [953] 112.96377 112.95616 112.89771 112.95568 112.98195 112.99032 112.98190 #>  [960] 112.94595 112.95230 113.00770 112.99447 112.95536 112.89807 112.89807 #>  [967] 112.95524 112.99392 113.01458 108.40087 106.64284 107.77233 107.06685 #>  [974] 108.53671 108.43511 108.77010 108.40843 104.54075 108.17402 108.76707 #>  [981] 108.38820 110.03600 110.81505 108.44268 108.40105 107.60931 110.82801 #>  [988] 108.70545 106.85469 108.81403 108.72803 107.59703 104.86003 105.52237 #>  [995] 112.60137 112.03784 112.16450 109.78231 110.07568 110.14728 109.30240 #> [1002] 109.47911 109.33730 111.67474 111.43754 108.46244 110.10215 110.82801 #> [1009] 110.03600 109.61121 109.37574 108.65109 108.28912 109.42961 108.29748 #> [1016] 107.51455 107.60931 107.63149 108.40015 109.02705 108.44200 113.54666 #> [1023] 106.85469 100.25371 104.51157 109.97921 112.66751 107.70627 113.02575 #> [1030] 112.33782 100.16180 109.84260 110.54186 113.17305 110.37205 107.74950 #> [1037] 103.79683 103.40024 104.28513 104.45914 104.53122 108.86054 108.99890 #> [1044] 110.72181 111.48381 111.43135 104.04570 110.82416 112.61565 111.15462 #> [1051] 104.56922 107.48448 110.53608 110.66041 106.58151 105.79740 106.11858 #> [1058] 106.47905 106.45453 110.34231 109.22228 109.64929 109.33655 109.76239 #> [1065] 109.91682 107.06406 110.90912 111.43868 112.15952 113.15235 113.30567 #> [1072] 110.59506 111.74232 110.86939 106.77517 109.64459 107.80560 104.28775 #> [1079] 109.73126 109.62040 107.46655 105.61911"},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Colors for input variables — tectonicr.colors","title":"Colors for input variables — tectonicr.colors","text":"assigns colors continuous categorical values plotting","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colors for input variables — tectonicr.colors","text":"","code":"tectonicr.colors(   x,   n = 10,   pal = NULL,   categorical = FALSE,   na.value = \"grey\",   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Colors for input variables — tectonicr.colors","text":"x values color assignment n integer. number colors continuous colors (.e. `categorical = FALSE``). pal either named vector specifying colors categorical values, color function. NULL, default colors RColorBrewer::brewer.pal() (categorical = TRUE) viridis::viridis() (categorical = FALSE). categorical logical. na.value color NA values (categorical). ... optional arguments passed palette function","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Colors for input variables — tectonicr.colors","text":"named color vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Colors for input variables — tectonicr.colors","text":"","code":"val1 <- c(\"N\", \"S\", \"T\", \"T\", NA) tectonicr.colors(val1, categorical = TRUE) #>         N         S         T         T      <NA>  #> \"#66C2A5\" \"#FC8D62\" \"#8DA0CB\" \"#8DA0CB\"    \"grey\"  tectonicr.colors(val1, pal = stress_colors(), categorical = TRUE) #>         N         S         T         T      <NA>  #> \"#D55E00\" \"#009E73\" \"#0072B2\" \"#0072B2\"    \"grey\"   val2 <- runif(10) tectonicr.colors(val2, n = 5) #>   [0.1,0.2]   (0.7,0.8]   (0.2,0.3]   [0.1,0.2]   (0.5,0.6]   (0.4,0.5]  #> \"#440154FF\" \"#FDE725FF\" \"#443A83FF\" \"#440154FF\" \"#35B779FF\" \"#21908CFF\"  #>   (0.6,0.7]   (0.2,0.3]   (0.6,0.7]   (0.3,0.4]  #> \"#8FD744FF\" \"#443A83FF\" \"#8FD744FF\" \"#31688EFF\""},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.html","id":null,"dir":"Reference","previous_headings":"","what":"library(tectonicr) — tectonicr","title":"library(tectonicr) — tectonicr","text":"Modeling Direction Maximum Horizontal Stress using Relative Plate Motion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"library(tectonicr) — tectonicr","text":"details theoretical background provided Wdowinski (1998) Stephan et al. (2023).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"library(tectonicr) — tectonicr","text":"list documented functions may viewed typing help(package=\"tectonicr\").","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"library(tectonicr) — tectonicr","text":"Wdowinski (1998) \"theory intraplate tectonics\". JGR: Solid Earth, 103(3), 5037<U+2013>5059. Stephan, T., Enkelmann, E., Kroner, U. \"Analyzing horizontal orientation crustal stress adjacent plate boundaries\". Sci Rep 13. 15590 (2023).","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"library(tectonicr) — tectonicr","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/tibet.html","id":null,"dir":"Reference","previous_headings":"","what":"Example stress data for inward-moving displaced plate boundary — tibet","title":"Example stress data for inward-moving displaced plate boundary — tibet","text":"Subset World Stress Map (WSM) compilation information crustal present-day stress field (Version 1.1. 2019). Subset contains stress data Himalaya Tibetan plateau","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/tibet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example stress data for inward-moving displaced plate boundary — tibet","text":"","code":"data('tibet')"},{"path":"https://tobiste.github.io/tectonicr/reference/tibet.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example stress data for inward-moving displaced plate boundary — tibet","text":"object class \"sf\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/tibet.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example stress data for inward-moving displaced plate boundary — tibet","text":"https://www.world-stress-map.org/","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/tibet.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example stress data for inward-moving displaced plate boundary — tibet","text":"Heidbach, O., M. Rajabi, X. Cui, K. Fuchs, B. M<U+00FC>ller, J. Reinecker, K. Reiter, M. Tingay, F. Wenzel, F. Xie, M. O. Ziegler, M.-L. Zoback, M. D. Zoback (2018): World Stress Map database release 2016: Crustal stress pattern across scales. Tectonophysics, 744, 484-498, doi:10.1016/j.tecto.2018.07.007 .","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/tibet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example stress data for inward-moving displaced plate boundary — tibet","text":"","code":"data(\"tibet\") head(tibet) #> Simple feature collection with 6 features and 11 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 78.5 ymin: 29.5 xmax: 97.35 ymax: 43.9 #> Geodetic CRS:  WGS 84 #> # A tibble: 6 × 12 #>   id         lat   lon   azi   unc type  depth quality regime Name   Description #>   <chr>    <dbl> <dbl> <dbl> <dbl> <chr> <dbl> <fct>   <chr>  <chr>  <chr>       #> 1 wsm36451  40.8  97.1    19     4 GFI       0 A       NS     zoom_… \"\"          #> 2 wsm36456  43.9  87.7   171     5 GFI       0 A       S      zoom_… \"\"          #> 3 wsm38778  29.5  78.5   151     9 FMF      10 A       N      zoom_… \"\"          #> 4 wsm36516  43.8  87.5     2    11 GFI       0 A       T      zoom_… \"\"          #> 5 wsm38784  30.4  79.3    40    11 FMF      20 A       T      zoom_… \"\"          #> 6 wsm36525  40.8  97.3    18    12 GFI       0 A       S      zoom_… \"\"          #> # ℹ 1 more variable: geometry <POINT [°]>"},{"path":"https://tobiste.github.io/tectonicr/reference/trigon.html","id":null,"dir":"Reference","previous_headings":"","what":"Trigonometric Functions in Degrees — trigon","title":"Trigonometric Functions in Degrees — trigon","text":"Trigonometric functions expecting input degrees.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/trigon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trigonometric Functions in Degrees — trigon","text":"","code":"sind(x)  cosd(x)  tand(x)  asind(x)  acosd(x)  atand(x)  atan2d(x1, x2)  cot(x)  cotd(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/trigon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trigonometric Functions in Degrees — trigon","text":"x, x1, x2 Numeric complex vectors.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/trigon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trigonometric Functions in Degrees — trigon","text":"scalar vector numeric values.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vcross.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector cross product — vcross","title":"Vector cross product — vcross","text":"Vector cross product","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vcross.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector cross product — vcross","text":"","code":"vcross(x, y)"},{"path":"https://tobiste.github.io/tectonicr/reference/vcross.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector cross product — vcross","text":"x, y numeric vectors length 3","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vcross.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector cross product — vcross","text":"numeric vector length 3","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vcross.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vector cross product — vcross","text":"","code":"vcross(c(1, 2, 3), c(4, 5, 6)) #> [1] -3  6 -3"},{"path":"https://tobiste.github.io/tectonicr/reference/vonmises.html","id":null,"dir":"Reference","previous_headings":"","what":"The von Mises Distribution — vonmises","title":"The von Mises Distribution — vonmises","text":"Density, distribution function, random generation circular normal distribution mean kappa.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vonmises.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The von Mises Distribution — vonmises","text":"","code":"rvm(n, mean, kappa)  dvm(theta, mean, kappa)  pvm(theta, mean, kappa)"},{"path":"https://tobiste.github.io/tectonicr/reference/vonmises.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The von Mises Distribution — vonmises","text":"n number observations degrees mean mean degrees kappa concentration parameter theta angular value degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vonmises.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The von Mises Distribution — vonmises","text":"numeric vector.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vonmises.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The von Mises Distribution — vonmises","text":"","code":"x <- rvm(100, mean = 90, k = 100) dvm(x, mean = 90, k = 100) #>   [1] 1.74077034 0.75999878 3.85348157 3.60524173 1.98293986 2.65021967 #>   [7] 3.34413502 1.79598739 3.72426417 2.45421493 1.33298842 2.72918673 #>  [13] 3.20222500 3.61806809 3.78599227 3.63680907 3.98431544 2.02407636 #>  [19] 3.95228098 3.39548753 0.05638885 1.89901231 3.91348034 3.92271528 #>  [25] 3.96131402 3.97960307 3.92574770 3.98036188 3.81359435 3.93319843 #>  [31] 2.69892764 3.98378325 3.81429038 3.58876126 3.97325078 1.38966263 #>  [37] 3.22499675 3.31079614 0.89474149 2.23115477 3.34116536 2.61410886 #>  [43] 2.76095135 3.97783348 3.92251127 3.12353112 0.14876005 3.89439210 #>  [49] 3.75075447 2.40733840 3.01108656 3.81552158 3.02130761 2.32910820 #>  [55] 2.59979898 3.38789416 3.32200102 3.98225389 3.31454099 3.57830444 #>  [61] 2.04928306 3.95303496 3.84018521 2.99244038 3.26152171 3.37128593 #>  [67] 2.45405780 0.89542114 3.39518182 1.59337202 2.40221529 3.58547076 #>  [73] 3.66388437 1.19529141 3.40213510 1.57914971 2.96482039 1.38982162 #>  [79] 0.43715110 3.01701291 2.27020311 2.68717997 3.02538161 3.94083210 #>  [85] 3.79249841 2.18095946 3.58986640 3.69464242 0.44951566 1.95991945 #>  [91] 3.41519222 0.57341996 0.40490298 3.40373623 2.45420333 1.89958200 #>  [97] 3.75623348 3.83239726 2.33576168 1.72619546"},{"path":"https://tobiste.github.io/tectonicr/reference/watson_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Watson's \\(U^2\\) Test of Circular Uniformity — watson_test","title":"Watson's \\(U^2\\) Test of Circular Uniformity — watson_test","text":"Watson's test circular random distribution.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/watson_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Watson's \\(U^2\\) Test of Circular Uniformity — watson_test","text":"","code":"watson_test(   x,   alpha = 0,   dist = c(\"uniform\", \"vonmises\"),   axial = TRUE,   mu = NULL )"},{"path":"https://tobiste.github.io/tectonicr/reference/watson_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Watson's \\(U^2\\) Test of Circular Uniformity — watson_test","text":"x numeric vector. Values degrees alpha Significance level test. Valid levels 0.01, 0.05, 0.1. argument may omitted (NULL, default), case, range p-value returned. dist Distribution test . default, \"uniform\", uniform distribution. \"vonmises\" tests von Mises distribution. axial logical. Whether data axial, .e. \\(\\pi\\)-periodical (TRUE, default) circular, .e. \\(2 \\pi\\)-periodical (FALSE). mu (optional) specified known mean direction (degrees) alternative hypothesis","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/watson_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Watson's \\(U^2\\) Test of Circular Uniformity — watson_test","text":"list containing test statistic statistic significance level p.value.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/watson_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Watson's \\(U^2\\) Test of Circular Uniformity — watson_test","text":"Watson's test statistic rotation-invariant Cramer - von Mises test statistic. statistic > p.value, null hypothesis rejected. , randomness (uniform distribution) excluded.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/watson_test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Watson's \\(U^2\\) Test of Circular Uniformity — watson_test","text":"Mardia Jupp (2000). Directional Statistics. John Wiley Sons.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/watson_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Watson's \\(U^2\\) Test of Circular Uniformity — watson_test","text":"","code":"# Example data from Mardia and Jupp (2001), pp. 93 pidgeon_homing <- c(55, 60, 65, 95, 100, 110, 260, 275, 285, 295) watson_test(pidgeon_homing, alpha = .05) #> Do Not Reject Null Hypothesis #> $statistic #> [1] 0.1153633 #>  #> $p.value #> [1] 0.187 #>   # San Andreas Fault Data: data(san_andreas) data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") watson_test(sa.por$azi.PoR, alpha = .05) #> Reject Null Hypothesis #> $statistic #> [1] 50.38975 #>  #> $p.value #> [1] 0.187 #>  watson_test(sa.por$azi.PoR, alpha = .05, dist = \"vonmises\") #> Reject Null Hypothesis #> $statistic #> [1] 5.219359 #>  #> $p.value #> [1] 0.113 #>"},{"path":"https://tobiste.github.io/tectonicr/reference/weighted_rayleigh.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Goodness-of-fit Test for Circular Data — weighted_rayleigh","title":"Weighted Goodness-of-fit Test for Circular Data — weighted_rayleigh","text":"Weighted version Rayleigh test (V0-test) uniformity distribution priori expected von Mises concentration.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/weighted_rayleigh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Goodness-of-fit Test for Circular Data — weighted_rayleigh","text":"","code":"weighted_rayleigh(x, prd = NULL, unc, axial = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/weighted_rayleigh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Goodness-of-fit Test for Circular Data — weighted_rayleigh","text":"x numeric vector. Values degrees prd priori expected direction (degrees) alternative hypothesis. unc numeric. standard deviations x. NULL, non-weighted Rayleigh test performed. axial logical. Whether data axial, .e. \\(\\pi\\)-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/weighted_rayleigh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Goodness-of-fit Test for Circular Data — weighted_rayleigh","text":"list components: statistic Test statistic p.value significance level test statistic","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/weighted_rayleigh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted Goodness-of-fit Test for Circular Data — weighted_rayleigh","text":"Null hypothesis uniformity (randomness). alternative distribution specified mean direction (prd). statistic > p.value, null hypothesis rejected. , alternative excluded.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/weighted_rayleigh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted Goodness-of-fit Test for Circular Data — weighted_rayleigh","text":"","code":"# Load data data(\"cpm_models\") data(san_andreas) PoR <- equivalent_rotation(subset(cpm_models, model == \"NNR-MORVEL56\"), \"na\", \"pa\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") data(\"iceland\") PoR.ice <- equivalent_rotation(subset(cpm_models, model == \"NNR-MORVEL56\"), \"eu\", \"na\") ice.por <- PoR_shmax(iceland, PoR.ice, \"out\") data(\"tibet\") PoR.tib <- equivalent_rotation(subset(cpm_models, model == \"NNR-MORVEL56\"), \"eu\", \"in\") tibet.por <- PoR_shmax(tibet, PoR.tib, \"in\")  # GOF test: weighted_rayleigh(tibet.por$azi.PoR, prd = 90, unc = tibet$unc) #> Reject Null Hypothesis #> $statistic #> [1] 0.5409346 #>  #> $p.value #> [1] 3.802812e-08 #>  weighted_rayleigh(ice.por$azi.PoR, prd = 0, unc = iceland$unc) #> Reject Null Hypothesis #> $statistic #> [1] 0.4162169 #>  #> $p.value #> [1] 0.0007121859 #>  weighted_rayleigh(sa.por$azi.PoR, prd = 135, unc = san_andreas$unc) #> Reject Null Hypothesis #> $statistic #> [1] 0.8046196 #>  #> $p.value #> [1] 2.491718e-47 #>"},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-0298-2024-04-07","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.98 2024-04-07","title":"tectonicr 0.2.98 2024-04-07","text":"minor fixes","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-0297-2024-04-07","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.97 2024-04-07","title":"tectonicr 0.2.97 2024-04-07","text":"kernel_dispersion() (former dispersion_gird()) explained vignette E","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-0296-2023-10-15","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.96 2023-10-15","title":"tectonicr 0.2.96 2023-10-15","text":"cran update","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-0295-2023-10-15","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.95 2023-10-15","title":"tectonicr 0.2.95 2023-10-15","text":"CRAN release: 2023-11-02 bug fixes rose() (e.g. symmetrical fans axial data plotted) weighted rose diagram enabled add single line fans rose() add mean confidence interval rose() corrected typos manual estimate kappa von Mises distribution:est.kapp() doubling angles testing Watson distribution watson_test()","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-0294-2023-09-25","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.94 2023-09-25","title":"tectonicr 0.2.94 2023-09-25","text":"mean direction spread rose diagram (rose())","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-0293-2023-09-10","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.93 2023-09-10","title":"tectonicr 0.2.93 2023-09-10","text":"CRAN release: 2023-09-22 prepared CRAN submission bootstrap statistics circular dispersion multiple angles input circular dispersion daughter functions spatial distribution dispersion","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-0292-2023-05-16","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.92 2023-05-16","title":"tectonicr 0.2.92 2023-05-16","text":"statistical tests circular uniformity goodness--fit bug fixes","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-028-2023-03-01","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.8 2023-03-01","title":"tectonicr 0.2.8 2023-03-01","text":"estimator error predictions area-weighted rose diagrams","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-027-2023-01-25","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.7 2023-01-25","title":"tectonicr 0.2.7 2023-01-25","text":"optimized functions better performance bug fixes","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-026-2023-01-06","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.6 2023-01-06","title":"tectonicr 0.2.6 2023-01-06","text":"distance plate boundary km coordinate transformation using quaternions plot transformed azimuth vs. distance plate boundary quick plotting","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-025","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.5","title":"tectonicr 0.2.5","text":"Calculation rotation replaced quaternions boost performance “sp” class output small circles, great circles loxodromes deprecated new functions added calculate mean/median stress direction, e.g. weighted mean","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-01","dir":"Changelog","previous_headings":"","what":"tectonicr 0.1","title":"tectonicr 0.1","text":"new functions rotate stress directions data points PoR coordinate system calculate distance data point plate boundaries Added functions calculate relative plate motions set absolute plate motions different relative plate motions","code":""}]
